[
    {
        "question": "If a star has an apparent magnitude of 12.953888754619735 in the V-band from Earth, and is located at a distance of 9226.145626929874 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.953888754619735\ndistance = 9226.145626929874\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.8712127718731573"
    },
    {
        "question": "If a star has an apparent magnitude of 0.9955083259032305 in the V-band from Earth, and is located at a distance of 7251.998805058126 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.9955083259032305\ndistance = 7251.998805058126\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.306780293411654"
    },
    {
        "question": "If a star has an apparent magnitude of 7.276995434406041 in the V-band from Earth, and is located at a distance of 1815.332779468379 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.276995434406041\ndistance = 1815.332779468379\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.017785814490962"
    },
    {
        "question": "If a star has an apparent magnitude of 7.622300395248324 in the V-band from Earth, and is located at a distance of 9342.811179210677 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.622300395248324\ndistance = 9342.811179210677\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.230087463377423"
    },
    {
        "question": "If a star has an apparent magnitude of 5.1514349836629965 in the V-band from Earth, and is located at a distance of 5217.922238845555 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.1514349836629965\ndistance = 5217.922238845555\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.436053029586988"
    },
    {
        "question": "If a star has an apparent magnitude of 7.254353149728495 in the V-band from Earth, and is located at a distance of 5089.792385023453 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.254353149728495\ndistance = 5089.792385023453\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.279147188401658"
    },
    {
        "question": "If a star has an apparent magnitude of 9.90468415363619 in the V-band from Earth, and is located at a distance of 8072.616216373193 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.90468415363619\ndistance = 8072.616216373193\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.630387376355966"
    },
    {
        "question": "If a star has an apparent magnitude of 12.013516841896845 in the V-band from Earth, and is located at a distance of 9080.620416086098 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.013516841896845\ndistance = 9080.620416086098\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.7770607674915464"
    },
    {
        "question": "If a star has an apparent magnitude of 10.466412190380982 in the V-band from Earth, and is located at a distance of 8863.391306128944 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.466412190380982\ndistance = 8863.391306128944\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.2715874256775415"
    },
    {
        "question": "If a star has an apparent magnitude of 9.709882824347728 in the V-band from Earth, and is located at a distance of 4761.387995577724 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.709882824347728\ndistance = 4761.387995577724\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.67878503899278"
    },
    {
        "question": "If a star has an apparent magnitude of 2.055884594330186 in the V-band from Earth, and is located at a distance of 8382.449195473673 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.055884594330186\ndistance = 8382.449195473673\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.560970055307832"
    },
    {
        "question": "If a star has an apparent magnitude of 13.454769194289435 in the V-band from Earth, and is located at a distance of 6379.737930964429 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.454769194289435\ndistance = 6379.737930964429\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.5692450006693051"
    },
    {
        "question": "If a star has an apparent magnitude of 3.7082292152016523 in the V-band from Earth, and is located at a distance of 1608.6850479686145 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.7082292152016523\ndistance = 1608.6850479686145\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.324125911079201"
    },
    {
        "question": "If a star has an apparent magnitude of 12.814938060072928 in the V-band from Earth, and is located at a distance of 7645.089719161225 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.814938060072928\ndistance = 7645.089719161225\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.6019748721926437"
    },
    {
        "question": "If a star has an apparent magnitude of 2.99611713600299 in the V-band from Earth, and is located at a distance of 1568.0863583821797 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.99611713600299\ndistance = 1568.0863583821797\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.9807327473720235"
    },
    {
        "question": "If a star has an apparent magnitude of 14.881528775621762 in the V-band from Earth, and is located at a distance of 1566.862168074927 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.881528775621762\ndistance = 1566.862168074927\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "3.906374802459551"
    },
    {
        "question": "If a star has an apparent magnitude of 5.470863692338459 in the V-band from Earth, and is located at a distance of 3677.6223337930314 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.470863692338459\ndistance = 3677.6223337930314\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.356971948524239"
    },
    {
        "question": "If a star has an apparent magnitude of 13.876832106850896 in the V-band from Earth, and is located at a distance of 7353.130178003086 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.876832106850896\ndistance = 7353.130178003086\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.45552916656006737"
    },
    {
        "question": "If a star has an apparent magnitude of 11.906698065483557 in the V-band from Earth, and is located at a distance of 21.82376106845372 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.906698065483557\ndistance = 21.82376106845372\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "10.21205007424994"
    },
    {
        "question": "If a star has an apparent magnitude of 14.587337859201323 in the V-band from Earth, and is located at a distance of 1365.4883739293152 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.587337859201323\ndistance = 1365.4883739293152\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "3.9108978251412694"
    },
    {
        "question": "If a star has an apparent magnitude of 9.537494138632203 in the V-band from Earth, and is located at a distance of 8629.520230763037 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.537494138632203\ndistance = 8629.520230763037\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.14243911750807"
    },
    {
        "question": "If a star has an apparent magnitude of 6.569369595218583 in the V-band from Earth, and is located at a distance of 2444.580140458668 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.569369595218583\ndistance = 2444.580140458668\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.371651801139193"
    },
    {
        "question": "If a star has an apparent magnitude of 4.691642893131319 in the V-band from Earth, and is located at a distance of 3802.099699166292 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.691642893131319\ndistance = 3802.099699166292\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.208474610902012"
    },
    {
        "question": "If a star has an apparent magnitude of 4.901001321850807 in the V-band from Earth, and is located at a distance of 262.4864733574153 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.901001321850807\ndistance = 262.4864733574153\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.194533317857238"
    },
    {
        "question": "If a star has an apparent magnitude of 11.012729607740958 in the V-band from Earth, and is located at a distance of 3271.1679996737807 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.012729607740958\ndistance = 3271.1679996737807\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.5607846375823442"
    },
    {
        "question": "If a star has an apparent magnitude of 1.349211840068893 in the V-band from Earth, and is located at a distance of 6362.223203571525 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.349211840068893\ndistance = 6362.223203571525\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.668832666103963"
    },
    {
        "question": "If a star has an apparent magnitude of 11.989357980612793 in the V-band from Earth, and is located at a distance of 6385.532620196637 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.989357980612793\ndistance = 6385.532620196637\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.0366276584455196"
    },
    {
        "question": "If a star has an apparent magnitude of 6.374584055726463 in the V-band from Earth, and is located at a distance of 3037.6650723964267 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.374584055726463\ndistance = 3037.6650723964267\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.038115382380215"
    },
    {
        "question": "If a star has an apparent magnitude of 10.095643320017937 in the V-band from Earth, and is located at a distance of 6946.659266621787 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.095643320017937\ndistance = 6946.659266621787\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.113236666325143"
    },
    {
        "question": "If a star has an apparent magnitude of 2.79541076788443 in the V-band from Earth, and is located at a distance of 4456.0902661174805 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.79541076788443\ndistance = 4456.0902661174805\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.449359130466"
    },
    {
        "question": "If a star has an apparent magnitude of 10.073072737812316 in the V-band from Earth, and is located at a distance of 8595.003467885688 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.073072737812316\ndistance = 8595.003467885688\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.598157543442257"
    },
    {
        "question": "If a star has an apparent magnitude of 5.962557315198501 in the V-band from Earth, and is located at a distance of 7193.884014566629 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.962557315198501\ndistance = 7193.884014566629\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.322259842316992"
    },
    {
        "question": "If a star has an apparent magnitude of 1.9123983800727014 in the V-band from Earth, and is located at a distance of 2787.748535216866 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.9123983800727014\ndistance = 2787.748535216866\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.31386960139519"
    },
    {
        "question": "If a star has an apparent magnitude of 1.9053884280494633 in the V-band from Earth, and is located at a distance of 242.9342878828897 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.9053884280494633\ndistance = 242.9342878828897\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.022055650451712"
    },
    {
        "question": "If a star has an apparent magnitude of 11.165833275060958 in the V-band from Earth, and is located at a distance of 207.64965686644004 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.165833275060958\ndistance = 207.64965686644004\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "4.5791771861082555"
    },
    {
        "question": "If a star has an apparent magnitude of 13.95352866373506 in the V-band from Earth, and is located at a distance of 3548.89138942319 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.95352866373506\ndistance = 3548.89138942319\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.2030651219082813"
    },
    {
        "question": "If a star has an apparent magnitude of 9.073452109776955 in the V-band from Earth, and is located at a distance of 1597.9486636268762 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.073452109776955\ndistance = 1597.9486636268762\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.9443620045944598"
    },
    {
        "question": "If a star has an apparent magnitude of 5.979124474097695 in the V-band from Earth, and is located at a distance of 3014.0946841893974 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.979124474097695\ndistance = 3014.0946841893974\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.416659981082514"
    },
    {
        "question": "If a star has an apparent magnitude of 5.172471724639285 in the V-band from Earth, and is located at a distance of 4908.946932636106 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.172471724639285\ndistance = 4908.946932636106\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.282469961641402"
    },
    {
        "question": "If a star has an apparent magnitude of 2.1109291773864003 in the V-band from Earth, and is located at a distance of 4169.610509946356 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.1109291773864003\ndistance = 4169.610509946356\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.989548266209901"
    },
    {
        "question": "If a star has an apparent magnitude of 0.4131832840249883 in the V-band from Earth, and is located at a distance of 3620.936238851207 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.4131832840249883\ndistance = 3620.936238851207\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.380921102889555"
    },
    {
        "question": "If a star has an apparent magnitude of 8.84035547769375 in the V-band from Earth, and is located at a distance of 3518.954444045844 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.84035547769375\ndistance = 3518.954444045844\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.8917127450477498"
    },
    {
        "question": "If a star has an apparent magnitude of 10.884434856207857 in the V-band from Earth, and is located at a distance of 6477.000722493147 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.884434856207857\ndistance = 6477.000722493147\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.17243487128391"
    },
    {
        "question": "If a star has an apparent magnitude of 3.377915069493778 in the V-band from Earth, and is located at a distance of 3157.6925212859533 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.377915069493778\ndistance = 3157.6925212859533\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-9.118934123132771"
    },
    {
        "question": "If a star has an apparent magnitude of 0.5576122383976662 in the V-band from Earth, and is located at a distance of 8632.030521432273 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.5576122383976662\ndistance = 8632.030521432273\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-14.122952597957479"
    },
    {
        "question": "If a star has an apparent magnitude of 7.256762030184815 in the V-band from Earth, and is located at a distance of 9949.964344295437 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.256762030184815\ndistance = 9949.964344295437\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.732345592084775"
    },
    {
        "question": "If a star has an apparent magnitude of 7.100912859224484 in the V-band from Earth, and is located at a distance of 6188.142718421593 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.100912859224484\ndistance = 6188.142718421593\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.856888747609168"
    },
    {
        "question": "If a star has an apparent magnitude of 1.1078175789850475 in the V-band from Earth, and is located at a distance of 7677.9123113667865 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.1078175789850475\ndistance = 7677.9123113667865\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.318398159904303"
    },
    {
        "question": "If a star has an apparent magnitude of 6.803389649809798 in the V-band from Earth, and is located at a distance of 9893.487438207194 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.803389649809798\ndistance = 9893.487438207194\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.173357383603475"
    },
    {
        "question": "If a star has an apparent magnitude of 13.257909839220313 in the V-band from Earth, and is located at a distance of 2314.257447107251 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.257909839220313\ndistance = 2314.257447107251\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.4358514895667742"
    },
    {
        "question": "If a star has an apparent magnitude of 6.60890697825394 in the V-band from Earth, and is located at a distance of 6781.1545955788615 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.60890697825394\ndistance = 6781.1545955788615\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.547611249044393"
    },
    {
        "question": "If a star has an apparent magnitude of 2.510336786577226 in the V-band from Earth, and is located at a distance of 2797.2154747169748 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.510336786577226\ndistance = 2797.2154747169748\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-9.723292824286808"
    },
    {
        "question": "If a star has an apparent magnitude of 8.188786575189214 in the V-band from Earth, and is located at a distance of 6273.03284139226 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.188786575189214\ndistance = 6273.03284139226\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.798601230900216"
    },
    {
        "question": "If a star has an apparent magnitude of 9.277977422624835 in the V-band from Earth, and is located at a distance of 2987.4472356839015 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.277977422624835\ndistance = 2987.4472356839015\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.098523794932392"
    },
    {
        "question": "If a star has an apparent magnitude of 14.373497103464102 in the V-band from Earth, and is located at a distance of 7731.725279471173 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.373497103464102\ndistance = 7731.725279471173\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.06788496881165962"
    },
    {
        "question": "If a star has an apparent magnitude of 13.44347203185881 in the V-band from Earth, and is located at a distance of 3561.3144248328786 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.44347203185881\ndistance = 3561.3144248328786\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.6854204379306008"
    },
    {
        "question": "If a star has an apparent magnitude of 9.002707504869063 in the V-band from Earth, and is located at a distance of 684.1453948786874 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.002707504869063\ndistance = 684.1453948786874\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.17303453504233524"
    },
    {
        "question": "If a star has an apparent magnitude of 4.2315962679288335 in the V-band from Earth, and is located at a distance of 8801.67010757054 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.2315962679288335\ndistance = 8801.67010757054\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.491229166505821"
    },
    {
        "question": "If a star has an apparent magnitude of 3.7940671540234057 in the V-band from Earth, and is located at a distance of 3681.6973601012737 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.7940671540234057\ndistance = 3681.6973601012737\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-9.036173276539657"
    },
    {
        "question": "If a star has an apparent magnitude of 11.433968475057545 in the V-band from Earth, and is located at a distance of 1848.3099080889685 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.433968475057545\ndistance = 1848.3099080889685\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.10009451702031491"
    },
    {
        "question": "If a star has an apparent magnitude of 6.414818370647665 in the V-band from Earth, and is located at a distance of 7616.118841853339 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.414818370647665\ndistance = 7616.118841853339\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.993850190135713"
    },
    {
        "question": "If a star has an apparent magnitude of 5.715691332188733 in the V-band from Earth, and is located at a distance of 4737.200791603449 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.715691332188733\ndistance = 4737.200791603449\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.661917633711209"
    },
    {
        "question": "If a star has an apparent magnitude of 3.867427002484856 in the V-band from Earth, and is located at a distance of 2974.772700037317 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.867427002484856\ndistance = 2974.772700037317\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.499841933735791"
    },
    {
        "question": "If a star has an apparent magnitude of 12.474413710947005 in the V-band from Earth, and is located at a distance of 5326.1361457835255 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.474413710947005\ndistance = 5326.1361457835255\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.1576476070843285"
    },
    {
        "question": "If a star has an apparent magnitude of 1.4607028764386625 in the V-band from Earth, and is located at a distance of 2859.1004163889434 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.4607028764386625\ndistance = 2859.1004163889434\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.820444167433774"
    },
    {
        "question": "If a star has an apparent magnitude of 6.240773408274652 in the V-band from Earth, and is located at a distance of 3477.238827210401 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.240773408274652\ndistance = 3477.238827210401\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.465399193513193"
    },
    {
        "question": "If a star has an apparent magnitude of 2.3637236673998876 in the V-band from Earth, and is located at a distance of 1184.5718558161705 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.3637236673998876\ndistance = 1184.5718558161705\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.00408338283259"
    },
    {
        "question": "If a star has an apparent magnitude of 12.49033364870075 in the V-band from Earth, and is located at a distance of 9241.048107945644 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.49033364870075\ndistance = 9241.048107945644\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.3382725070117214"
    },
    {
        "question": "If a star has an apparent magnitude of 9.700023995904756 in the V-band from Earth, and is located at a distance of 388.66857232318404 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.700023995904756\ndistance = 388.66857232318404\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.7521268705517148"
    },
    {
        "question": "If a star has an apparent magnitude of 8.560141464897372 in the V-band from Earth, and is located at a distance of 6049.5367286054025 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.560141464897372\ndistance = 6049.5367286054025\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.348469124138637"
    },
    {
        "question": "If a star has an apparent magnitude of 3.255326586709502 in the V-band from Earth, and is located at a distance of 7453.775397579989 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.255326586709502\ndistance = 7453.775397579989\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.106554924026474"
    },
    {
        "question": "If a star has an apparent magnitude of 2.0122986461319456 in the V-band from Earth, and is located at a distance of 9087.040703767238 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.0122986461319456\ndistance = 9087.040703767238\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.779813720873197"
    },
    {
        "question": "If a star has an apparent magnitude of 9.69931936931361 in the V-band from Earth, and is located at a distance of 3852.3605218133093 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.69931936931361\ndistance = 3852.3605218133093\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.2293152489451113"
    },
    {
        "question": "If a star has an apparent magnitude of 9.287549403995957 in the V-band from Earth, and is located at a distance of 6099.273904063963 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.287549403995957\ndistance = 6099.273904063963\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.638841280707384"
    },
    {
        "question": "If a star has an apparent magnitude of 12.701089266995593 in the V-band from Earth, and is located at a distance of 3933.4137493975973 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.701089266995593\ndistance = 3933.4137493975973\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.27275889071972337"
    },
    {
        "question": "If a star has an apparent magnitude of 5.692090573313346 in the V-band from Earth, and is located at a distance of 8315.746226046564 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.692090573313346\ndistance = 8315.746226046564\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.907415563564074"
    },
    {
        "question": "If a star has an apparent magnitude of 10.62777348410377 in the V-band from Earth, and is located at a distance of 1673.560305816069 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.62777348410377\ndistance = 1673.560305816069\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.4904333485772199"
    },
    {
        "question": "If a star has an apparent magnitude of 4.556777101616948 in the V-band from Earth, and is located at a distance of 594.2725800709516 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.556777101616948\ndistance = 594.2725800709516\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.313151359546195"
    },
    {
        "question": "If a star has an apparent magnitude of 6.10797703768612 in the V-band from Earth, and is located at a distance of 1231.524103564759 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.10797703768612\ndistance = 1231.524103564759\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.344237543971979"
    },
    {
        "question": "If a star has an apparent magnitude of 8.803649242193472 in the V-band from Earth, and is located at a distance of 8837.365589492783 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.803649242193472\ndistance = 8837.365589492783\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.927964865418009"
    },
    {
        "question": "If a star has an apparent magnitude of 10.048006372538829 in the V-band from Earth, and is located at a distance of 3527.973070790143 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.048006372538829\ndistance = 3527.973070790143\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.6896199348566263"
    },
    {
        "question": "If a star has an apparent magnitude of 14.763517514008665 in the V-band from Earth, and is located at a distance of 1188.1395171740298 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.763517514008665\ndistance = 1188.1395171740298\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "4.3891803108619385"
    },
    {
        "question": "If a star has an apparent magnitude of 4.6690294384463895 in the V-band from Earth, and is located at a distance of 694.9396525953501 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.6690294384463895\ndistance = 694.9396525953501\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.540706025635424"
    },
    {
        "question": "If a star has an apparent magnitude of 9.30825797755079 in the V-band from Earth, and is located at a distance of 6156.888301399734 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.30825797755079\ndistance = 6156.888301399734\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.638548395794173"
    },
    {
        "question": "If a star has an apparent magnitude of 3.4651638400361913 in the V-band from Earth, and is located at a distance of 2796.976259664616 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.4651638400361913\ndistance = 2796.976259664616\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.768280060751707"
    },
    {
        "question": "If a star has an apparent magnitude of 13.934943368323014 in the V-band from Earth, and is located at a distance of 6962.002929826251 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.934943368323014\ndistance = 6962.002929826251\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.27872764024130525"
    },
    {
        "question": "If a star has an apparent magnitude of 14.1503070827635 in the V-band from Earth, and is located at a distance of 4943.163319670774 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.1503070827635\ndistance = 4943.163319670774\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.6802822849001764"
    },
    {
        "question": "If a star has an apparent magnitude of 5.345971837606085 in the V-band from Earth, and is located at a distance of 7670.673127296332 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.345971837606085\ndistance = 7670.673127296332\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-9.078195544487798"
    },
    {
        "question": "If a star has an apparent magnitude of 6.582615803960937 in the V-band from Earth, and is located at a distance of 7291.101013816135 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.582615803960937\ndistance = 7291.101013816135\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.7313497718674435"
    },
    {
        "question": "If a star has an apparent magnitude of 7.951488605092162 in the V-band from Earth, and is located at a distance of 7930.2459223856595 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.951488605092162\ndistance = 7930.2459223856595\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.544944671394368"
    },
    {
        "question": "If a star has an apparent magnitude of 12.833040836464185 in the V-band from Earth, and is located at a distance of 7840.075113608757 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.833040836464185\ndistance = 7840.075113608757\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.6385602813390854"
    },
    {
        "question": "If a star has an apparent magnitude of 2.2488437171652804 in the V-band from Earth, and is located at a distance of 7166.628303414024 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.2488437171652804\ndistance = 7166.628303414024\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.027730684865462"
    },
    {
        "question": "If a star has an apparent magnitude of 10.074804455524697 in the V-band from Earth, and is located at a distance of 434.54257533583467 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.074804455524697\ndistance = 434.54257533583467\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.884642786036526"
    },
    {
        "question": "If a star has an apparent magnitude of 2.1577589823666807 in the V-band from Earth, and is located at a distance of 4943.430271262198 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.1577589823666807\ndistance = 4943.430271262198\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.312383080965336"
    },
    {
        "question": "If a star has an apparent magnitude of 4.822024328300597 in the V-band from Earth, and is located at a distance of 5977.408962533997 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.822024328300597\ndistance = 5977.408962533997\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-9.060540523810602"
    },
    {
        "question": "If a star has an apparent magnitude of 4.121547782513549 in the V-band from Earth, and is located at a distance of 9962.651085510697 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.121547782513549\ndistance = 9962.651085510697\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.870326820551739"
    },
    {
        "question": "If a star has an apparent magnitude of 10.280764261275223 in the V-band from Earth, and is located at a distance of 6500.752188081617 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.280764261275223\ndistance = 6500.752188081617\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.7840537928877183"
    },
    {
        "question": "If a star has an apparent magnitude of 11.826934743859837 in the V-band from Earth, and is located at a distance of 7723.814085484489 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.826934743859837\ndistance = 7723.814085484489\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.6122243143155295"
    },
    {
        "question": "If a star has an apparent magnitude of 7.720714665252176 in the V-band from Earth, and is located at a distance of 6542.645102036814 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.720714665252176\ndistance = 6542.645102036814\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.358052150508872"
    },
    {
        "question": "If a star has an apparent magnitude of 4.780911876116071 in the V-band from Earth, and is located at a distance of 5488.542472312256 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.780911876116071\ndistance = 5488.542472312256\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.91637327029354"
    },
    {
        "question": "If a star has an apparent magnitude of 2.6330369446964568 in the V-band from Earth, and is located at a distance of 8519.487311342575 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.6330369446964568\ndistance = 8519.487311342575\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.01903035745024"
    },
    {
        "question": "If a star has an apparent magnitude of 10.679738856122599 in the V-band from Earth, and is located at a distance of 9109.510398411416 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.679738856122599\ndistance = 9109.510398411416\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.11773632348322"
    },
    {
        "question": "If a star has an apparent magnitude of 5.710901103509072 in the V-band from Earth, and is located at a distance of 8677.074910656167 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.710901103509072\ndistance = 8677.074910656167\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.98096563051968"
    },
    {
        "question": "If a star has an apparent magnitude of 8.480100378253546 in the V-band from Earth, and is located at a distance of 214.4633948066356 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.480100378253546\ndistance = 214.4633948066356\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.8233344968180951"
    },
    {
        "question": "If a star has an apparent magnitude of 4.205731311165408 in the V-band from Earth, and is located at a distance of 7883.4778504099495 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.205731311165408\ndistance = 7883.4778504099495\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.277857947620424"
    },
    {
        "question": "If a star has an apparent magnitude of 4.174303871063358 in the V-band from Earth, and is located at a distance of 9126.560071483511 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.174303871063358\ndistance = 9126.560071483511\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.627231712401493"
    },
    {
        "question": "If a star has an apparent magnitude of 7.226918703057487 in the V-band from Earth, and is located at a distance of 6217.108324145328 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.226918703057487\ndistance = 6217.108324145328\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.741023468887626"
    },
    {
        "question": "If a star has an apparent magnitude of 14.948609930747013 in the V-band from Earth, and is located at a distance of 1855.8141666951083 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.948609930747013\ndistance = 1855.8141666951083\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "3.605937502419893"
    },
    {
        "question": "If a star has an apparent magnitude of 13.573785739266942 in the V-band from Earth, and is located at a distance of 1780.0442865771415 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.573785739266942\ndistance = 1780.0442865771415\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "2.321631701944904"
    },
    {
        "question": "If a star has an apparent magnitude of 11.596645687647833 in the V-band from Earth, and is located at a distance of 7251.397995513774 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.596645687647833\ndistance = 7251.397995513774\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.7054630232817782"
    },
    {
        "question": "If a star has an apparent magnitude of 10.876804288358413 in the V-band from Earth, and is located at a distance of 985.86878736522 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.876804288358413\ndistance = 985.86878736522\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.9077087030805071"
    },
    {
        "question": "If a star has an apparent magnitude of 5.548654496288854 in the V-band from Earth, and is located at a distance of 5731.636195865322 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.548654496288854\ndistance = 5731.636195865322\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.242738586847114"
    },
    {
        "question": "If a star has an apparent magnitude of 5.344503879922314 in the V-band from Earth, and is located at a distance of 866.4151099376652 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.344503879922314\ndistance = 866.4151099376652\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.344126208116272"
    },
    {
        "question": "If a star has an apparent magnitude of 7.314220214492519 in the V-band from Earth, and is located at a distance of 6292.150820278118 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.314220214492519\ndistance = 6292.150820278118\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.679775405191835"
    },
    {
        "question": "If a star has an apparent magnitude of 14.713206292581823 in the V-band from Earth, and is located at a distance of 8653.606729489285 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.713206292581823\ndistance = 8653.606729489285\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.027220520434697804"
    },
    {
        "question": "If a star has an apparent magnitude of 13.06705240938421 in the V-band from Earth, and is located at a distance of 2205.604590713605 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.06705240938421\ndistance = 2205.604590713605\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.349414124219546"
    },
    {
        "question": "If a star has an apparent magnitude of 1.827304390130045 in the V-band from Earth, and is located at a distance of 5560.978563692203 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.827304390130045\ndistance = 5560.978563692203\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.898451714738243"
    },
    {
        "question": "If a star has an apparent magnitude of 2.6371259105104055 in the V-band from Earth, and is located at a distance of 7421.563318145301 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.6371259105104055\ndistance = 7421.563318145301\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.715351074733181"
    },
    {
        "question": "If a star has an apparent magnitude of 14.898499491338104 in the V-band from Earth, and is located at a distance of 9820.375269826802 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.898499491338104\ndistance = 9820.375269826802\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.06214092850346731"
    },
    {
        "question": "If a star has an apparent magnitude of 2.814087254458105 in the V-band from Earth, and is located at a distance of 6259.544546833325 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.814087254458105\ndistance = 6259.544546833325\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.168626417989405"
    },
    {
        "question": "If a star has an apparent magnitude of 14.359654931206055 in the V-band from Earth, and is located at a distance of 8176.338094245693 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.359654931206055\ndistance = 8176.338094245693\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.2031392756956656"
    },
    {
        "question": "If a star has an apparent magnitude of 14.394955545713156 in the V-band from Earth, and is located at a distance of 8747.9844084223 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.394955545713156\ndistance = 8747.9844084223\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.3145844558918238"
    },
    {
        "question": "If a star has an apparent magnitude of 7.316531225007457 in the V-band from Earth, and is located at a distance of 9213.8935288173 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.316531225007457\ndistance = 9213.8935288173\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.505684722262907"
    },
    {
        "question": "If a star has an apparent magnitude of 0.9604539492792141 in the V-band from Earth, and is located at a distance of 9414.176719939904 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.9604539492792141\ndistance = 9414.176719939904\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.90845778314772"
    },
    {
        "question": "If a star has an apparent magnitude of 12.891165027864442 in the V-band from Earth, and is located at a distance of 5308.25306978349 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.891165027864442\ndistance = 5308.25306978349\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.7335930700291335"
    },
    {
        "question": "If a star has an apparent magnitude of 14.19248541874234 in the V-band from Earth, and is located at a distance of 4020.7671218234673 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.19248541874234\ndistance = 4020.7671218234673\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.1709408187535946"
    },
    {
        "question": "If a star has an apparent magnitude of 7.1306585523509725 in the V-band from Earth, and is located at a distance of 2942.2149668593083 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.1306585523509725\ndistance = 2942.2149668593083\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.212713449549087"
    },
    {
        "question": "If a star has an apparent magnitude of 13.780259979020993 in the V-band from Earth, and is located at a distance of 6613.0201977948045 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.780259979020993\ndistance = 6613.0201977948045\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.32173926672138364"
    },
    {
        "question": "If a star has an apparent magnitude of 3.5897886928428657 in the V-band from Earth, and is located at a distance of 2581.2780488750886 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.5897886928428657\ndistance = 2581.2780488750886\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.469385248102354"
    },
    {
        "question": "If a star has an apparent magnitude of 0.4631633252640188 in the V-band from Earth, and is located at a distance of 4296.664144130439 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.4631633252640188\ndistance = 4296.664144130439\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.702493713051444"
    },
    {
        "question": "If a star has an apparent magnitude of 13.17597370917691 in the V-band from Earth, and is located at a distance of 4292.937532205597 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.17597370917691\ndistance = 4292.937532205597\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.01220086428238254"
    },
    {
        "question": "If a star has an apparent magnitude of 0.7356202752384045 in the V-band from Earth, and is located at a distance of 6980.853062796605 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.7356202752384045\ndistance = 6980.853062796605\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.48392220881432"
    },
    {
        "question": "If a star has an apparent magnitude of 4.047890968536418 in the V-band from Earth, and is located at a distance of 3064.4120132297057 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.047890968536418\ndistance = 3064.4120132297057\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.383844812510857"
    },
    {
        "question": "If a star has an apparent magnitude of 7.769641878329953 in the V-band from Earth, and is located at a distance of 9015.915595854705 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.769641878329953\ndistance = 9015.915595854705\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.005407308318741"
    },
    {
        "question": "If a star has an apparent magnitude of 7.944729837795407 in the V-band from Earth, and is located at a distance of 5404.391824226712 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.944729837795407\ndistance = 5404.391824226712\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.719004303749838"
    },
    {
        "question": "If a star has an apparent magnitude of 1.8368065176665127 in the V-band from Earth, and is located at a distance of 902.6940998655547 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.8368065176665127\ndistance = 902.6940998655547\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.940896501632278"
    },
    {
        "question": "If a star has an apparent magnitude of 4.988230633563529 in the V-band from Earth, and is located at a distance of 6264.9650180388635 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.988230633563529\ndistance = 6264.9650180388635\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.99636261817502"
    },
    {
        "question": "If a star has an apparent magnitude of 8.149117278614346 in the V-band from Earth, and is located at a distance of 8216.271854999257 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.149117278614346\ndistance = 8216.271854999257\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.42425672387704"
    },
    {
        "question": "If a star has an apparent magnitude of 5.965092663613324 in the V-band from Earth, and is located at a distance of 5589.187794827119 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.965092663613324\ndistance = 5589.187794827119\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.77165084643343"
    },
    {
        "question": "If a star has an apparent magnitude of 7.556689238540572 in the V-band from Earth, and is located at a distance of 9490.484676744221 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.556689238540572\ndistance = 9490.484676744221\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.329752722995541"
    },
    {
        "question": "If a star has an apparent magnitude of 3.7169350368083394 in the V-band from Earth, and is located at a distance of 1104.184791365336 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.7169350368083394\ndistance = 1104.184791365336\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.498273768356983"
    },
    {
        "question": "If a star has an apparent magnitude of 1.3897843290824219 in the V-band from Earth, and is located at a distance of 917.9262508045648 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.3897843290824219\ndistance = 917.9262508045648\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.424254620740568"
    },
    {
        "question": "If a star has an apparent magnitude of 10.116203143409841 in the V-band from Earth, and is located at a distance of 2146.5048464838483 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.116203143409841\ndistance = 2146.5048464838483\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.5424562235298183"
    },
    {
        "question": "If a star has an apparent magnitude of 5.512988576266916 in the V-band from Earth, and is located at a distance of 5771.479553931483 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.512988576266916\ndistance = 5771.479553931483\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.293447231053097"
    },
    {
        "question": "If a star has an apparent magnitude of 13.296381368722088 in the V-band from Earth, and is located at a distance of 8067.114297929904 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.296381368722088\ndistance = 8067.114297929904\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.237209682453992"
    },
    {
        "question": "If a star has an apparent magnitude of 8.547132762720153 in the V-band from Earth, and is located at a distance of 292.3320337398213 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.547132762720153\ndistance = 292.3320337398213\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.2177507229810587"
    },
    {
        "question": "If a star has an apparent magnitude of 10.818515733964771 in the V-band from Earth, and is located at a distance of 8295.821704759046 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.818515733964771\ndistance = 8295.821704759046\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.775781313779481"
    },
    {
        "question": "If a star has an apparent magnitude of 1.8485443123186092 in the V-band from Earth, and is located at a distance of 3883.5962636584927 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.8485443123186092\ndistance = 3883.5962636584927\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.097626060623469"
    },
    {
        "question": "If a star has an apparent magnitude of 12.162666364624412 in the V-band from Earth, and is located at a distance of 273.0906825524503 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.162666364624412\ndistance = 273.0906825524503\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "4.98113195006793"
    },
    {
        "question": "If a star has an apparent magnitude of 0.2728204488583652 in the V-band from Earth, and is located at a distance of 5119.122393714 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.2728204488583652\ndistance = 5119.122393714\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.273157117508958"
    },
    {
        "question": "If a star has an apparent magnitude of 6.611865030123719 in the V-band from Earth, and is located at a distance of 7597.3504364638675 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.611865030123719\ndistance = 7597.3504364638675\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.791445765852182"
    },
    {
        "question": "If a star has an apparent magnitude of 2.1089847908938046 in the V-band from Earth, and is located at a distance of 7716.863609399652 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.1089847908938046\ndistance = 7716.863609399652\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.328219331317106"
    },
    {
        "question": "If a star has an apparent magnitude of 7.822458997033704 in the V-band from Earth, and is located at a distance of 9173.813836712705 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.822458997033704\ndistance = 9173.813836712705\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.990290616920642"
    },
    {
        "question": "If a star has an apparent magnitude of 5.4824580636061215 in the V-band from Earth, and is located at a distance of 2792.4914122897835 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.4824580636061215\ndistance = 2792.4914122897835\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.747501167443313"
    },
    {
        "question": "If a star has an apparent magnitude of 2.6739597945767546 in the V-band from Earth, and is located at a distance of 1604.9138310786223 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.6739597945767546\ndistance = 1604.9138310786223\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.353298804418438"
    },
    {
        "question": "If a star has an apparent magnitude of 5.886332531861744 in the V-band from Earth, and is located at a distance of 1153.0285082887726 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.886332531861744\ndistance = 1153.0285082887726\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.422867694288432"
    },
    {
        "question": "If a star has an apparent magnitude of 2.029053318640401 in the V-band from Earth, and is located at a distance of 2881.1060859691675 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.029053318640401\ndistance = 2881.1060859691675\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.268742930593636"
    },
    {
        "question": "If a star has an apparent magnitude of 3.4905547806957 in the V-band from Earth, and is located at a distance of 3391.427913582745 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.4905547806957\ndistance = 3391.427913582745\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-9.161358171118657"
    },
    {
        "question": "If a star has an apparent magnitude of 11.558868020936245 in the V-band from Earth, and is located at a distance of 4720.538530731674 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.558868020936245\ndistance = 4720.538530731674\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.81108971331866"
    },
    {
        "question": "If a star has an apparent magnitude of 7.524285199432276 in the V-band from Earth, and is located at a distance of 985.877774063811 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.524285199432276\ndistance = 985.877774063811\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.444830179837844"
    },
    {
        "question": "If a star has an apparent magnitude of 8.08467890198836 in the V-band from Earth, and is located at a distance of 2124.3651128049332 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.08467890198836\ndistance = 2124.3651128049332\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.5514669012295403"
    },
    {
        "question": "If a star has an apparent magnitude of 9.927793116191816 in the V-band from Earth, and is located at a distance of 6078.2740651879285 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.927793116191816\ndistance = 6078.2740651879285\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.9911082749294007"
    },
    {
        "question": "If a star has an apparent magnitude of 9.263676337009304 in the V-band from Earth, and is located at a distance of 1215.6738696028808 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.263676337009304\ndistance = 1215.6738696028808\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.160409072095856"
    },
    {
        "question": "If a star has an apparent magnitude of 9.420418479033522 in the V-band from Earth, and is located at a distance of 1947.9001368942238 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.420418479033522\ndistance = 1947.9001368942238\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.0274149615349764"
    },
    {
        "question": "If a star has an apparent magnitude of 14.787806476011403 in the V-band from Earth, and is located at a distance of 2359.208833725725 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.787806476011403\ndistance = 2359.208833725725\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "2.923974547504388"
    },
    {
        "question": "If a star has an apparent magnitude of 0.0845050164872363 in the V-band from Earth, and is located at a distance of 8187.56358378895 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.0845050164872363\ndistance = 8187.56358378895\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-14.481268412012087"
    },
    {
        "question": "If a star has an apparent magnitude of 10.186077666415004 in the V-band from Earth, and is located at a distance of 4435.033367182114 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.186077666415004\ndistance = 4435.033367182114\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.048406791659973"
    },
    {
        "question": "If a star has an apparent magnitude of 12.682354679700609 in the V-band from Earth, and is located at a distance of 3522.870783464261 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.682354679700609\ndistance = 3522.870783464261\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.052128889515827836"
    },
    {
        "question": "If a star has an apparent magnitude of 8.298857460174718 in the V-band from Earth, and is located at a distance of 6343.207459421386 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.298857460174718\ndistance = 6343.207459421386\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.712687117629676"
    },
    {
        "question": "If a star has an apparent magnitude of 12.333258413053885 in the V-band from Earth, and is located at a distance of 2558.921323847013 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.333258413053885\ndistance = 2558.921323847013\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.29297374630722217"
    },
    {
        "question": "If a star has an apparent magnitude of 0.1453050659632582 in the V-band from Earth, and is located at a distance of 8960.000623159987 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.1453050659632582\ndistance = 8960.000623159987\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-14.616235133371326"
    },
    {
        "question": "If a star has an apparent magnitude of 11.765599808718505 in the V-band from Earth, and is located at a distance of 3545.431976221114 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.765599808718505\ndistance = 3545.431976221114\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.9827459776777232"
    },
    {
        "question": "If a star has an apparent magnitude of 13.37583432268045 in the V-band from Earth, and is located at a distance of 6232.067274684451 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.37583432268045\ndistance = 6232.067274684451\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.5973263416454042"
    },
    {
        "question": "If a star has an apparent magnitude of 7.557958691802405 in the V-band from Earth, and is located at a distance of 8067.191474687312 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.557958691802405\ndistance = 8067.191474687312\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.975653133394166"
    },
    {
        "question": "If a star has an apparent magnitude of 3.16321465666653 in the V-band from Earth, and is located at a distance of 110.41431637747601 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.16321465666653\ndistance = 110.41431637747601\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.0519122827920153"
    },
    {
        "question": "If a star has an apparent magnitude of 0.32604363449100615 in the V-band from Earth, and is located at a distance of 8451.57349682026 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.32604363449100615\ndistance = 8451.57349682026\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-14.30864422822728"
    },
    {
        "question": "If a star has an apparent magnitude of 14.023203126929092 in the V-band from Earth, and is located at a distance of 9916.642157546226 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.023203126929092\ndistance = 9916.642157546226\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.9586200829774967"
    },
    {
        "question": "If a star has an apparent magnitude of 8.152710943536752 in the V-band from Earth, and is located at a distance of 1423.2164845830405 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.152710943536752\ndistance = 1423.2164845830405\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.613643883339183"
    },
    {
        "question": "If a star has an apparent magnitude of 5.878404341242314 in the V-band from Earth, and is located at a distance of 266.14347083247156 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.878404341242314\ndistance = 266.14347083247156\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.2471747402850077"
    },
    {
        "question": "If a star has an apparent magnitude of 14.797091199098832 in the V-band from Earth, and is located at a distance of 4336.688299606984 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.797091199098832\ndistance = 4336.688299606984\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.6113001577871664"
    },
    {
        "question": "If a star has an apparent magnitude of 11.35618453165148 in the V-band from Earth, and is located at a distance of 6721.470964733394 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.35618453165148\ndistance = 6721.470964733394\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.781137102932302"
    },
    {
        "question": "If a star has an apparent magnitude of 8.928086755735103 in the V-band from Earth, and is located at a distance of 4475.27581499646 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.928086755735103\ndistance = 4475.27581499646\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.326012276311914"
    },
    {
        "question": "If a star has an apparent magnitude of 13.84276797898774 in the V-band from Earth, and is located at a distance of 3129.1120892307076 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.84276797898774\ndistance = 3129.1120892307076\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.3656623766436713"
    },
    {
        "question": "If a star has an apparent magnitude of 0.7654064466914989 in the V-band from Earth, and is located at a distance of 2980.13064794315 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.7654064466914989\ndistance = 2980.13064794315\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.605770072409642"
    },
    {
        "question": "If a star has an apparent magnitude of 0.09585729009732091 in the V-band from Earth, and is located at a distance of 4253.484412360822 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.09585729009732091\ndistance = 4253.484412360822\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.047866937880606"
    },
    {
        "question": "If a star has an apparent magnitude of 6.133913089401819 in the V-band from Earth, and is located at a distance of 9067.206220040049 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.133913089401819\ndistance = 9067.206220040049\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.65345437670068"
    },
    {
        "question": "If a star has an apparent magnitude of 1.9861944263232205 in the V-band from Earth, and is located at a distance of 3016.3894595798356 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.9861944263232205\ndistance = 3016.3894595798356\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.41124264631459"
    },
    {
        "question": "If a star has an apparent magnitude of 3.8000468724789043 in the V-band from Earth, and is located at a distance of 9177.128027119525 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.8000468724789043\ndistance = 9177.128027119525\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.013487079757361"
    },
    {
        "question": "If a star has an apparent magnitude of 12.990881561629386 in the V-band from Earth, and is located at a distance of 2288.482269844992 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.990881561629386\ndistance = 2288.482269844992\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.1931438013616518"
    },
    {
        "question": "If a star has an apparent magnitude of 8.332150996550967 in the V-band from Earth, and is located at a distance of 27.449709554129765 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.332150996550967\ndistance = 27.449709554129765\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "6.1394622288874565"
    },
    {
        "question": "If a star has an apparent magnitude of 3.3971411500565734 in the V-band from Earth, and is located at a distance of 1436.0653674922494 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.3971411500565734\ndistance = 1436.0653674922494\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.388729893816979"
    },
    {
        "question": "If a star has an apparent magnitude of 0.620244090280298 in the V-band from Earth, and is located at a distance of 8161.0813326029765 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.620244090280298\ndistance = 8161.0813326029765\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.938494439806039"
    },
    {
        "question": "If a star has an apparent magnitude of 2.601466176124598 in the V-band from Earth, and is located at a distance of 2322.819396494965 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.601466176124598\ndistance = 2322.819396494965\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-9.228611043443072"
    },
    {
        "question": "If a star has an apparent magnitude of 8.927523045852077 in the V-band from Earth, and is located at a distance of 4642.215750853093 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.927523045852077\ndistance = 4642.215750853093\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.406103558086013"
    },
    {
        "question": "If a star has an apparent magnitude of 11.050261394314292 in the V-band from Earth, and is located at a distance of 6386.947152834988 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.050261394314292\ndistance = 6386.947152834988\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.976205219255421"
    },
    {
        "question": "If a star has an apparent magnitude of 1.2262580219920438 in the V-band from Earth, and is located at a distance of 7427.997950545508 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.2262580219920438\ndistance = 7427.997950545508\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.128100854217093"
    },
    {
        "question": "If a star has an apparent magnitude of 5.1083520109894405 in the V-band from Earth, and is located at a distance of 363.17184318809274 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.1083520109894405\ndistance = 363.17184318809274\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.6922088399344783"
    },
    {
        "question": "If a star has an apparent magnitude of 4.530447245359629 in the V-band from Earth, and is located at a distance of 1557.5448204283368 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.530447245359629\ndistance = 1557.5448204283368\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.4317555192085445"
    },
    {
        "question": "If a star has an apparent magnitude of 14.96756963973318 in the V-band from Earth, and is located at a distance of 4883.0611947796115 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.96756963973318\ndistance = 4883.0611947796115\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.5241088051356453"
    },
    {
        "question": "If a star has an apparent magnitude of 14.978145132463542 in the V-band from Earth, and is located at a distance of 6393.773349748591 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.978145132463542\ndistance = 6393.773349748591\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.9493589470564991"
    },
    {
        "question": "If a star has an apparent magnitude of 8.617627824272093 in the V-band from Earth, and is located at a distance of 9587.23090517048 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 8.617627824272093\ndistance = 9587.23090517048\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.290838112382893"
    },
    {
        "question": "If a star has an apparent magnitude of 2.8180583884844617 in the V-band from Earth, and is located at a distance of 7092.363584959778 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.8180583884844617\ndistance = 7092.363584959778\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.435896567997414"
    },
    {
        "question": "If a star has an apparent magnitude of 0.8619923800836471 in the V-band from Earth, and is located at a distance of 2986.643915575332 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.8619923800836471\ndistance = 2986.643915575332\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.51392485325971"
    },
    {
        "question": "If a star has an apparent magnitude of 6.816078447975536 in the V-band from Earth, and is located at a distance of 1741.955913727649 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.816078447975536\ndistance = 1741.955913727649\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.389107349392183"
    },
    {
        "question": "If a star has an apparent magnitude of 6.404169050880988 in the V-band from Earth, and is located at a distance of 4951.229832029252 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.404169050880988\ndistance = 4951.229832029252\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.069396381084827"
    },
    {
        "question": "If a star has an apparent magnitude of 4.703350704511433 in the V-band from Earth, and is located at a distance of 9214.392527871807 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.703350704511433\ndistance = 9214.392527871807\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.118982840529679"
    },
    {
        "question": "If a star has an apparent magnitude of 14.19445984019825 in the V-band from Earth, and is located at a distance of 4691.7400012859725 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.19445984019825\ndistance = 4691.7400012859725\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.837790154540297"
    },
    {
        "question": "If a star has an apparent magnitude of 7.278425951751453 in the V-band from Earth, and is located at a distance of 3980.905591302181 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.278425951751453\ndistance = 3980.905591302181\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.721483439481418"
    },
    {
        "question": "If a star has an apparent magnitude of 4.279514171317513 in the V-band from Earth, and is located at a distance of 4480.672065274719 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 4.279514171317513\ndistance = 4480.672065274719\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-8.977201626742161"
    },
    {
        "question": "If a star has an apparent magnitude of 13.345359807887887 in the V-band from Earth, and is located at a distance of 9839.279116250884 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.345359807887887\ndistance = 9839.279116250884\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.6194565951921192"
    },
    {
        "question": "If a star has an apparent magnitude of 5.286373460222673 in the V-band from Earth, and is located at a distance of 1495.160784661364 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.286373460222673\ndistance = 1495.160784661364\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.587066028619836"
    },
    {
        "question": "If a star has an apparent magnitude of 7.446708203954494 in the V-band from Earth, and is located at a distance of 4242.615744813237 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.446708203954494\ndistance = 4242.615744813237\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.691460292771336"
    },
    {
        "question": "If a star has an apparent magnitude of 6.5100778729820306 in the V-band from Earth, and is located at a distance of 5123.931881776371 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.5100778729820306\ndistance = 5123.931881776371\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.037938864733592"
    },
    {
        "question": "If a star has an apparent magnitude of 9.714741395564296 in the V-band from Earth, and is located at a distance of 5334.168890534838 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.714741395564296\ndistance = 5334.168890534838\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.92059241548521"
    },
    {
        "question": "If a star has an apparent magnitude of 13.20903719895068 in the V-band from Earth, and is located at a distance of 2299.4326077225815 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.20903719895068\ndistance = 2299.4326077225815\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.4009337704595417"
    },
    {
        "question": "If a star has an apparent magnitude of 13.379639102010016 in the V-band from Earth, and is located at a distance of 2567.264595370681 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 13.379639102010016\ndistance = 2567.264595370681\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.3322859441076176"
    },
    {
        "question": "If a star has an apparent magnitude of 0.6599347044791637 in the V-band from Earth, and is located at a distance of 5253.152551158666 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.6599347044791637\ndistance = 5253.152551158666\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-12.942165359848989"
    },
    {
        "question": "If a star has an apparent magnitude of 7.907597669055292 in the V-band from Earth, and is located at a distance of 929.9967873957465 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.907597669055292\ndistance = 929.9967873957465\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.9348095725385264"
    },
    {
        "question": "If a star has an apparent magnitude of 7.45995975741223 in the V-band from Earth, and is located at a distance of 5080.419005063737 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.45995975741223\ndistance = 5080.419005063737\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.069537902514114"
    },
    {
        "question": "If a star has an apparent magnitude of 7.126045005151968 in the V-band from Earth, and is located at a distance of 7907.004053306389 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.126045005151968\ndistance = 7907.004053306389\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.3640148019809475"
    },
    {
        "question": "If a star has an apparent magnitude of 7.472074664814213 in the V-band from Earth, and is located at a distance of 4109.36655855399 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.472074664814213\ndistance = 4109.36655855399\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-5.596799747088908"
    },
    {
        "question": "If a star has an apparent magnitude of 12.822025924190802 in the V-band from Earth, and is located at a distance of 5181.554172486895 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.822025924190802\ndistance = 5181.554172486895\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.7502742908468658"
    },
    {
        "question": "If a star has an apparent magnitude of 3.422026586880227 in the V-band from Earth, and is located at a distance of 5611.957846839331 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.422026586880227\ndistance = 5611.957846839331\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.32354541435806"
    },
    {
        "question": "If a star has an apparent magnitude of 5.832258396977386 in the V-band from Earth, and is located at a distance of 1047.930664636289 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 5.832258396977386\ndistance = 1047.930664636289\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-4.269404347549303"
    },
    {
        "question": "If a star has an apparent magnitude of 2.9882471256194005 in the V-band from Earth, and is located at a distance of 6718.159487462743 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.9882471256194005\ndistance = 6718.159487462743\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.148004422744519"
    },
    {
        "question": "If a star has an apparent magnitude of 1.1815190664534891 in the V-band from Earth, and is located at a distance of 8155.0711088916805 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.1815190664534891\ndistance = 8155.0711088916805\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.375619694863687"
    },
    {
        "question": "If a star has an apparent magnitude of 0.1604820624972625 in the V-band from Earth, and is located at a distance of 5461.646726828515 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 0.1604820624972625\ndistance = 5461.646726828515\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.526135964717191"
    },
    {
        "question": "If a star has an apparent magnitude of 9.190604408786381 in the V-band from Earth, and is located at a distance of 1662.5719254688115 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.190604408786381\ndistance = 1662.5719254688115\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.9132978044232427"
    },
    {
        "question": "If a star has an apparent magnitude of 9.373872986512477 in the V-band from Earth, and is located at a distance of 2276.323853656266 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.373872986512477\ndistance = 2276.323853656266\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.412297260473446"
    },
    {
        "question": "If a star has an apparent magnitude of 10.286701118118307 in the V-band from Earth, and is located at a distance of 3220.764136548059 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 10.286701118118307\ndistance = 3220.764136548059\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.2530934902299062"
    },
    {
        "question": "If a star has an apparent magnitude of 14.229973519741081 in the V-band from Earth, and is located at a distance of 5294.540239080483 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.229973519741081\ndistance = 5294.540239080483\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.6108322530471817"
    },
    {
        "question": "If a star has an apparent magnitude of 2.938469158059208 in the V-band from Earth, and is located at a distance of 5752.447989305471 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.938469158059208\ndistance = 5752.447989305471\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.86079434538931"
    },
    {
        "question": "If a star has an apparent magnitude of 2.9006546688175887 in the V-band from Earth, and is located at a distance of 4507.299656926908 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.9006546688175887\ndistance = 4507.299656926908\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-10.36892749143271"
    },
    {
        "question": "If a star has an apparent magnitude of 2.323930620332691 in the V-band from Earth, and is located at a distance of 4834.047580000679 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 2.323930620332691\ndistance = 4834.047580000679\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-11.097623983246454"
    },
    {
        "question": "If a star has an apparent magnitude of 12.25586439729609 in the V-band from Earth, and is located at a distance of 8417.797899765768 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.25586439729609\ndistance = 8417.797899765768\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.3701280761988635"
    },
    {
        "question": "If a star has an apparent magnitude of 6.643144590204029 in the V-band from Earth, and is located at a distance of 766.9097897652874 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.643144590204029\ndistance = 766.9097897652874\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-2.7805768181245494"
    },
    {
        "question": "If a star has an apparent magnitude of 7.316706355977352 in the V-band from Earth, and is located at a distance of 501.2748933758027 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.316706355977352\ndistance = 501.2748933758027\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.183673410441184"
    },
    {
        "question": "If a star has an apparent magnitude of 7.474435852017159 in the V-band from Earth, and is located at a distance of 6563.6359489471615 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 7.474435852017159\ndistance = 6563.6359489471615\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.611286572846726"
    },
    {
        "question": "If a star has an apparent magnitude of 11.730740923429828 in the V-band from Earth, and is located at a distance of 9412.048270001935 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.730740923429828\ndistance = 9412.048270001935\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.13767980558697"
    },
    {
        "question": "If a star has an apparent magnitude of 14.373852670343119 in the V-band from Earth, and is located at a distance of 5477.170959618679 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.373852670343119\ndistance = 5477.170959618679\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "0.6810711862028711"
    },
    {
        "question": "If a star has an apparent magnitude of 3.6078736565737497 in the V-band from Earth, and is located at a distance of 930.5771741389692 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 3.6078736565737497\ndistance = 930.5771741389692\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.2358883216407985"
    },
    {
        "question": "If a star has an apparent magnitude of 6.608938815201064 in the V-band from Earth, and is located at a distance of 3711.6302938310914 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.608938815201064\ndistance = 3711.6302938310914\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.238884738393278"
    },
    {
        "question": "If a star has an apparent magnitude of 14.859503438068131 in the V-band from Earth, and is located at a distance of 4954.958594119183 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 14.859503438068131\ndistance = 4954.958594119183\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "1.3843032896939427"
    },
    {
        "question": "If a star has an apparent magnitude of 1.3635142031840268 in the V-band from Earth, and is located at a distance of 9182.773665373657 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 1.3635142031840268\ndistance = 9182.773665373657\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-13.451355197171154"
    },
    {
        "question": "If a star has an apparent magnitude of 12.574895545965457 in the V-band from Earth, and is located at a distance of 3764.319906054851 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.574895545965457\ndistance = 3764.319906054851\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-0.30353707553996934"
    },
    {
        "question": "If a star has an apparent magnitude of 9.389335691611254 in the V-band from Earth, and is located at a distance of 3673.9322807674093 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 9.389335691611254\ndistance = 3673.9322807674093\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.436320043251195"
    },
    {
        "question": "If a star has an apparent magnitude of 6.705282684684989 in the V-band from Earth, and is located at a distance of 5609.059810068149 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.705282684684989\ndistance = 5609.059810068149\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-7.039167670153174"
    },
    {
        "question": "If a star has an apparent magnitude of 11.485776905591667 in the V-band from Earth, and is located at a distance of 8405.880151485091 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 11.485776905591667\ndistance = 8405.880151485091\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-3.1371390627746116"
    },
    {
        "question": "If a star has an apparent magnitude of 6.73323594157572 in the V-band from Earth, and is located at a distance of 4301.786482848672 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 6.73323594157572\ndistance = 4301.786482848672\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-6.43500831134321"
    },
    {
        "question": "If a star has an apparent magnitude of 12.299358447214638 in the V-band from Earth, and is located at a distance of 6925.3773028807955 parsecs, what would be its absolute magnitude?",
        "code": "import numpy as np\nfrom astropy import units as u\n\nmagnitude = 12.299358447214638\ndistance = 6925.3773028807955\nabsolute_magnitude = magnitude - 5 * (np.log10(distance) - 1)\nresult = absolute_magnitude",
        "answer": "-1.9028587491178985"
    },
    {
        "question": "Given the parallax angle of 85.95995012705811 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 85.95995012705811\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03794283003127025"
    },
    {
        "question": "Given the parallax angle of 96.80391348141629 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 96.80391348141629\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03369247853593817"
    },
    {
        "question": "Given the parallax angle of 33.650514329550965 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 33.650514329550965\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09692463375821916"
    },
    {
        "question": "Given the parallax angle of 58.51531506501025 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 58.51531506501025\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05573863480943153"
    },
    {
        "question": "Given the parallax angle of 35.53112264148216 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 35.53112264148216\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0917945602247759"
    },
    {
        "question": "Given the parallax angle of 85.29430134957434 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 85.29430134957434\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0382389412371183"
    },
    {
        "question": "Given the parallax angle of 23.534380880953446 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 23.534380880953446\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.13858719265511002"
    },
    {
        "question": "Given the parallax angle of 73.5939580176558 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 73.5939580176558\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04431836342305379"
    },
    {
        "question": "Given the parallax angle of 92.52589678109507 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 92.52589678109507\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03525028009059878"
    },
    {
        "question": "Given the parallax angle of 20.026751969743465 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 20.026751969743465\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.16286034710446423"
    },
    {
        "question": "Given the parallax angle of 48.656508345458995 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 48.656508345458995\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06703242563174651"
    },
    {
        "question": "Given the parallax angle of 58.53064077685043 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 58.53064077685043\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05572404015876451"
    },
    {
        "question": "Given the parallax angle of 46.358182345265924 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 46.358182345265924\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07035573036224753"
    },
    {
        "question": "Given the parallax angle of 69.68586432492928 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 69.68586432492928\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04680380746889363"
    },
    {
        "question": "Given the parallax angle of 28.647902345190037 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 28.647902345190037\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.11385000332197263"
    },
    {
        "question": "Given the parallax angle of 88.3548173522159 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 88.3548173522159\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0369143853714914"
    },
    {
        "question": "Given the parallax angle of 80.22176548788876 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 80.22176548788876\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.040656843654978375"
    },
    {
        "question": "Given the parallax angle of 96.9837238635251 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 96.9837238635251\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03363001179205168"
    },
    {
        "question": "Given the parallax angle of 55.61411594117168 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 55.61411594117168\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.058646329658777606"
    },
    {
        "question": "Given the parallax angle of 36.94692586418575 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 36.94692586418575\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08827700007185192"
    },
    {
        "question": "Given the parallax angle of 3.2526436934875425 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 3.2526436934875425\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "1.0027424103346305"
    },
    {
        "question": "Given the parallax angle of 31.88532941744773 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 31.88532941744773\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.10229042122998103"
    },
    {
        "question": "Given the parallax angle of 71.03070250800978 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 71.03070250800978\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04591766182799111"
    },
    {
        "question": "Given the parallax angle of 20.64797532166944 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 20.64797532166944\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.1579604647117395"
    },
    {
        "question": "Given the parallax angle of 87.00109852089321 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 87.00109852089321\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03748876545948639"
    },
    {
        "question": "Given the parallax angle of 39.54307614139075 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 39.54307614139075\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08248128611707756"
    },
    {
        "question": "Given the parallax angle of 95.18878938878954 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 95.18878938878954\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03426415860638679"
    },
    {
        "question": "Given the parallax angle of 71.95480689412503 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 71.95480689412503\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04532794844361863"
    },
    {
        "question": "Given the parallax angle of 68.86654697235547 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 68.86654697235547\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0473606405513071"
    },
    {
        "question": "Given the parallax angle of 34.95597535119382 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 34.95597535119382\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09330489978892963"
    },
    {
        "question": "Given the parallax angle of 33.59170902431131 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 33.59170902431131\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09709430903938064"
    },
    {
        "question": "Given the parallax angle of 50.853166147064826 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 50.853166147064826\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06413688712587046"
    },
    {
        "question": "Given the parallax angle of 93.69115190054607 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 93.69115190054607\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03481186548575697"
    },
    {
        "question": "Given the parallax angle of 11.925093850363778 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 11.925093850363778\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.27350424391569367"
    },
    {
        "question": "Given the parallax angle of 34.13665874293703 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 34.13665874293703\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0955443179641083"
    },
    {
        "question": "Given the parallax angle of 52.257834247127505 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 52.257834247127505\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06241291519551853"
    },
    {
        "question": "Given the parallax angle of 22.276131103984007 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 22.276131103984007\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.14641518143085963"
    },
    {
        "question": "Given the parallax angle of 76.87601523239445 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 76.87601523239445\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.042426285588655965"
    },
    {
        "question": "Given the parallax angle of 62.174881597153636 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 62.174881597153636\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05245790089798495"
    },
    {
        "question": "Given the parallax angle of 0.14319163565992596 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 0.14319163565992596\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "22.777613804995624"
    },
    {
        "question": "Given the parallax angle of 92.28407203367907 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 92.28407203367907\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03534265128631435"
    },
    {
        "question": "Given the parallax angle of 5.424273346879287 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 5.424273346879287\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.6012904528574115"
    },
    {
        "question": "Given the parallax angle of 8.777155522543476 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.777155522543476\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.3715968993360489"
    },
    {
        "question": "Given the parallax angle of 0.8020256631477275 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 0.8020256631477275\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "4.066657623356718"
    },
    {
        "question": "Given the parallax angle of 66.61624135318674 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 66.61624135318674\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04896048937788666"
    },
    {
        "question": "Given the parallax angle of 91.312984372244 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 91.312984372244\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03571851034756932"
    },
    {
        "question": "Given the parallax angle of 60.1459255700511 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 60.1459255700511\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.054227509947764235"
    },
    {
        "question": "Given the parallax angle of 86.0472209214606 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 86.0472209214606\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.037904347662133304"
    },
    {
        "question": "Given the parallax angle of 51.54414919830297 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 51.54414919830297\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06327709018184388"
    },
    {
        "question": "Given the parallax angle of 60.131880202610276 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 60.131880202610276\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05424017619568548"
    },
    {
        "question": "Given the parallax angle of 19.276839768291577 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 19.276839768291577\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.169195979028283"
    },
    {
        "question": "Given the parallax angle of 66.16084661190759 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 66.16084661190759\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04929749155568422"
    },
    {
        "question": "Given the parallax angle of 49.80634321602222 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 49.80634321602222\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06548490747496234"
    },
    {
        "question": "Given the parallax angle of 28.037308047734307 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 28.037308047734307\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.11632941977220243"
    },
    {
        "question": "Given the parallax angle of 13.492046780046515 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 13.492046780046515\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.24173973232815818"
    },
    {
        "question": "Given the parallax angle of 69.33657786695764 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 69.33657786695764\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04703958397580121"
    },
    {
        "question": "Given the parallax angle of 40.01864209171556 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 40.01864209171556\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08150111064969454"
    },
    {
        "question": "Given the parallax angle of 11.806527536203175 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 11.806527536203175\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.27625089317466744"
    },
    {
        "question": "Given the parallax angle of 95.03863801840927 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 95.03863801840927\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.034318292487900116"
    },
    {
        "question": "Given the parallax angle of 35.47796515052548 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 35.47796515052548\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09193209822855708"
    },
    {
        "question": "Given the parallax angle of 95.78497616620727 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 95.78497616620727\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03405089094043232"
    },
    {
        "question": "Given the parallax angle of 60.005136616310004 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 60.005136616310004\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.054354742961803496"
    },
    {
        "question": "Given the parallax angle of 75.14304926936238 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 75.14304926936238\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04340473016307645"
    },
    {
        "question": "Given the parallax angle of 92.14188463025114 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 92.14188463025114\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03539718978242635"
    },
    {
        "question": "Given the parallax angle of 10.150142476111784 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 10.150142476111784\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.3213318221732825"
    },
    {
        "question": "Given the parallax angle of 84.75178218621859 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 84.75178218621859\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03848371907980707"
    },
    {
        "question": "Given the parallax angle of 87.3607157902371 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 87.3607157902371\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03733444429414721"
    },
    {
        "question": "Given the parallax angle of 87.8609150819307 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 87.8609150819307\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0371218962848954"
    },
    {
        "question": "Given the parallax angle of 78.67696722785657 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 78.67696722785657\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.041455128382384264"
    },
    {
        "question": "Given the parallax angle of 64.04043529599029 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 64.04043529599029\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.050929756521683835"
    },
    {
        "question": "Given the parallax angle of 24.77959134673322 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 24.77959134673322\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.13162298488015287"
    },
    {
        "question": "Given the parallax angle of 39.49085251565663 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 39.49085251565663\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0825903612963115"
    },
    {
        "question": "Given the parallax angle of 55.22878254693582 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 55.22878254693582\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05905550741401216"
    },
    {
        "question": "Given the parallax angle of 32.79631553358845 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 32.79631553358845\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09944909128060721"
    },
    {
        "question": "Given the parallax angle of 62.45935664947454 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 62.45935664947454\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05221897810237647"
    },
    {
        "question": "Given the parallax angle of 4.595001683574577 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 4.595001683574577\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.7098068731566108"
    },
    {
        "question": "Given the parallax angle of 55.149353130321835 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 55.149353130321835\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.059140562709051665"
    },
    {
        "question": "Given the parallax angle of 19.694452613441065 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 19.694452613441065\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.16560824721482648"
    },
    {
        "question": "Given the parallax angle of 47.851666008442066 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 47.851666008442066\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06815987925252222"
    },
    {
        "question": "Given the parallax angle of 95.20394177488551 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 95.20394177488551\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03425870522125611"
    },
    {
        "question": "Given the parallax angle of 50.143356099340124 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 50.143356099340124\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06504478421240646"
    },
    {
        "question": "Given the parallax angle of 51.49580866119129 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 51.49580866119129\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06333649013313662"
    },
    {
        "question": "Given the parallax angle of 65.19999470012723 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 65.19999470012723\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05002398837865348"
    },
    {
        "question": "Given the parallax angle of 39.39060071972957 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 39.39060071972957\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08280055946275056"
    },
    {
        "question": "Given the parallax angle of 94.63864979312866 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 94.63864979312866\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03446333801567235"
    },
    {
        "question": "Given the parallax angle of 41.78353330424747 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 41.78353330424747\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07805859196775687"
    },
    {
        "question": "Given the parallax angle of 18.939098447942023 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 18.939098447942023\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.1722132542967928"
    },
    {
        "question": "Given the parallax angle of 99.22659921624928 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 99.22659921624928\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.032869853476076016"
    },
    {
        "question": "Given the parallax angle of 90.34816753140551 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 90.34816753140551\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.036099943875825664"
    },
    {
        "question": "Given the parallax angle of 98.84165397611758 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 98.84165397611758\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.032997867254988496"
    },
    {
        "question": "Given the parallax angle of 94.81569682967623 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 94.81569682967623\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03439898546573357"
    },
    {
        "question": "Given the parallax angle of 84.3488502939519 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 84.3488502939519\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0386675546353155"
    },
    {
        "question": "Given the parallax angle of 18.23845025860669 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 18.23845025860669\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.1788289975804445"
    },
    {
        "question": "Given the parallax angle of 76.1168933585481 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 76.1168933585481\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04284940744761954"
    },
    {
        "question": "Given the parallax angle of 7.0364521782963125 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 7.0364521782963125\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.46352390302994045"
    },
    {
        "question": "Given the parallax angle of 74.82249970733263 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 74.82249970733263\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04359068181262326"
    },
    {
        "question": "Given the parallax angle of 19.487923904865585 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 19.487923904865585\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.16736332680122548"
    },
    {
        "question": "Given the parallax angle of 6.0940830210188865 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 6.0940830210188865\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.5352017302550833"
    },
    {
        "question": "Given the parallax angle of 23.017514060525055 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 23.017514060525055\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.1416992194982951"
    },
    {
        "question": "Given the parallax angle of 15.121581586412214 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 15.121581586412214\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.2156893284296514"
    },
    {
        "question": "Given the parallax angle of 8.08245251438155 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.08245251438155\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.4035363983102844"
    },
    {
        "question": "Given the parallax angle of 59.118222984812775 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 59.118222984812775\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.055170193089283406"
    },
    {
        "question": "Given the parallax angle of 89.90273277950705 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 89.90273277950705\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03627880573070737"
    },
    {
        "question": "Given the parallax angle of 84.33694362593987 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 84.33694362593987\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03867301371073471"
    },
    {
        "question": "Given the parallax angle of 43.73222881751055 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 43.73222881751055\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07458032360476195"
    },
    {
        "question": "Given the parallax angle of 5.268393213260761 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 5.268393213260761\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.6190813109693377"
    },
    {
        "question": "Given the parallax angle of 7.137082909221582 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 7.137082909221582\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.4569883548575956"
    },
    {
        "question": "Given the parallax angle of 74.15355466771595 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 74.15355466771595\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.043983916776243394"
    },
    {
        "question": "Given the parallax angle of 74.29162731241482 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 74.29162731241482\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04390217168688127"
    },
    {
        "question": "Given the parallax angle of 53.40243118445614 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 53.40243118445614\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06107519273610857"
    },
    {
        "question": "Given the parallax angle of 94.79436796644113 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 94.79436796644113\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0344067252847984"
    },
    {
        "question": "Given the parallax angle of 61.207962390584235 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 61.207962390584235\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.053286592949370375"
    },
    {
        "question": "Given the parallax angle of 33.421577699214964 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 33.421577699214964\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09758856408636998"
    },
    {
        "question": "Given the parallax angle of 92.97230073409257 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 92.97230073409257\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03508102683718389"
    },
    {
        "question": "Given the parallax angle of 37.267239560784994 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 37.267239560784994\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08751825505743822"
    },
    {
        "question": "Given the parallax angle of 89.6135569256764 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 89.6135569256764\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.036395874564743656"
    },
    {
        "question": "Given the parallax angle of 29.018178237708078 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 29.018178237708078\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.11239726182841998"
    },
    {
        "question": "Given the parallax angle of 61.54996927082595 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 61.54996927082595\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05299050212058158"
    },
    {
        "question": "Given the parallax angle of 33.131998424955185 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 33.131998424955185\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0984415046546304"
    },
    {
        "question": "Given the parallax angle of 76.99020177782405 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 76.99020177782405\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.042363361854532516"
    },
    {
        "question": "Given the parallax angle of 90.98323236593248 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 90.98323236593248\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03584796552456499"
    },
    {
        "question": "Given the parallax angle of 78.16199087791598 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 78.16199087791598\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.041728258716718036"
    },
    {
        "question": "Given the parallax angle of 18.584891292037604 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 18.584891292037604\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.17549544551626178"
    },
    {
        "question": "Given the parallax angle of 44.38401439932744 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 44.38401439932744\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07348510091545159"
    },
    {
        "question": "Given the parallax angle of 65.62467993038678 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 65.62467993038678\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.049700261862263236"
    },
    {
        "question": "Given the parallax angle of 4.659008736830137 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 4.659008736830137\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.7000553039070951"
    },
    {
        "question": "Given the parallax angle of 44.43443187632391 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 44.43443187632391\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07340172113025932"
    },
    {
        "question": "Given the parallax angle of 15.471183395849406 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 15.471183395849406\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.21081540394915377"
    },
    {
        "question": "Given the parallax angle of 15.943392474888855 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 15.943392474888855\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.20457150398225837"
    },
    {
        "question": "Given the parallax angle of 42.022399468039765 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 42.022399468039765\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07761488678551122"
    },
    {
        "question": "Given the parallax angle of 55.3504867440377 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 55.3504867440377\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.058925656647793895"
    },
    {
        "question": "Given the parallax angle of 96.20860771780636 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 96.20860771780636\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0339009560010895"
    },
    {
        "question": "Given the parallax angle of 38.62807381536376 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 38.62807381536376\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08443506121369668"
    },
    {
        "question": "Given the parallax angle of 20.8796720604459 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 20.8796720604459\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.15620761512562667"
    },
    {
        "question": "Given the parallax angle of 19.92350175217271 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 19.92350175217271\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.16370434363084546"
    },
    {
        "question": "Given the parallax angle of 86.97971644601834 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 86.97971644601834\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03749798125855741"
    },
    {
        "question": "Given the parallax angle of 60.396815063554115 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 60.396815063554115\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.054002247862496855"
    },
    {
        "question": "Given the parallax angle of 51.91996582683104 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 51.91996582683104\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06281906633077815"
    },
    {
        "question": "Given the parallax angle of 82.11788132206034 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 82.11788132206034\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03971807022609142"
    },
    {
        "question": "Given the parallax angle of 43.90486027971278 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 43.90486027971278\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07428707793142691"
    },
    {
        "question": "Given the parallax angle of 38.8329112981248 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 38.8329112981248\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08398967958204387"
    },
    {
        "question": "Given the parallax angle of 44.97931955245805 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 44.97931955245805\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07251251930042134"
    },
    {
        "question": "Given the parallax angle of 77.68799461425493 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 77.68799461425493\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04198285453707632"
    },
    {
        "question": "Given the parallax angle of 11.24747807892383 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 11.24747807892383\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.2899817856306063"
    },
    {
        "question": "Given the parallax angle of 88.43597727119153 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 88.43597727119153\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.036880508112278235"
    },
    {
        "question": "Given the parallax angle of 35.93942939582711 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 35.93942939582711\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09075168504333933"
    },
    {
        "question": "Given the parallax angle of 64.18221877087718 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 64.18221877087718\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05081724875873837"
    },
    {
        "question": "Given the parallax angle of 92.51011838863091 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 92.51011838863091\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03525629232756733"
    },
    {
        "question": "Given the parallax angle of 21.34397026294397 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 21.34397026294397\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.1528096102546559"
    },
    {
        "question": "Given the parallax angle of 45.673393772212286 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 45.673393772212286\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0714105851961404"
    },
    {
        "question": "Given the parallax angle of 31.50065841183333 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 31.50065841183333\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.1035395430319709"
    },
    {
        "question": "Given the parallax angle of 17.847281955200827 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 17.847281955200827\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.18274848715644287"
    },
    {
        "question": "Given the parallax angle of 60.50980711286661 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 60.50980711286661\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.053901407602965315"
    },
    {
        "question": "Given the parallax angle of 61.998752912304376 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 61.998752912304376\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.052606925526080026"
    },
    {
        "question": "Given the parallax angle of 37.789068534542906 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 37.789068534542906\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0863097161070812"
    },
    {
        "question": "Given the parallax angle of 67.02334511906248 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 67.02334511906248\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0486631004670609"
    },
    {
        "question": "Given the parallax angle of 27.71688262393765 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 27.71688262393765\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.11767426450587151"
    },
    {
        "question": "Given the parallax angle of 69.84641652919943 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 69.84641652919943\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.046696222071807084"
    },
    {
        "question": "Given the parallax angle of 3.3248963267557152 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 3.3248963267557152\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.9809520227507126"
    },
    {
        "question": "Given the parallax angle of 91.10866128565738 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 91.10866128565738\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.035798613777687886"
    },
    {
        "question": "Given the parallax angle of 61.28561446611395 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 61.28561446611395\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05321907605202878"
    },
    {
        "question": "Given the parallax angle of 2.2701423389377013 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 2.2701423389377013\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "1.4367221478692218"
    },
    {
        "question": "Given the parallax angle of 12.784774391165774 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 12.784774391165774\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.25511312733223984"
    },
    {
        "question": "Given the parallax angle of 90.70325502688281 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 90.70325502688281\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03595861886324547"
    },
    {
        "question": "Given the parallax angle of 32.39628018689176 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 32.39628018689176\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.10067710732070817"
    },
    {
        "question": "Given the parallax angle of 66.76003938381187 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 66.76003938381187\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0488550307529972"
    },
    {
        "question": "Given the parallax angle of 58.96333086083258 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 58.96333086083258\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05531512093279629"
    },
    {
        "question": "Given the parallax angle of 76.98083350532518 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 76.98083350532518\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04236851731336234"
    },
    {
        "question": "Given the parallax angle of 12.340983127302946 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 12.340983127302946\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.26428719199458384"
    },
    {
        "question": "Given the parallax angle of 80.69095818685267 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 80.69095818685267\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.040420436817899315"
    },
    {
        "question": "Given the parallax angle of 65.43987503206834 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 65.43987503206834\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.049840617445695415"
    },
    {
        "question": "Given the parallax angle of 12.55202452569435 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 12.55202452569435\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.2598436427917202"
    },
    {
        "question": "Given the parallax angle of 45.98974517471281 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 45.98974517471281\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07091937049829067"
    },
    {
        "question": "Given the parallax angle of 34.12672170338954 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 34.12672170338954\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09557213861662803"
    },
    {
        "question": "Given the parallax angle of 3.633691974977023 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 3.633691974977023\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.8975895039061634"
    },
    {
        "question": "Given the parallax angle of 74.94703395875699 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 74.94703395875699\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04351825022137976"
    },
    {
        "question": "Given the parallax angle of 97.3380483738463 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 97.3380483738463\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.033507593707249435"
    },
    {
        "question": "Given the parallax angle of 23.44509196124937 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 23.44509196124937\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.13911499185237688"
    },
    {
        "question": "Given the parallax angle of 46.17776250969766 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 46.17776250969766\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0706306152551779"
    },
    {
        "question": "Given the parallax angle of 66.88069505846994 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 66.88069505846994\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04876689415856154"
    },
    {
        "question": "Given the parallax angle of 98.71118121722787 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 98.71118121722787\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03304148260560171"
    },
    {
        "question": "Given the parallax angle of 16.29714401511131 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 16.29714401511131\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.20013100296243266"
    },
    {
        "question": "Given the parallax angle of 8.874963574673522 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.874963574673522\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.3675016522293067"
    },
    {
        "question": "Given the parallax angle of 8.315589932149154 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.315589932149154\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.39222277719080434"
    },
    {
        "question": "Given the parallax angle of 13.966428314960448 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 13.966428314960448\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.2335288381263331"
    },
    {
        "question": "Given the parallax angle of 74.61320774682962 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 74.61320774682962\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.043712954792591935"
    },
    {
        "question": "Given the parallax angle of 74.10844805876604 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 74.10844805876604\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04401068788515311"
    },
    {
        "question": "Given the parallax angle of 64.057020820561 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 64.057020820561\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05091656988394531"
    },
    {
        "question": "Given the parallax angle of 7.8574229644208256 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 7.8574229644208256\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.41509331901007634"
    },
    {
        "question": "Given the parallax angle of 11.028274682367094 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 11.028274682367094\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.29574560582738185"
    },
    {
        "question": "Given the parallax angle of 77.46241080674865 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 77.46241080674865\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04210511580002724"
    },
    {
        "question": "Given the parallax angle of 31.4152641948162 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 31.4152641948162\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.10382098832406511"
    },
    {
        "question": "Given the parallax angle of 29.022664237818663 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 29.022664237818663\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.11237988871184942"
    },
    {
        "question": "Given the parallax angle of 28.986702596805376 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 28.986702596805376\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.11251931006208654"
    },
    {
        "question": "Given the parallax angle of 8.385865726514659 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.385865726514659\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.38893584556868493"
    },
    {
        "question": "Given the parallax angle of 74.1023831674745 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 74.1023831674745\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.044014289929058856"
    },
    {
        "question": "Given the parallax angle of 92.82135805736786 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 92.82135805736786\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.035138074312074136"
    },
    {
        "question": "Given the parallax angle of 56.075265390800475 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 56.075265390800475\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.058164036397097725"
    },
    {
        "question": "Given the parallax angle of 19.01514249567199 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 19.01514249567199\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.17152455091566068"
    },
    {
        "question": "Given the parallax angle of 73.63483750183606 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 73.63483750183606\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04429375941905361"
    },
    {
        "question": "Given the parallax angle of 14.3876810303405 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 14.3876810303405\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.2266914154052694"
    },
    {
        "question": "Given the parallax angle of 51.63554370497366 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 51.63554370497366\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06316509022937376"
    },
    {
        "question": "Given the parallax angle of 39.48523560944232 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 39.48523560944232\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0826021100501545"
    },
    {
        "question": "Given the parallax angle of 77.30430203507507 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 77.30430203507507\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.042191232458027667"
    },
    {
        "question": "Given the parallax angle of 87.64881550703117 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 87.64881550703117\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03721172680201013"
    },
    {
        "question": "Given the parallax angle of 24.6988987423774 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 24.6988987423774\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.13205300411112542"
    },
    {
        "question": "Given the parallax angle of 8.474451182014256 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.474451182014256\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.38487020659103094"
    },
    {
        "question": "Given the parallax angle of 85.71957529626629 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 85.71957529626629\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.038049229314246244"
    },
    {
        "question": "Given the parallax angle of 20.94206418349683 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 20.94206418349683\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.15574223002036608"
    },
    {
        "question": "Given the parallax angle of 34.12110127195617 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 34.12110127195617\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09558788126947367"
    },
    {
        "question": "Given the parallax angle of 44.80600125523237 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 44.80600125523237\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07279301177956722"
    },
    {
        "question": "Given the parallax angle of 49.83824820627707 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 49.83824820627707\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06544298595063064"
    },
    {
        "question": "Given the parallax angle of 51.360802575948696 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 51.360802575948696\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06350297529608236"
    },
    {
        "question": "Given the parallax angle of 64.87044179552376 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 64.87044179552376\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.050278118768608264"
    },
    {
        "question": "Given the parallax angle of 25.761481136429218 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 25.761481136429218\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.12660622112116326"
    },
    {
        "question": "Given the parallax angle of 73.79372110566932 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 73.79372110566932\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.044198391520289634"
    },
    {
        "question": "Given the parallax angle of 42.988345135846885 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 42.988345135846885\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07587088469818064"
    },
    {
        "question": "Given the parallax angle of 9.93982821868256 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 9.93982821868256\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.3281307991859567"
    },
    {
        "question": "Given the parallax angle of 47.02691336981572 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 47.02691336981572\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06935525943450228"
    },
    {
        "question": "Given the parallax angle of 38.048791370266756 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 38.048791370266756\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.08572056193396418"
    },
    {
        "question": "Given the parallax angle of 73.16147665490384 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 73.16147665490384\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.044580343731331976"
    },
    {
        "question": "Given the parallax angle of 75.58387638843207 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 75.58387638843207\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04315158117064512"
    },
    {
        "question": "Given the parallax angle of 95.51118429561784 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 95.51118429561784\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03414850104959988"
    },
    {
        "question": "Given the parallax angle of 96.71368934604767 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 96.71368934604767\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.033723910226372944"
    },
    {
        "question": "Given the parallax angle of 89.08801215109193 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 89.08801215109193\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03661057978974624"
    },
    {
        "question": "Given the parallax angle of 50.089466666151424 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 50.089466666151424\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.06511476352714841"
    },
    {
        "question": "Given the parallax angle of 76.56600056523999 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 76.56600056523999\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04259806902658231"
    },
    {
        "question": "Given the parallax angle of 85.69744388567557 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 85.69744388567557\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03805905554801043"
    },
    {
        "question": "Given the parallax angle of 67.16948062123329 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 67.16948062123329\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04855722788090762"
    },
    {
        "question": "Given the parallax angle of 8.31139763486023 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.31139763486023\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.3924206156961569"
    },
    {
        "question": "Given the parallax angle of 82.2098371790943 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 82.2098371790943\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03967364355754787"
    },
    {
        "question": "Given the parallax angle of 41.77960918636295 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 41.77960918636295\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.07806592356139182"
    },
    {
        "question": "Given the parallax angle of 10.051833565642045 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 10.051833565642045\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.32447451063214117"
    },
    {
        "question": "Given the parallax angle of 27.336425461971047 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 27.336425461971047\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.119312006674199"
    },
    {
        "question": "Given the parallax angle of 87.87161167480663 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 87.87161167480663\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.03711737744423942"
    },
    {
        "question": "Given the parallax angle of 8.330658939822461 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 8.330658939822461\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.39151330053573674"
    },
    {
        "question": "Given the parallax angle of 26.35554246664524 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 26.35554246664524\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.12375248133462506"
    },
    {
        "question": "Given the parallax angle of 33.92974696246317 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 33.92974696246317\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09612697025933423"
    },
    {
        "question": "Given the parallax angle of 3.8112428137410945 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 3.8112428137410945\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.8557743330884501"
    },
    {
        "question": "Given the parallax angle of 76.39311260049962 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 76.39311260049962\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.042694474228637494"
    },
    {
        "question": "Given the parallax angle of 33.17240362209985 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 33.17240362209985\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.09832159931258466"
    },
    {
        "question": "Given the parallax angle of 2.507158806209799 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 2.507158806209799\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "1.3009003534555146"
    },
    {
        "question": "Given the parallax angle of 18.49486072800483 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 18.49486072800483\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.176349734401016"
    },
    {
        "question": "Given the parallax angle of 90.1639927208602 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 90.1639927208602\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0361736839590162"
    },
    {
        "question": "Given the parallax angle of 27.249205681002547 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 27.249205681002547\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.11969390283700317"
    },
    {
        "question": "Given the parallax angle of 72.6424904108868 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 72.6424904108868\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.04489884306993182"
    },
    {
        "question": "Given the parallax angle of 93.93724835215563 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 93.93724835215563\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.034720665490864236"
    },
    {
        "question": "Given the parallax angle of 22.70278211747267 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 22.70278211747267\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.1436636162163247"
    },
    {
        "question": "Given the parallax angle of 58.02836604788959 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 58.02836604788959\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.0562063693896832"
    },
    {
        "question": "Given the parallax angle of 60.72658225808248 arcseconds for a star, how far is it from Earth in light years?",
        "code": "from astropy import units as u\n\nparallax = 60.72658225808248\ndistance_in_parsecs = 1.0 / parallax\ndistance_in_light_years = distance_in_parsecs * u.pc.to(u.lyr)\nresult = distance_in_light_years",
        "answer": "0.05370899622353325"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -14.220884727566357\u00b0 and longitude 124.5219323804094\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-14.220884727566357*u.deg, lon=124.5219323804094*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "57d53m19.4467867s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 8.380438211639344\u00b0 and longitude 132.73885693639744\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=8.380438211639344*u.deg, lon=132.73885693639744*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "131d21m24.37541832s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -61.24836496246332\u00b0 and longitude 118.45617675329737\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-61.24836496246332*u.deg, lon=118.45617675329737*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "81d49m52.89375827s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 81.80401511366952\u00b0 and longitude 91.86865948535183\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=81.80401511366952*u.deg, lon=91.86865948535183*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "84d12m48.01943619s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 28.77746680788036\u00b0 and longitude 24.518649716648866\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=28.77746680788036*u.deg, lon=24.518649716648866*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "137d47m49.12591773s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -39.549914238090835\u00b0 and longitude 57.602659839380266\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-39.549914238090835*u.deg, lon=57.602659839380266*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "118d03m01.71034222s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -28.606386928085527\u00b0 and longitude -74.00846464856565\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-28.606386928085527*u.deg, lon=-74.00846464856565*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "78d22m44.6839647s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 11.474324531857974\u00b0 and longitude 76.17550420721716\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=11.474324531857974*u.deg, lon=76.17550420721716*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "75d54m44.00084342s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 61.65515426783753\u00b0 and longitude -69.62765189594805\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=61.65515426783753*u.deg, lon=-69.62765189594805*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "94d29m56.71102053s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -0.6261381461661699\u00b0 and longitude 142.54698441263974\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-0.6261381461661699*u.deg, lon=142.54698441263974*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "142d49m59.87070003s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 20.36211675237105\u00b0 and longitude -123.1940921710443\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=20.36211675237105*u.deg, lon=-123.1940921710443*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "57d22m48.30879317s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 28.066663517395696\u00b0 and longitude -155.05854476290102\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=28.066663517395696*u.deg, lon=-155.05854476290102*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "138d14m29.30461202s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -5.6712144292329185\u00b0 and longitude 77.5664270332511\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-5.6712144292329185*u.deg, lon=77.5664270332511*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "78d49m07.3743139s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -53.676241539537635\u00b0 and longitude 84.32885919888275\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-53.676241539537635*u.deg, lon=84.32885919888275*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "131d44m03.67784584s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -87.21121237257202\u00b0 and longitude -71.35487235863287\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-87.21121237257202*u.deg, lon=-71.35487235863287*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "96d24m32.41776964s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -11.125997133889015\u00b0 and longitude 119.53452912735395\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-11.125997133889015*u.deg, lon=119.53452912735395*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "149d42m49.92676664s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -12.159982454665766\u00b0 and longitude -6.187141886659333\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-12.159982454665766*u.deg, lon=-6.187141886659333*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "171d20m46.53613596s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -33.241165737518195\u00b0 and longitude 99.52976291375398\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-33.241165737518195*u.deg, lon=99.52976291375398*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "101d32m37.33301547s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 75.6289182498532\u00b0 and longitude -107.5436107277948\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=75.6289182498532*u.deg, lon=-107.5436107277948*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "88d38m27.62485129s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -31.708125973713713\u00b0 and longitude 58.75131202760818\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-31.708125973713713*u.deg, lon=58.75131202760818*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "141d12m44.33725797s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 78.72829647222486\u00b0 and longitude 97.42063716311992\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=78.72829647222486*u.deg, lon=97.42063716311992*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "83d03m02.62673797s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 44.746467525364096\u00b0 and longitude -56.55597720096682\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=44.746467525364096*u.deg, lon=-56.55597720096682*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "108d49m40.03129948s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -85.25258388411706\u00b0 and longitude -125.44826360252678\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-85.25258388411706*u.deg, lon=-125.44826360252678*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "92d46m21.47935775s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 27.296431350593792\u00b0 and longitude 25.33619381654765\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=27.296431350593792*u.deg, lon=25.33619381654765*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "32d46m02.74245929s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 15.765481799583071\u00b0 and longitude 18.283139540049348\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=15.765481799583071*u.deg, lon=18.283139540049348*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "151d27m36.53930898s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -6.621210539463718\u00b0 and longitude -85.2023554333835\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-6.621210539463718*u.deg, lon=-85.2023554333835*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "95d55m57.87494723s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -11.529428298701376\u00b0 and longitude 0.763477997747259\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-11.529428298701376*u.deg, lon=0.763477997747259*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "173d48m57.37888107s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 34.83183867163291\u00b0 and longitude -44.80576533916752\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=34.83183867163291*u.deg, lon=-44.80576533916752*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "122d04m33.72637081s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -44.50696755361153\u00b0 and longitude 82.14871105561764\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-44.50696755361153*u.deg, lon=82.14871105561764*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "99d01m08.96470539s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 2.6984734099653167\u00b0 and longitude 134.3546391014455\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=2.6984734099653167*u.deg, lon=134.3546391014455*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "134d12m00.97551107s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -43.786276797810395\u00b0 and longitude 134.03119895961356\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-43.786276797810395*u.deg, lon=134.03119895961356*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "63d59m15.49984464s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 60.43794941617361\u00b0 and longitude -167.76786252614903\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=60.43794941617361*u.deg, lon=-167.76786252614903*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "55d25m01.00700039s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -85.90648768668433\u00b0 and longitude 120.10054147350445\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-85.90648768668433*u.deg, lon=120.10054147350445*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "93d46m37.90228077s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 7.320942377950914\u00b0 and longitude 129.2301230004905\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=7.320942377950914*u.deg, lon=129.2301230004905*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "49d55m08.18179414s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -77.132776024354\u00b0 and longitude 146.3918388053513\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-77.132776024354*u.deg, lon=146.3918388053513*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "85d04m28.48192471s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 67.15643543038775\u00b0 and longitude -102.93742846502752\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=67.15643543038775*u.deg, lon=-102.93742846502752*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "79d47m23.15322101s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -18.112395242030914\u00b0 and longitude 66.7763343624953\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-18.112395242030914*u.deg, lon=66.7763343624953*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "113d11m16.28618869s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 88.70442361678477\u00b0 and longitude 154.96699600013466\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=88.70442361678477*u.deg, lon=154.96699600013466*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "84d57m08.3773996s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -26.426442445496583\u00b0 and longitude -109.28259304234821\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-26.426442445496583*u.deg, lon=-109.28259304234821*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "75d56m31.35601934s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -48.027833088755386\u00b0 and longitude -63.66102412487852\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-48.027833088755386*u.deg, lon=-63.66102412487852*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "111d53m16.34709784s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 51.58638086565742\u00b0 and longitude 60.22185314594324\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=51.58638086565742*u.deg, lon=60.22185314594324*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "103d05m41.05314341s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 35.08316293211256\u00b0 and longitude -56.64566774941579\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=35.08316293211256*u.deg, lon=-56.64566774941579*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "59d15m19.62793718s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -9.123593152770141\u00b0 and longitude 92.22256768528865\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-9.123593152770141*u.deg, lon=92.22256768528865*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "88d14m28.84393157s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -0.4393879510557781\u00b0 and longitude -96.62734663685987\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-0.4393879510557781*u.deg, lon=-96.62734663685987*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "8d31m50.5503776s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 72.53892499992509\u00b0 and longitude -33.23576591626431\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=72.53892499992509*u.deg, lon=-33.23576591626431*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "69d46m25.07432731s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 13.750583887128258\u00b0 and longitude -25.087131653555787\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=13.750583887128258*u.deg, lon=-25.087131653555787*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "148d42m01.45271131s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 40.96547439969066\u00b0 and longitude -4.1673061141541154\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=40.96547439969066*u.deg, lon=-4.1673061141541154*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "133d02m50.23399102s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -26.28156074578422\u00b0 and longitude -3.9806176529334607\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-26.28156074578422*u.deg, lon=-3.9806176529334607*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "89d26m28.35135859s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 15.10451716895193\u00b0 and longitude -155.95920684337202\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=15.10451716895193*u.deg, lon=-155.95920684337202*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "64d48m25.23553587s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -32.52862386761835\u00b0 and longitude 146.03106342361087\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-32.52862386761835*u.deg, lon=146.03106342361087*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "138d54m12.52993241s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -25.44568103087346\u00b0 and longitude -60.898876103173606\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-25.44568103087346*u.deg, lon=-60.898876103173606*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "42d21m36.97643383s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 36.44043611252097\u00b0 and longitude 0.5789867817393031\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=36.44043611252097*u.deg, lon=0.5789867817393031*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "30d46m40.2878011s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 19.08834161473679\u00b0 and longitude 108.35712428224622\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=19.08834161473679*u.deg, lon=108.35712428224622*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "105d48m54.77991953s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -23.848156976642784\u00b0 and longitude 26.691426407411853\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-23.848156976642784*u.deg, lon=26.691426407411853*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "117d09m45.43823533s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -54.487689250011265\u00b0 and longitude 59.454898134532925\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-54.487689250011265*u.deg, lon=59.454898134532925*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "111d30m21.00557471s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -16.769069403177028\u00b0 and longitude -62.73170401675159\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-16.769069403177028*u.deg, lon=-62.73170401675159*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "118d14m19.84802377s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -55.28982528573439\u00b0 and longitude 128.60523188762835\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-55.28982528573439*u.deg, lon=128.60523188762835*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "121d17m13.77797508s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -49.654923151180334\u00b0 and longitude -59.84564560344735\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-49.654923151180334*u.deg, lon=-59.84564560344735*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "113d44m08.75788416s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -60.30265383691393\u00b0 and longitude -172.23842044087203\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-60.30265383691393*u.deg, lon=-172.23842044087203*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "66d07m38.08071544s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -60.478858308547274\u00b0 and longitude 37.437825723624144\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-60.478858308547274*u.deg, lon=37.437825723624144*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "118d00m41.24606774s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -34.09833653531458\u00b0 and longitude -170.80674361885977\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-34.09833653531458*u.deg, lon=-170.80674361885977*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "150d10m55.07804956s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -30.023298861653252\u00b0 and longitude 165.10359584315336\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-30.023298861653252*u.deg, lon=165.10359584315336*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "152d09m48.12004883s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -19.955286659090078\u00b0 and longitude 142.91699176431496\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-19.955286659090078*u.deg, lon=142.91699176431496*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "44d16m08.53478036s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 18.808453275210837\u00b0 and longitude -177.73919416389873\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=18.808453275210837*u.deg, lon=-177.73919416389873*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "13d13m11.03643205s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 7.875926910204797\u00b0 and longitude 40.89632269414457\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=7.875926910204797*u.deg, lon=40.89632269414457*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "136d30m18.65440062s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 67.84821547559517\u00b0 and longitude -151.30805672515262\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=67.84821547559517*u.deg, lon=-151.30805672515262*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "65d25m09.27994837s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 50.30766848719557\u00b0 and longitude 127.88758068141493\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=50.30766848719557*u.deg, lon=127.88758068141493*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "115d00m35.6009896s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 21.1504779515343\u00b0 and longitude 116.13198698893677\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=21.1504779515343*u.deg, lon=116.13198698893677*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "142d33m44.62899308s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -41.967719104132314\u00b0 and longitude 30.886799491863087\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-41.967719104132314*u.deg, lon=30.886799491863087*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "116d50m09.91049244s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -37.97781083530611\u00b0 and longitude -56.659081735173785\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-37.97781083530611*u.deg, lon=-56.659081735173785*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "119d48m11.05115876s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 10.785347468849238\u00b0 and longitude 78.30345313233431\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=10.785347468849238*u.deg, lon=78.30345313233431*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "78d02m11.75286309s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -37.19559551321303\u00b0 and longitude 176.89388642297763\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-37.19559551321303*u.deg, lon=176.89388642297763*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "148d24m05.54286941s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -88.41520048828778\u00b0 and longitude -106.79509744670781\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-88.41520048828778*u.deg, lon=-106.79509744670781*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "95d25m32.13385299s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -42.72952329931411\u00b0 and longitude 167.7823801366955\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-42.72952329931411*u.deg, lon=167.7823801366955*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "102d19m51.53124316s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 77.38217830408541\u00b0 and longitude 59.09637192460113\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=77.38217830408541*u.deg, lon=59.09637192460113*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "90d34m57.31069988s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 17.27397138866145\u00b0 and longitude -46.880206641620816\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=17.27397138866145*u.deg, lon=-46.880206641620816*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "44d16m43.0279839s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -27.70249479230234\u00b0 and longitude 170.30896876319787\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-27.70249479230234*u.deg, lon=170.30896876319787*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "34d43m23.63763051s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 36.28974221708776\u00b0 and longitude 47.39236721718481\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=36.28974221708776*u.deg, lon=47.39236721718481*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "118d42m23.57075199s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 65.37308873879832\u00b0 and longitude -5.679298444569383\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=65.37308873879832*u.deg, lon=-5.679298444569383*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "108d39m29.06540392s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -24.461262659128167\u00b0 and longitude -160.39316052850978\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-24.461262659128167*u.deg, lon=-160.39316052850978*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "74d11m59.09480371s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 29.37109887911619\u00b0 and longitude 14.19626823719085\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=29.37109887911619*u.deg, lon=14.19626823719085*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "27d29m08.88375991s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -82.26588521149066\u00b0 and longitude 132.5852503507623\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-82.26588521149066*u.deg, lon=132.5852503507623*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "100d56m10.60942937s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -25.46011012082748\u00b0 and longitude 28.81527753952446\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-25.46011012082748*u.deg, lon=28.81527753952446*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "145d29m32.09490824s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 78.38326196554294\u00b0 and longitude 133.6014240828713\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=78.38326196554294*u.deg, lon=133.6014240828713*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "76d29m53.9541554s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 2.440573316980931\u00b0 and longitude -50.541634154645294\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=2.440573316980931*u.deg, lon=-50.541634154645294*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "129d29m30.49410742s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -35.00786329042537\u00b0 and longitude 68.19600242905892\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-35.00786329042537*u.deg, lon=68.19600242905892*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "110d28m43.50844844s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 87.3614185071863\u00b0 and longitude 121.4220317302914\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=87.3614185071863*u.deg, lon=121.4220317302914*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "83d06m51.56742265s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 38.32195111209083\u00b0 and longitude -89.51207839339234\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=38.32195111209083*u.deg, lon=-89.51207839339234*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "87d09m08.79130705s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -6.605158110927832\u00b0 and longitude 121.03145954696384\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-6.605158110927832*u.deg, lon=121.03145954696384*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "59d30m03.88558385s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 64.95536485208365\u00b0 and longitude 105.67082047836675\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=64.95536485208365*u.deg, lon=105.67082047836675*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "77d52m38.24369613s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 52.17792627255889\u00b0 and longitude -75.25980790232575\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=52.17792627255889*u.deg, lon=-75.25980790232575*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "94d34m34.81371367s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -19.02930818364021\u00b0 and longitude -133.0711147872393\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-19.02930818364021*u.deg, lon=-133.0711147872393*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "52d56m35.6263125s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 40.581650811766934\u00b0 and longitude -130.5437621864923\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=40.581650811766934*u.deg, lon=-130.5437621864923*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "50d00m32.63145084s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -16.603200829344928\u00b0 and longitude -69.94324488034266\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-16.603200829344928*u.deg, lon=-69.94324488034266*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "111d20m20.5968114s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -81.22874100244574\u00b0 and longitude 38.455584841370865\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-81.22874100244574*u.deg, lon=38.455584841370865*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "101d03m39.49532879s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -51.05061533633163\u00b0 and longitude -62.11907561717621\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-51.05061533633163*u.deg, lon=-62.11907561717621*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "111d53m35.56165221s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 60.87163625133411\u00b0 and longitude 24.724546011681582\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=60.87163625133411*u.deg, lon=24.724546011681582*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "110d24m25.8868129s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -63.91039752611958\u00b0 and longitude -17.89526499490583\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-63.91039752611958*u.deg, lon=-17.89526499490583*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "70d48m16.90917793s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 79.34434029015316\u00b0 and longitude -59.668159304265984\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=79.34434029015316*u.deg, lon=-59.668159304265984*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "90d01m56.49561013s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 48.6627155939542\u00b0 and longitude -22.818442921770696\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=48.6627155939542*u.deg, lon=-22.818442921770696*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "46d57m15.72434432s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -66.17093098594896\u00b0 and longitude 59.53073438420688\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-66.17093098594896*u.deg, lon=59.53073438420688*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "115d57m29.15752495s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -6.413434302119569\u00b0 and longitude -128.93080723506642\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-6.413434302119569*u.deg, lon=-128.93080723506642*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "52d55m55.83041966s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -16.735906837942593\u00b0 and longitude 103.4259111950227\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-16.735906837942593*u.deg, lon=103.4259111950227*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "162d19m28.42374663s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -25.928046887874757\u00b0 and longitude 128.2025744292925\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-25.928046887874757*u.deg, lon=128.2025744292925*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "59d00m43.82012576s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -39.46633292051173\u00b0 and longitude -169.44819289420698\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-39.46633292051173*u.deg, lon=-169.44819289420698*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "46d07m34.35225198s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 80.32916646293538\u00b0 and longitude -97.25269304389467\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=80.32916646293538*u.deg, lon=-97.25269304389467*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "74d48m40.39054151s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 49.14888764772303\u00b0 and longitude -79.8034170042695\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=49.14888764772303*u.deg, lon=-79.8034170042695*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "44d30m35.06999194s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -1.7425583018554818\u00b0 and longitude -110.28071437590492\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-1.7425583018554818*u.deg, lon=-110.28071437590492*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "109d47m44.59256111s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 51.84917441842802\u00b0 and longitude -154.33269274393572\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=51.84917441842802*u.deg, lon=-154.33269274393572*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "118d16m04.42497655s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 9.105028496399783\u00b0 and longitude -164.40777646347937\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=9.105028496399783*u.deg, lon=-164.40777646347937*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "16d27m29.44209718s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -64.19815897436445\u00b0 and longitude -21.211093508097775\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-64.19815897436445*u.deg, lon=-21.211093508097775*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "119d27m19.95671575s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -35.592568239255804\u00b0 and longitude -54.070322437019954\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-35.592568239255804*u.deg, lon=-54.070322437019954*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "122d31m01.33772268s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 7.358833716971219\u00b0 and longitude 32.14853309967086\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=7.358833716971219*u.deg, lon=32.14853309967086*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "121d24m56.48574245s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -87.85300361515306\u00b0 and longitude 137.31965664176658\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-87.85300361515306*u.deg, lon=137.31965664176658*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "97d16m28.07004601s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -75.22011113299702\u00b0 and longitude -42.28015505729505\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-75.22011113299702*u.deg, lon=-42.28015505729505*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "106d23m42.21079639s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -85.65396482147344\u00b0 and longitude -39.72930969931167\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-85.65396482147344*u.deg, lon=-39.72930969931167*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "98d51m34.55060017s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -27.74652223750134\u00b0 and longitude -65.86407372969482\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-27.74652223750134*u.deg, lon=-65.86407372969482*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "71d13m37.28711429s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 72.84411236026088\u00b0 and longitude 176.83419097644838\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=72.84411236026088*u.deg, lon=176.83419097644838*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "66d59m47.130498s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -73.82089570513698\u00b0 and longitude 72.41639894558625\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-73.82089570513698*u.deg, lon=72.41639894558625*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "99d57m45.16826684s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -13.603291671468838\u00b0 and longitude 151.07951091183304\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-13.603291671468838*u.deg, lon=151.07951091183304*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "33d59m20.19684739s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 37.67935275309179\u00b0 and longitude -61.561139937975355\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=37.67935275309179*u.deg, lon=-61.561139937975355*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "63d45m01.85403575s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -25.777509538334854\u00b0 and longitude -52.13103669608792\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-25.777509538334854*u.deg, lon=-52.13103669608792*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "126d55m20.87339543s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 41.696747406979995\u00b0 and longitude -46.36805192993532\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=41.696747406979995*u.deg, lon=-46.36805192993532*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "54d17m06.87940229s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 68.5797992173085\u00b0 and longitude -47.57525676858759\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=68.5797992173085*u.deg, lon=-47.57525676858759*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "69d07m14.42759057s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 8.30166385417634\u00b0 and longitude 63.223667080020704\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=8.30166385417634*u.deg, lon=63.223667080020704*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "150d24m56.98049459s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 78.6844372787551\u00b0 and longitude -78.75116370174445\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=78.6844372787551*u.deg, lon=-78.75116370174445*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "73d20m50.97396231s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -27.199034479148487\u00b0 and longitude 49.40884789085962\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-27.199034479148487*u.deg, lon=49.40884789085962*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "136d15m50.1341826s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 63.641229434661255\u00b0 and longitude -121.49414492898154\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=63.641229434661255*u.deg, lon=-121.49414492898154*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "71d46m47.13892333s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 75.69975084369364\u00b0 and longitude 164.81394250438916\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=75.69975084369364*u.deg, lon=164.81394250438916*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "88d08m51.88606003s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -1.6819297107937672\u00b0 and longitude 165.49565823202994\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-1.6819297107937672*u.deg, lon=165.49565823202994*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "15d52m44.20395365s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 77.84079667086743\u00b0 and longitude 8.917743095988612\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=77.84079667086743*u.deg, lon=8.917743095988612*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "96d07m43.77637263s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -83.6482817074436\u00b0 and longitude -161.04157186974223\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-83.6482817074436*u.deg, lon=-161.04157186974223*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "89d52m51.25678577s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 21.29499457964394\u00b0 and longitude 111.73051365874335\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=21.29499457964394*u.deg, lon=111.73051365874335*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "67d10m08.65344695s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 16.166893450584823\u00b0 and longitude 17.229523459663454\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=16.166893450584823*u.deg, lon=17.229523459663454*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "20d20m52.95148385s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -16.639688188987947\u00b0 and longitude 27.43816571572313\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-16.639688188987947*u.deg, lon=27.43816571572313*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "118d25m00.15896208s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -16.603287201648527\u00b0 and longitude -174.3423448192364\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-16.603287201648527*u.deg, lon=-174.3423448192364*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "23d17m19.18408435s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -15.839460370053573\u00b0 and longitude 11.717199566277259\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-15.839460370053573*u.deg, lon=11.717199566277259*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "24d43m02.09422195s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -76.66998246509038\u00b0 and longitude -5.853076627507193\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-76.66998246509038*u.deg, lon=-5.853076627507193*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "94d13m36.08282098s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 76.0257991856769\u00b0 and longitude 122.71431850251156\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=76.0257991856769*u.deg, lon=122.71431850251156*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "76d39m12.33454046s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -46.26393921045303\u00b0 and longitude 70.62835904650603\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-46.26393921045303*u.deg, lon=70.62835904650603*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "107d13m39.934579s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -9.0274855961205\u00b0 and longitude -126.81561816811148\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-9.0274855961205*u.deg, lon=-126.81561816811148*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "38d57m51.10596719s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -43.69876280566997\u00b0 and longitude 125.17043971577465\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-43.69876280566997*u.deg, lon=125.17043971577465*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "119d14m44.77574455s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 7.162787832472361\u00b0 and longitude -113.01884356806173\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=7.162787832472361*u.deg, lon=-113.01884356806173*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "67d08m02.63416051s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 41.98520118543345\u00b0 and longitude -178.21347082352773\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=41.98520118543345*u.deg, lon=-178.21347082352773*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "36d33m17.23620944s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 28.851558721550347\u00b0 and longitude 14.526274492280493\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=28.851558721550347*u.deg, lon=14.526274492280493*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "27d12m55.41673177s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -34.53331370570648\u00b0 and longitude -67.45458446771316\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-34.53331370570648*u.deg, lon=-67.45458446771316*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "112d16m24.21946057s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -51.719777708394034\u00b0 and longitude 104.70331306529135\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-51.719777708394034*u.deg, lon=104.70331306529135*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "85d19m36.37709496s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -11.935588501637952\u00b0 and longitude -42.190000770990736\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-11.935588501637952*u.deg, lon=-42.190000770990736*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "51d12m45.81692761s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 70.5506764286161\u00b0 and longitude 45.47633865901523\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=70.5506764286161*u.deg, lon=45.47633865901523*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "98d26m39.37202104s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 2.621611934749737\u00b0 and longitude -44.701098661253496\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=2.621611934749737*u.deg, lon=-44.701098661253496*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "44d07m18.04031607s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -5.75228982058114\u00b0 and longitude -38.664862468793245\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-5.75228982058114*u.deg, lon=-38.664862468793245*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "39d43m25.28044895s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 64.54179944132798\u00b0 and longitude 113.69816408419581\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=64.54179944132798*u.deg, lon=113.69816408419581*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "74d47m02.48144464s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -43.688771856047815\u00b0 and longitude -160.93665548819052\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-43.688771856047815*u.deg, lon=-160.93665548819052*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "52d37m23.99444601s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -4.1695021278932956\u00b0 and longitude -156.51787239549225\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-4.1695021278932956*u.deg, lon=-156.51787239549225*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "25d55m13.86447123s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -61.14431510872035\u00b0 and longitude 148.3726989132561\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-61.14431510872035*u.deg, lon=148.3726989132561*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "71d15m02.9420614s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -50.67424065540363\u00b0 and longitude -100.38363350778259\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-50.67424065540363*u.deg, lon=-100.38363350778259*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "56d53m44.94425656s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -37.99486102281663\u00b0 and longitude -130.8906474206657\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-37.99486102281663*u.deg, lon=-130.8906474206657*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "124d38m44.05026557s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 38.425361506089985\u00b0 and longitude -173.86675871712671\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=38.425361506089985*u.deg, lon=-173.86675871712671*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "81d16m40.85336726s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -65.70429398995864\u00b0 and longitude -18.32578735495082\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-65.70429398995864*u.deg, lon=-18.32578735495082*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "72d33m52.41935259s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 16.930122142129434\u00b0 and longitude -116.58908990321285\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=16.930122142129434*u.deg, lon=-116.58908990321285*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "27d51m56.75719768s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -21.66817233211117\u00b0 and longitude -173.55443862843202\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-21.66817233211117*u.deg, lon=-173.55443862843202*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "28d01m36.13876418s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -82.12288772166707\u00b0 and longitude -123.70164893703054\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-82.12288772166707*u.deg, lon=-123.70164893703054*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "99d56m33.76485168s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 57.064586231292054\u00b0 and longitude -73.12181611228165\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=57.064586231292054*u.deg, lon=-73.12181611228165*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "75d48m26.78125235s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -37.3468609010312\u00b0 and longitude -23.97361888927699\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-37.3468609010312*u.deg, lon=-23.97361888927699*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "141d40m19.9472216s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 89.92102614826601\u00b0 and longitude 51.53344211738914\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=89.92102614826601*u.deg, lon=51.53344211738914*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "84d28m38.07549554s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 70.97822846388308\u00b0 and longitude -170.33351915574468\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=70.97822846388308*u.deg, lon=-170.33351915574468*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "65d48m48.47894344s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 77.5542508412249\u00b0 and longitude 110.80377195203022\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=77.5542508412249*u.deg, lon=110.80377195203022*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "79d45m37.13305779s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -36.08364616575598\u00b0 and longitude -134.51052286514073\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-36.08364616575598*u.deg, lon=-134.51052286514073*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "58d32m25.90502955s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 44.83663517487335\u00b0 and longitude 129.25834530499583\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=44.83663517487335*u.deg, lon=129.25834530499583*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "58d26m27.75733392s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -53.811429822531\u00b0 and longitude -155.8605770456107\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-53.811429822531*u.deg, lon=-155.8605770456107*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "62d50m19.44328618s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 26.45512461536532\u00b0 and longitude -96.72549944896868\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=26.45512461536532*u.deg, lon=-96.72549944896868*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "81d50m46.89015931s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 52.34487995901793\u00b0 and longitude 60.44197382014269\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=52.34487995901793*u.deg, lon=60.44197382014269*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "102d37m53.23867326s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -14.609424149086777\u00b0 and longitude 2.9982266785494005\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-14.609424149086777*u.deg, lon=2.9982266785494005*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "170d36m07.15354103s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -37.587287396447316\u00b0 and longitude -78.80842539074848\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-37.587287396447316*u.deg, lon=-78.80842539074848*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "44d32m54.25086099s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 27.623968334282182\u00b0 and longitude -167.87458374835634\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=27.623968334282182*u.deg, lon=-167.87458374835634*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "25d13m20.15843867s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 58.707716721694254\u00b0 and longitude 78.25847101978553\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=58.707716721694254*u.deg, lon=78.25847101978553*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "115d05m13.28336992s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -72.37389227677745\u00b0 and longitude 113.50052823058815\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-72.37389227677745*u.deg, lon=113.50052823058815*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "88d33m42.64928872s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -78.58853624765663\u00b0 and longitude -123.53690401537348\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-78.58853624765663*u.deg, lon=-123.53690401537348*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "89d36m02.66173093s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -65.70622415693204\u00b0 and longitude 35.238029750990535\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-65.70622415693204*u.deg, lon=35.238029750990535*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "109d10m20.89450322s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 44.16457991398187\u00b0 and longitude 96.19915338947044\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=44.16457991398187*u.deg, lon=96.19915338947044*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "81d18m16.24891688s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -3.9246770003716307\u00b0 and longitude -35.22055865504569\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-3.9246770003716307*u.deg, lon=-35.22055865504569*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "145d27m57.51514272s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -85.94538463400822\u00b0 and longitude -75.39778359777044\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-85.94538463400822*u.deg, lon=-75.39778359777044*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "96d54m53.2857463s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 35.81728188471894\u00b0 and longitude -71.9620732323582\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=35.81728188471894*u.deg, lon=-71.9620732323582*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "71d37m28.95058353s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 31.75881002159298\u00b0 and longitude 178.8659172497246\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=31.75881002159298*u.deg, lon=178.8659172497246*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "25d53m48.73800204s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 16.079218134510782\u00b0 and longitude -4.490554943838646\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=16.079218134510782*u.deg, lon=-4.490554943838646*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "84d42m52.52714408s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -4.322107661238675\u00b0 and longitude -161.20392965741348\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-4.322107661238675*u.deg, lon=-161.20392965741348*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "21d42m58.35367274s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 54.78899115041568\u00b0 and longitude 100.24243403589924\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=54.78899115041568*u.deg, lon=100.24243403589924*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "79d00m46.27778191s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -24.500131656691096\u00b0 and longitude 155.24754311177117\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-24.500131656691096*u.deg, lon=155.24754311177117*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "114d16m56.04850536s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 17.977833128913645\u00b0 and longitude 104.51694384767978\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=17.977833128913645*u.deg, lon=104.51694384767978*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "73d57m13.71510348s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 16.9066826069796\u00b0 and longitude -38.96934299709591\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=16.9066826069796*u.deg, lon=-38.96934299709591*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "135d57m39.15511854s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -41.14805561843776\u00b0 and longitude -123.12381813741031\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-41.14805561843776*u.deg, lon=-123.12381813741031*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "117d56m08.87242148s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -40.297142766531884\u00b0 and longitude -37.787946454207685\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-40.297142766531884*u.deg, lon=-37.787946454207685*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "132d03m40.16135368s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 86.1436392360136\u00b0 and longitude 20.616875585430478\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=86.1436392360136*u.deg, lon=20.616875585430478*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "80d43m37.10898419s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 0.06111866179550418\u00b0 and longitude -36.739744247265605\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=0.06111866179550418*u.deg, lon=-36.739744247265605*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "143d21m37.18284988s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -36.28621362148071\u00b0 and longitude 172.42388116728307\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-36.28621362148071*u.deg, lon=172.42388116728307*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "42d17m23.48627061s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 6.951670765038173\u00b0 and longitude 11.82185854271529\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=6.951670765038173*u.deg, lon=11.82185854271529*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "162d13m29.29504452s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -2.958930170787383\u00b0 and longitude 134.28075463568206\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-2.958930170787383*u.deg, lon=134.28075463568206*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "45d59m54.19684257s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 47.272586429088676\u00b0 and longitude 67.38485685222784\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=47.272586429088676*u.deg, lon=67.38485685222784*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "100d32m18.97090782s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -43.029233609914726\u00b0 and longitude -135.50101165927447\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-43.029233609914726*u.deg, lon=-135.50101165927447*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "63d20m24.45410064s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -23.76561522040454\u00b0 and longitude 71.92813094471705\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-23.76561522040454*u.deg, lon=71.92813094471705*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "108d11m19.38107707s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -21.564089490279116\u00b0 and longitude -46.03596641729513\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-21.564089490279116*u.deg, lon=-46.03596641729513*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "51d24m08.5151814s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 80.87719773476539\u00b0 and longitude -58.787603230956975\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=80.87719773476539*u.deg, lon=-58.787603230956975*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "88d58m11.25936133s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 79.08033024464339\u00b0 and longitude 151.00931423175643\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=79.08033024464339*u.deg, lon=151.00931423175643*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "74d56m21.23421054s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -89.90087720302246\u00b0 and longitude -74.19855376097084\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-89.90087720302246*u.deg, lon=-74.19855376097084*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "95d39m21.60875665s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -73.0841506900862\u00b0 and longitude -158.9482683923133\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-73.0841506900862*u.deg, lon=-158.9482683923133*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "89d13m21.94134301s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 17.27499720744285\u00b0 and longitude -74.63058842009471\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=17.27499720744285*u.deg, lon=-74.63058842009471*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "19d29m41.81996444s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -46.72301509814935\u00b0 and longitude 92.43955199733625\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-46.72301509814935*u.deg, lon=92.43955199733625*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "138d47m00.73663017s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -29.21408196001098\u00b0 and longitude 144.15642567540147\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-29.21408196001098*u.deg, lon=144.15642567540147*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "48d49m12.43527274s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 88.11315720797916\u00b0 and longitude -160.3832437801927\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=88.11315720797916*u.deg, lon=-160.3832437801927*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "82d44m18.96960433s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 39.84981169526847\u00b0 and longitude 151.76454365459193\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=39.84981169526847*u.deg, lon=151.76454365459193*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "42d08m04.4979179s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -51.42345912554761\u00b0 and longitude 72.04502275782326\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-51.42345912554761*u.deg, lon=72.04502275782326*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "131d56m44.66886103s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 69.66941392601345\u00b0 and longitude -67.32919392465828\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=69.66941392601345*u.deg, lon=-67.32919392465828*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "76d45m08.43199841s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 85.38609105945594\u00b0 and longitude -30.6629141471077\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=85.38609105945594*u.deg, lon=-30.6629141471077*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "88d30m19.46368564s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 13.027670389291586\u00b0 and longitude 109.93629449787619\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=13.027670389291586*u.deg, lon=109.93629449787619*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "108d29m33.54899357s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 15.04570308905842\u00b0 and longitude -88.03718341739656\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=15.04570308905842*u.deg, lon=-88.03718341739656*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "86d06m11.67084963s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 56.30119603909344\u00b0 and longitude -4.730354095464207\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=56.30119603909344*u.deg, lon=-4.730354095464207*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "118d06m50.74239989s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 54.93256169141526\u00b0 and longitude 50.676570846258045\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=54.93256169141526*u.deg, lon=50.676570846258045*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "106d13m38.38344742s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -53.97156224351444\u00b0 and longitude -138.1118265667577\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-53.97156224351444*u.deg, lon=-138.1118265667577*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "69d33m20.34892326s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -10.522216604261217\u00b0 and longitude -7.7311143804295455\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-10.522216604261217*u.deg, lon=-7.7311143804295455*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "84d01m57.66593234s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 48.87438498318508\u00b0 and longitude -43.87957997924772\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=48.87438498318508*u.deg, lon=-43.87957997924772*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "113d29m42.56814391s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 17.847769915449405\u00b0 and longitude 126.58504974369532\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=17.847769915449405*u.deg, lon=126.58504974369532*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "52d57m00.04410693s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -43.47450452382115\u00b0 and longitude 58.478968317037925\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-43.47450452382115*u.deg, lon=58.478968317037925*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "115d55m07.11990813s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 56.42625061532817\u00b0 and longitude 50.99159960914798\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=56.42625061532817*u.deg, lon=50.99159960914798*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "104d54m19.36819575s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -67.17407675634513\u00b0 and longitude -112.12921700549118\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-67.17407675634513*u.deg, lon=-112.12921700549118*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "87d15m28.74016123s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 74.80852714770927\u00b0 and longitude -6.860854453269184\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=74.80852714770927*u.deg, lon=-6.860854453269184*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "82d58m00.09136411s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -0.2717994978960405\u00b0 and longitude -73.9463683846289\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-0.2717994978960405*u.deg, lon=-73.9463683846289*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "106d36m11.99558938s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 28.08928114704939\u00b0 and longitude 111.2209888058548\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=28.08928114704939*u.deg, lon=111.2209888058548*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "106d12m39.38376305s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude -22.989443581819586\u00b0 and longitude 145.3298551216359\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-22.989443581819586*u.deg, lon=145.3298551216359*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "43d48m35.69953106s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -52.25403055915753\u00b0 and longitude -171.26992801553348\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-52.25403055915753*u.deg, lon=-171.26992801553348*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "132d48m07.67066724s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 21.896998607169422\u00b0 and longitude 31.278973430590298\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=21.896998607169422*u.deg, lon=31.278973430590298*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "138d16m32.93853989s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 76.44051587453492\u00b0 and longitude -175.2169454274568\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=76.44051587453492*u.deg, lon=-175.2169454274568*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "71d00m41.66810706s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -55.589612544692976\u00b0 and longitude -21.850310701739147\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-55.589612544692976*u.deg, lon=-21.850310701739147*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "82d53m50.36468923s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -57.86075296915444\u00b0 and longitude -46.603894854827274\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-57.86075296915444*u.deg, lon=-46.603894854827274*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "73d31m35.75958774s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 31.56836723104817\u00b0 and longitude 53.50012320406893\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=31.56836723104817*u.deg, lon=53.50012320406893*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "56d40m22.19374814s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -3.1118143555075477\u00b0 and longitude -129.14099969524068\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-3.1118143555075477*u.deg, lon=-129.14099969524068*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "39d29m04.08321842s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 14.987901918852657\u00b0 and longitude -55.66256455393355\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=14.987901918852657*u.deg, lon=-55.66256455393355*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "121d30m59.51205881s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude 37.953635273313964\u00b0 and longitude -115.95457037230443\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=37.953635273313964*u.deg, lon=-115.95457037230443*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "39d44m32.47612254s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude -25.879996855529114\u00b0 and longitude 81.06823793387946\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-25.879996855529114*u.deg, lon=81.06823793387946*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "85d00m12.73624208s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 62.4159431241479\u00b0 and longitude 101.82336731477722\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=62.4159431241479*u.deg, lon=101.82336731477722*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "79d23m57.28202997s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 31.089314143387483\u00b0 and longitude 124.60398631752093\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=31.089314143387483*u.deg, lon=124.60398631752093*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "57d15m40.37500285s"
    },
    {
        "question": "When it's 2023-09-08T23:59:59 UTC, what would be the solar zenith angle at latitude 27.010149569469803\u00b0 and longitude -139.84598109598934\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=27.010149569469803*u.deg, lon=-139.84598109598934*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "44d20m07.61091655s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -56.02006362549117\u00b0 and longitude -91.89575753162732\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-56.02006362549117*u.deg, lon=-91.89575753162732*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "94d05m53.26219922s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 70.74072604221811\u00b0 and longitude 17.970945384230447\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=70.74072604221811*u.deg, lon=17.970945384230447*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "66d07m55.73773309s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 84.36793285411048\u00b0 and longitude 81.56894139212477\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=84.36793285411048*u.deg, lon=81.56894139212477*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "84d56m06.24343215s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude 88.06962774695617\u00b0 and longitude 51.93773955639648\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=88.06962774695617*u.deg, lon=51.93773955639648*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "85d18m40.61806856s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 5.997192403649635\u00b0 and longitude -149.3812122792767\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=5.997192403649635*u.deg, lon=-149.3812122792767*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "146d45m28.15142032s"
    },
    {
        "question": "When it's 2023-09-08T18:00:00 UTC, what would be the solar zenith angle at latitude -5.8538495357486084\u00b0 and longitude -176.2177988469924\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-5.8538495357486084*u.deg, lon=-176.2177988469924*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "86d15m08.6460386s"
    },
    {
        "question": "When it's 2023-09-08T12:00:00 UTC, what would be the solar zenith angle at latitude 79.21563640258455\u00b0 and longitude -34.71763096623923\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=79.21563640258455*u.deg, lon=-34.71763096623923*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "75d26m46.94827021s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -46.281567294586566\u00b0 and longitude -123.56902726018504\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-46.281567294586566*u.deg, lon=-123.56902726018504*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "72d28m54.32525152s"
    },
    {
        "question": "When it's 2023-09-08T00:00:00 UTC, what would be the solar zenith angle at latitude -36.482894656023156\u00b0 and longitude -4.099500486604512\u00b0?",
        "code": "from astropy.coordinates import get_sun, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nlocation = EarthLocation(lat=-36.482894656023156*u.deg, lon=-4.099500486604512*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = get_sun(time).transform_to(AltAz(obstime=time, location=location))\nzenith_angle = 90 * u.deg - altaz.alt\nresult = zenith_angle",
        "answer": "149d12m44.59685896s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 78.8746577149964\u00b0, Dec = 34.51077235498437\u00b0 and RA = 354.3815393815438\u00b0, Dec = -6.934835974951582\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=78.8746577149964*u.degree, dec=34.51077235498437*u.degree, frame='icrs')\nstarB = SkyCoord(ra=354.3815393815438*u.degree, dec=-6.934835974951582*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "89d25m18.35064783s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 357.1751258453095\u00b0, Dec = -39.777128024840486\u00b0 and RA = 187.81096942225025\u00b0, Dec = -87.9956877443148\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=357.1751258453095*u.degree, dec=-39.777128024840486*u.degree, frame='icrs')\nstarB = SkyCoord(ra=187.81096942225025*u.degree, dec=-87.9956877443148*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "52d11m37.33391775s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 254.36831795869816\u00b0, Dec = -55.72048930493507\u00b0 and RA = 274.1375601813198\u00b0, Dec = -23.756835800586757\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=254.36831795869816*u.degree, dec=-55.72048930493507*u.degree, frame='icrs')\nstarB = SkyCoord(ra=274.1375601813198*u.degree, dec=-23.756835800586757*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "35d06m53.14502812s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 213.52956505393618\u00b0, Dec = -88.0766496679173\u00b0 and RA = 182.97100387057287\u00b0, Dec = 76.74295448435572\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=213.52956505393618*u.degree, dec=-88.0766496679173*u.degree, frame='icrs')\nstarB = SkyCoord(ra=182.97100387057287*u.degree, dec=76.74295448435572*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "165d03m19.03398188s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 235.7440898326161\u00b0, Dec = -78.27369524755233\u00b0 and RA = 119.08200089134627\u00b0, Dec = -40.1908028631258\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=235.7440898326161*u.degree, dec=-78.27369524755233*u.degree, frame='icrs')\nstarB = SkyCoord(ra=119.08200089134627*u.degree, dec=-40.1908028631258*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "55d47m30.77778994s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 304.70610135411675\u00b0, Dec = 64.4904039193076\u00b0 and RA = 273.8729112909453\u00b0, Dec = 23.46458091288838\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=304.70610135411675*u.degree, dec=64.4904039193076*u.degree, frame='icrs')\nstarB = SkyCoord(ra=273.8729112909453*u.degree, dec=23.46458091288838*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "45d41m12.86942758s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 26.77607195581742\u00b0, Dec = -43.917826360269274\u00b0 and RA = 137.7503862268853\u00b0, Dec = 89.3531130123259\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=26.77607195581742*u.degree, dec=-43.917826360269274*u.degree, frame='icrs')\nstarB = SkyCoord(ra=137.7503862268853*u.degree, dec=89.3531130123259*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "134d08m46.66971837s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 100.1650458009137\u00b0, Dec = 1.4466092286448884\u00b0 and RA = 16.38632884025506\u00b0, Dec = 14.63829864447213\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=100.1650458009137*u.degree, dec=1.4466092286448884*u.degree, frame='icrs')\nstarB = SkyCoord(ra=16.38632884025506*u.degree, dec=14.63829864447213*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "83d36m56.32792242s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 59.22408880633559\u00b0, Dec = 82.93712469479243\u00b0 and RA = 249.9021047459084\u00b0, Dec = 3.480046663446956\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=59.22408880633559*u.degree, dec=82.93712469479243*u.degree, frame='icrs')\nstarB = SkyCoord(ra=249.9021047459084*u.degree, dec=3.480046663446956*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "93d27m38.99402284s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 295.3142508911207\u00b0, Dec = -71.07147402467626\u00b0 and RA = 169.67845818017284\u00b0, Dec = 5.731989879568175\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=295.3142508911207*u.degree, dec=-71.07147402467626*u.degree, frame='icrs')\nstarB = SkyCoord(ra=169.67845818017284*u.degree, dec=5.731989879568175*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "106d24m40.13610146s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 277.0595955675446\u00b0, Dec = 64.17263892361589\u00b0 and RA = 332.92478654856603\u00b0, Dec = -3.521872990130646\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=277.0595955675446*u.degree, dec=64.17263892361589*u.degree, frame='icrs')\nstarB = SkyCoord(ra=332.92478654856603*u.degree, dec=-3.521872990130646*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "79d07m20.42803963s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 218.90178085478988\u00b0, Dec = 11.954731994261579\u00b0 and RA = 144.67302282105854\u00b0, Dec = -16.54498823896789\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=218.90178085478988*u.degree, dec=11.954731994261579*u.degree, frame='icrs')\nstarB = SkyCoord(ra=144.67302282105854*u.degree, dec=-16.54498823896789*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "78d42m08.32661318s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 253.6325482025002\u00b0, Dec = -32.123085429607464\u00b0 and RA = 219.71122942545452\u00b0, Dec = -13.743473330083575\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=253.6325482025002*u.degree, dec=-32.123085429607464*u.degree, frame='icrs')\nstarB = SkyCoord(ra=219.71122942545452*u.degree, dec=-13.743473330083575*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "36d00m14.596274s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 128.453049720652\u00b0, Dec = -24.47773849872135\u00b0 and RA = 221.79894950409334\u00b0, Dec = -55.01875103199346\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=128.453049720652*u.degree, dec=-24.47773849872135*u.degree, frame='icrs')\nstarB = SkyCoord(ra=221.79894950409334*u.degree, dec=-55.01875103199346*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "71d59m56.7800186s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 307.06703935469284\u00b0, Dec = 80.3321181159258\u00b0 and RA = 97.69545037510134\u00b0, Dec = 34.923723575894925\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=307.06703935469284*u.degree, dec=80.3321181159258*u.degree, frame='icrs')\nstarB = SkyCoord(ra=97.69545037510134*u.degree, dec=34.923723575894925*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "63d37m03.24362061s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 353.5278038316954\u00b0, Dec = 74.68677149371928\u00b0 and RA = 129.44136964782135\u00b0, Dec = -80.92789162407527\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=353.5278038316954*u.degree, dec=74.68677149371928*u.degree, frame='icrs')\nstarB = SkyCoord(ra=129.44136964782135*u.degree, dec=-80.92789162407527*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "169d13m00.63950828s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 163.24880967745074\u00b0, Dec = 45.05589616719155\u00b0 and RA = 29.8101744118148\u00b0, Dec = 38.67446616051927\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=163.24880967745074*u.degree, dec=45.05589616719155*u.degree, frame='icrs')\nstarB = SkyCoord(ra=29.8101744118148*u.degree, dec=38.67446616051927*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "86d22m56.99790549s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 230.0332250382191\u00b0, Dec = -73.72147989985726\u00b0 and RA = 176.45672272742624\u00b0, Dec = -53.0888810074952\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=230.0332250382191*u.degree, dec=-73.72147989985726*u.degree, frame='icrs')\nstarB = SkyCoord(ra=176.45672272742624*u.degree, dec=-53.0888810074952*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "29d50m03.10088957s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 105.15690625198883\u00b0, Dec = 51.46920336257406\u00b0 and RA = 269.35954820522215\u00b0, Dec = 31.88742847774499\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=105.15690625198883*u.degree, dec=51.46920336257406*u.degree, frame='icrs')\nstarB = SkyCoord(ra=269.35954820522215*u.degree, dec=31.88742847774499*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "95d29m32.2326962s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 282.72115886463945\u00b0, Dec = 13.800830313604393\u00b0 and RA = 89.78150943590902\u00b0, Dec = -82.41377843490488\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=282.72115886463945*u.degree, dec=13.800830313604393*u.degree, frame='icrs')\nstarB = SkyCoord(ra=89.78150943590902*u.degree, dec=-82.41377843490488*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "111d11m12.69615491s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 26.103627955394106\u00b0, Dec = 36.880257096610364\u00b0 and RA = 186.598982748413\u00b0, Dec = 1.7673461627987308\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=26.103627955394106*u.degree, dec=36.880257096610364*u.degree, frame='icrs')\nstarB = SkyCoord(ra=186.598982748413*u.degree, dec=1.7673461627987308*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "137d19m02.93045833s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 46.37655849692653\u00b0, Dec = -60.17153348434387\u00b0 and RA = 90.58320109924313\u00b0, Dec = 23.603229723947663\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=46.37655849692653*u.degree, dec=-60.17153348434387*u.degree, frame='icrs')\nstarB = SkyCoord(ra=90.58320109924313*u.degree, dec=23.603229723947663*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "91d10m55.45156209s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 350.0830875397727\u00b0, Dec = 54.10206996961267\u00b0 and RA = 256.3869997876396\u00b0, Dec = -37.02488967020811\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=350.0830875397727*u.degree, dec=54.10206996961267*u.degree, frame='icrs')\nstarB = SkyCoord(ra=256.3869997876396*u.degree, dec=-37.02488967020811*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "121d11m45.28953694s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 26.870151103934855\u00b0, Dec = -80.18872284724445\u00b0 and RA = 308.26246571429266\u00b0, Dec = -80.49546697517401\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=26.870151103934855*u.degree, dec=-80.18872284724445*u.degree, frame='icrs')\nstarB = SkyCoord(ra=308.26246571429266*u.degree, dec=-80.49546697517401*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "12d12m09.97907395s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 76.84187203876844\u00b0, Dec = -10.180468208814105\u00b0 and RA = 311.4369571502789\u00b0, Dec = -47.3074905644091\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=76.84187203876844*u.degree, dec=-10.180468208814105*u.degree, frame='icrs')\nstarB = SkyCoord(ra=311.4369571502789*u.degree, dec=-47.3074905644091*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "104d52m36.33035041s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 179.34257408167025\u00b0, Dec = -36.08649949043523\u00b0 and RA = 271.5909454786976\u00b0, Dec = -40.40726400700161\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=179.34257408167025*u.degree, dec=-36.08649949043523*u.degree, frame='icrs')\nstarB = SkyCoord(ra=271.5909454786976*u.degree, dec=-40.40726400700161*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "69d02m35.92353216s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 309.5630307203848\u00b0, Dec = -84.74330482720933\u00b0 and RA = 43.45630808509515\u00b0, Dec = -28.86727944651833\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=309.5630307203848*u.degree, dec=-84.74330482720933*u.degree, frame='icrs')\nstarB = SkyCoord(ra=43.45630808509515*u.degree, dec=-28.86727944651833*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "61d37m15.04094198s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 234.71273691650316\u00b0, Dec = -3.4129988528842006\u00b0 and RA = 186.1976548414449\u00b0, Dec = 59.64100925035646\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=234.71273691650316*u.degree, dec=-3.4129988528842006*u.degree, frame='icrs')\nstarB = SkyCoord(ra=186.1976548414449*u.degree, dec=59.64100925035646*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "73d34m13.64699563s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 166.11079202737395\u00b0, Dec = -29.658942347849703\u00b0 and RA = 273.92638187182877\u00b0, Dec = 25.6776623952304\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=166.11079202737395*u.degree, dec=-29.658942347849703*u.degree, frame='icrs')\nstarB = SkyCoord(ra=273.92638187182877*u.degree, dec=25.6776623952304*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "117d00m09.31483372s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 243.73860999861472\u00b0, Dec = -54.216213181185026\u00b0 and RA = 304.75547038971723\u00b0, Dec = 12.976875514315907\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=243.73860999861472*u.degree, dec=-54.216213181185026*u.degree, frame='icrs')\nstarB = SkyCoord(ra=304.75547038971723*u.degree, dec=12.976875514315907*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "84d36m37.48104992s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 74.76755111667262\u00b0, Dec = -46.80857773568928\u00b0 and RA = 337.424090389223\u00b0, Dec = 4.789969309068212\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=74.76755111667262*u.degree, dec=-46.80857773568928*u.degree, frame='icrs')\nstarB = SkyCoord(ra=337.424090389223*u.degree, dec=4.789969309068212*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "98d30m51.66831555s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 38.13287091614577\u00b0, Dec = -0.12543495113179404\u00b0 and RA = 150.26145830982276\u00b0, Dec = 75.52505780255333\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=38.13287091614577*u.degree, dec=-0.12543495113179404*u.degree, frame='icrs')\nstarB = SkyCoord(ra=150.26145830982276*u.degree, dec=75.52505780255333*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "95d31m28.90814725s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 335.28057572503246\u00b0, Dec = 33.03424646017615\u00b0 and RA = 56.0457846547111\u00b0, Dec = 45.75813140316373\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=335.28057572503246*u.degree, dec=33.03424646017615*u.degree, frame='icrs')\nstarB = SkyCoord(ra=56.0457846547111*u.degree, dec=45.75813140316373*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "61d01m35.48638357s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 331.0626140403792\u00b0, Dec = -68.57695842027816\u00b0 and RA = 286.40492322098765\u00b0, Dec = -66.90527656745957\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=331.0626140403792*u.degree, dec=-68.57695842027816*u.degree, frame='icrs')\nstarB = SkyCoord(ra=286.40492322098765*u.degree, dec=-66.90527656745957*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "16d37m17.73398258s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 257.48535354077563\u00b0, Dec = 23.64298494433791\u00b0 and RA = 194.92136648996464\u00b0, Dec = -2.3561790457744536\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=257.48535354077563*u.degree, dec=23.64298494433791*u.degree, frame='icrs')\nstarB = SkyCoord(ra=194.92136648996464*u.degree, dec=-2.3561790457744536*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "66d05m38.10116495s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 41.24646467359611\u00b0, Dec = 35.81295693767518\u00b0 and RA = 203.3255969935604\u00b0, Dec = -42.29814153659959\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=41.24646467359611*u.degree, dec=35.81295693767518*u.degree, frame='icrs')\nstarB = SkyCoord(ra=203.3255969935604*u.degree, dec=-42.29814153659959*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "164d41m15.02176788s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 193.4592899706293\u00b0, Dec = -17.269575415932067\u00b0 and RA = 309.1719634473762\u00b0, Dec = 34.602872968320796\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=193.4592899706293*u.degree, dec=-17.269575415932067*u.degree, frame='icrs')\nstarB = SkyCoord(ra=309.1719634473762*u.degree, dec=34.602872968320796*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "120d38m13.86700486s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 255.13731636375823\u00b0, Dec = 64.76490305678172\u00b0 and RA = 319.5813220482773\u00b0, Dec = 34.75388572697166\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=255.13731636375823*u.degree, dec=64.76490305678172*u.degree, frame='icrs')\nstarB = SkyCoord(ra=319.5813220482773*u.degree, dec=34.75388572697166*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "48d10m57.56754278s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 290.67651803752074\u00b0, Dec = 29.968036937834313\u00b0 and RA = 356.2121626717862\u00b0, Dec = 21.22022746590936\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=290.67651803752074*u.degree, dec=29.968036937834313*u.degree, frame='icrs')\nstarB = SkyCoord(ra=356.2121626717862*u.degree, dec=21.22022746590936*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "58d59m12.2184065s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 6.478618476834899\u00b0, Dec = -4.7822489284734075\u00b0 and RA = 262.08409767981243\u00b0, Dec = 35.24376902362884\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=6.478618476834899*u.degree, dec=-4.7822489284734075*u.degree, frame='icrs')\nstarB = SkyCoord(ra=262.08409767981243*u.degree, dec=35.24376902362884*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "104d30m11.14814946s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 48.35319453922367\u00b0, Dec = 13.618712487408573\u00b0 and RA = 250.03682689730658\u00b0, Dec = -36.974556341772846\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=48.35319453922367*u.degree, dec=13.618712487408573*u.degree, frame='icrs')\nstarB = SkyCoord(ra=250.03682689730658*u.degree, dec=-36.974556341772846*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "149d40m06.59877679s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 198.85116108219833\u00b0, Dec = -31.371724775396963\u00b0 and RA = 57.11388694363128\u00b0, Dec = -81.5123530030491\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=198.85116108219833*u.degree, dec=-31.371724775396963*u.degree, frame='icrs')\nstarB = SkyCoord(ra=57.11388694363128*u.degree, dec=-81.5123530030491*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "65d25m17.44703442s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 217.3480651308876\u00b0, Dec = -52.914785613781376\u00b0 and RA = 103.39699367343832\u00b0, Dec = 23.18230597039559\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=217.3480651308876*u.degree, dec=-52.914785613781376*u.degree, frame='icrs')\nstarB = SkyCoord(ra=103.39699367343832*u.degree, dec=23.18230597039559*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "122d37m11.76295736s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 2.638024306590756\u00b0, Dec = 36.06982296695759\u00b0 and RA = 1.0973596497180793\u00b0, Dec = 45.53933185972667\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=2.638024306590756*u.degree, dec=36.06982296695759*u.degree, frame='icrs')\nstarB = SkyCoord(ra=1.0973596497180793*u.degree, dec=45.53933185972667*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "9d32m25.87535986s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 353.7561714316474\u00b0, Dec = -77.83298351158635\u00b0 and RA = 343.6537483337392\u00b0, Dec = 24.4604508717064\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=353.7561714316474*u.degree, dec=-77.83298351158635*u.degree, frame='icrs')\nstarB = SkyCoord(ra=343.6537483337392*u.degree, dec=24.4604508717064*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "102d28m04.48948471s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 162.1711578827479\u00b0, Dec = -77.26194008105901\u00b0 and RA = 340.83024550061504\u00b0, Dec = -32.62892573066393\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=162.1711578827479*u.degree, dec=-77.26194008105901*u.degree, frame='icrs')\nstarB = SkyCoord(ra=340.83024550061504*u.degree, dec=-32.62892573066393*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "70d06m21.72854751s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 320.03969535410147\u00b0, Dec = 29.345727825298326\u00b0 and RA = 36.80842187524267\u00b0, Dec = 49.598437732339846\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=320.03969535410147*u.degree, dec=29.345727825298326*u.degree, frame='icrs')\nstarB = SkyCoord(ra=36.80842187524267*u.degree, dec=49.598437732339846*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "59d50m00.15755807s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 342.28929181554884\u00b0, Dec = -49.714234693940426\u00b0 and RA = 225.1382807478799\u00b0, Dec = -61.600452342089504\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=342.28929181554884*u.degree, dec=-49.714234693940426*u.degree, frame='icrs')\nstarB = SkyCoord(ra=225.1382807478799*u.degree, dec=-61.600452342089504*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "57d56m53.71452365s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 91.29410219631629\u00b0, Dec = 65.97459174187821\u00b0 and RA = 305.09716837927743\u00b0, Dec = 3.2239419138059304\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=91.29410219631629*u.degree, dec=65.97459174187821*u.degree, frame='icrs')\nstarB = SkyCoord(ra=305.09716837927743*u.degree, dec=3.2239419138059304*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "106d38m36.28933683s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 166.9553644626737\u00b0, Dec = 87.93006318261132\u00b0 and RA = 229.7781728828043\u00b0, Dec = -85.53093017878038\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=166.9553644626737*u.degree, dec=87.93006318261132*u.degree, frame='icrs')\nstarB = SkyCoord(ra=229.7781728828043*u.degree, dec=-85.53093017878038*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "174d16m53.55987255s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 288.7064324772988\u00b0, Dec = -81.40509893000849\u00b0 and RA = 304.88539299178757\u00b0, Dec = 31.091282206695823\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=288.7064324772988*u.degree, dec=-81.40509893000849*u.degree, frame='icrs')\nstarB = SkyCoord(ra=304.88539299178757*u.degree, dec=31.091282206695823*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "112d48m39.81690931s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 64.17877791544048\u00b0, Dec = -37.915779645892016\u00b0 and RA = 117.33790966111695\u00b0, Dec = -36.86366924155372\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=64.17877791544048*u.degree, dec=-37.915779645892016*u.degree, frame='icrs')\nstarB = SkyCoord(ra=117.33790966111695*u.degree, dec=-36.86366924155372*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "41d39m36.07307913s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 125.63259456467667\u00b0, Dec = -60.398661340019444\u00b0 and RA = 4.8537877052938505\u00b0, Dec = -37.66142113168423\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=125.63259456467667*u.degree, dec=-60.398661340019444*u.degree, frame='icrs')\nstarB = SkyCoord(ra=4.8537877052938505*u.degree, dec=-37.66142113168423*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "70d39m42.07948732s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 184.90749247675168\u00b0, Dec = 28.47428072122983\u00b0 and RA = 317.543451286652\u00b0, Dec = 68.55650070204965\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=184.90749247675168*u.degree, dec=28.47428072122983*u.degree, frame='icrs')\nstarB = SkyCoord(ra=317.543451286652*u.degree, dec=68.55650070204965*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "76d55m58.21381067s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 285.3912797322562\u00b0, Dec = -75.44342062129287\u00b0 and RA = 120.55361817979028\u00b0, Dec = -72.23126116146142\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=285.3912797322562*u.degree, dec=-75.44342062129287*u.degree, frame='icrs')\nstarB = SkyCoord(ra=120.55361817979028*u.degree, dec=-72.23126116146142*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "32d02m17.0865742s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 267.31957232964436\u00b0, Dec = 38.29847964231311\u00b0 and RA = 192.6517886482893\u00b0, Dec = 19.863969450481036\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=267.31957232964436*u.degree, dec=38.29847964231311*u.degree, frame='icrs')\nstarB = SkyCoord(ra=192.6517886482893*u.degree, dec=19.863969450481036*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "66d03m42.42650279s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 35.53038920735294\u00b0, Dec = 61.7539828396952\u00b0 and RA = 224.46343425724396\u00b0, Dec = 34.58783644396249\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=35.53038920735294*u.degree, dec=61.7539828396952*u.degree, frame='icrs')\nstarB = SkyCoord(ra=224.46343425724396*u.degree, dec=34.58783644396249*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "83d23m08.41453776s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 10.240753926205484\u00b0, Dec = 34.15162472262698\u00b0 and RA = 173.26713027484985\u00b0, Dec = 37.29162634807362\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=10.240753926205484*u.degree, dec=34.15162472262698*u.degree, frame='icrs')\nstarB = SkyCoord(ra=173.26713027484985*u.degree, dec=37.29162634807362*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "106d49m54.81392801s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 188.69135812116804\u00b0, Dec = 56.91311020077063\u00b0 and RA = 39.535868095546135\u00b0, Dec = -52.06815426945445\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=188.69135812116804*u.degree, dec=56.91311020077063*u.degree, frame='icrs')\nstarB = SkyCoord(ra=39.535868095546135*u.degree, dec=-52.06815426945445*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "161d36m56.55569541s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 101.74932072022969\u00b0, Dec = -46.07241972098396\u00b0 and RA = 76.12689011719124\u00b0, Dec = 73.14155151297936\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=101.74932072022969*u.degree, dec=-46.07241972098396*u.degree, frame='icrs')\nstarB = SkyCoord(ra=76.12689011719124*u.degree, dec=73.14155151297936*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "120d31m16.3194801s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 149.76874200144627\u00b0, Dec = 7.961511476724709\u00b0 and RA = 177.45433560464198\u00b0, Dec = 31.653248126450123\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=149.76874200144627*u.degree, dec=7.961511476724709*u.degree, frame='icrs')\nstarB = SkyCoord(ra=177.45433560464198*u.degree, dec=31.653248126450123*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "34d59m42.06886976s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 182.373391984502\u00b0, Dec = 88.36142714000411\u00b0 and RA = 196.4747381794872\u00b0, Dec = 4.024623856981492\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=182.373391984502*u.degree, dec=88.36142714000411*u.degree, frame='icrs')\nstarB = SkyCoord(ra=196.4747381794872*u.degree, dec=4.024623856981492*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "84d23m10.64587288s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 103.85970040143695\u00b0, Dec = 31.841887038722703\u00b0 and RA = 353.8573727787515\u00b0, Dec = 75.90055393255582\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=103.85970040143695*u.degree, dec=31.841887038722703*u.degree, frame='icrs')\nstarB = SkyCoord(ra=353.8573727787515*u.degree, dec=75.90055393255582*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "63d50m20.12058213s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 252.9028237551059\u00b0, Dec = 18.056524577206034\u00b0 and RA = 309.89163979410387\u00b0, Dec = 6.845025348950358\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=252.9028237551059*u.degree, dec=18.056524577206034*u.degree, frame='icrs')\nstarB = SkyCoord(ra=309.89163979410387*u.degree, dec=6.845025348950358*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "56d32m56.90584756s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 126.68104119077836\u00b0, Dec = 56.685938193177236\u00b0 and RA = 17.814960155640712\u00b0, Dec = -4.435367559565421\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=126.68104119077836*u.degree, dec=56.685938193177236*u.degree, frame='icrs')\nstarB = SkyCoord(ra=17.814960155640712*u.degree, dec=-4.435367559565421*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "103d59m10.97833981s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 137.79049917724998\u00b0, Dec = -27.622499810991094\u00b0 and RA = 115.52353714270166\u00b0, Dec = -31.093318349355478\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=137.79049917724998*u.degree, dec=-27.622499810991094*u.degree, frame='icrs')\nstarB = SkyCoord(ra=115.52353714270166*u.degree, dec=-31.093318349355478*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "19d40m49.05188271s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 307.08642063876147\u00b0, Dec = -85.7753064176757\u00b0 and RA = 121.98178997539006\u00b0, Dec = -31.797944923333034\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=307.08642063876147*u.degree, dec=-85.7753064176757*u.degree, frame='icrs')\nstarB = SkyCoord(ra=121.98178997539006*u.degree, dec=-31.797944923333034*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "62d24m38.50735251s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 341.19555319992395\u00b0, Dec = -66.10305301114042\u00b0 and RA = 219.6040205997335\u00b0, Dec = 78.08708926903992\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=341.19555319992395*u.degree, dec=-66.10305301114042*u.degree, frame='icrs')\nstarB = SkyCoord(ra=219.6040205997335*u.degree, dec=78.08708926903992*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "159d46m58.55143423s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 73.16010000269966\u00b0, Dec = -49.32259922646229\u00b0 and RA = 59.599550859426074\u00b0, Dec = 1.3956180203802546\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=73.16010000269966*u.degree, dec=-49.32259922646229*u.degree, frame='icrs')\nstarB = SkyCoord(ra=59.599550859426074*u.degree, dec=1.3956180203802546*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "52d03m00.99523425s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 241.80212299723343\u00b0, Dec = 88.26931342217665\u00b0 and RA = 185.09833627980075\u00b0, Dec = -39.2299324447226\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=241.80212299723343*u.degree, dec=88.26931342217665*u.degree, frame='icrs')\nstarB = SkyCoord(ra=185.09833627980075*u.degree, dec=-39.2299324447226*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "128d15m54.83435956s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 297.70344253011444\u00b0, Dec = 68.30493659239878\u00b0 and RA = 172.18177490872472\u00b0, Dec = -2.019407550223292\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=297.70344253011444*u.degree, dec=68.30493659239878*u.degree, frame='icrs')\nstarB = SkyCoord(ra=172.18177490872472*u.degree, dec=-2.019407550223292*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "104d19m22.98755406s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 270.3011841950368\u00b0, Dec = -33.82873345303068\u00b0 and RA = 316.6123867621022\u00b0, Dec = 75.37097847798213\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=270.3011841950368*u.degree, dec=-33.82873345303068*u.degree, frame='icrs')\nstarB = SkyCoord(ra=316.6123867621022*u.degree, dec=75.37097847798213*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "113d11m15.86038093s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 123.07203304143687\u00b0, Dec = -87.93211674588754\u00b0 and RA = 146.07199579936756\u00b0, Dec = -3.0078386911551007\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=123.07203304143687*u.degree, dec=-87.93211674588754*u.degree, frame='icrs')\nstarB = SkyCoord(ra=146.07199579936756*u.degree, dec=-3.0078386911551007*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "85d05m20.49872242s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 179.17387995991996\u00b0, Dec = 38.35586442729485\u00b0 and RA = 279.87253913996454\u00b0, Dec = -14.523107167558322\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=179.17387995991996*u.degree, dec=38.35586442729485*u.degree, frame='icrs')\nstarB = SkyCoord(ra=279.87253913996454*u.degree, dec=-14.523107167558322*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "107d14m59.41651058s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 130.4476669916206\u00b0, Dec = -44.815375592125704\u00b0 and RA = 22.823348223232887\u00b0, Dec = -67.77605479673292\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=130.4476669916206*u.degree, dec=-44.815375592125704*u.degree, frame='icrs')\nstarB = SkyCoord(ra=22.823348223232887*u.degree, dec=-67.77605479673292*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "55d09m50.68223037s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 244.9133538413681\u00b0, Dec = 19.275913366338614\u00b0 and RA = 144.18944420146758\u00b0, Dec = 66.29079073066828\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=244.9133538413681*u.degree, dec=19.275913366338614*u.degree, frame='icrs')\nstarB = SkyCoord(ra=144.18944420146758*u.degree, dec=66.29079073066828*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "76d36m25.21681845s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 59.0709417937938\u00b0, Dec = -26.93630556394575\u00b0 and RA = 109.11501560951888\u00b0, Dec = 1.9790416908877404\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=59.0709417937938*u.degree, dec=-26.93630556394575*u.degree, frame='icrs')\nstarB = SkyCoord(ra=109.11501560951888*u.degree, dec=1.9790416908877404*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "56d10m59.04887684s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 62.12342999115187\u00b0, Dec = -15.536312935413449\u00b0 and RA = 356.4326847254885\u00b0, Dec = -56.87830546130243\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=62.12342999115187*u.degree, dec=-15.536312935413449*u.degree, frame='icrs')\nstarB = SkyCoord(ra=356.4326847254885*u.degree, dec=-56.87830546130243*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "63d49m45.37391887s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 299.44203004174\u00b0, Dec = 81.45868469312992\u00b0 and RA = 324.9158591226634\u00b0, Dec = 12.131557785754595\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=299.44203004174*u.degree, dec=81.45868469312992*u.degree, frame='icrs')\nstarB = SkyCoord(ra=324.9158591226634*u.degree, dec=12.131557785754595*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "70d11m21.11591924s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 114.27970446848772\u00b0, Dec = -6.367902575979954\u00b0 and RA = 272.85407098690314\u00b0, Dec = -84.35857708902226\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=114.27970446848772*u.degree, dec=-6.367902575979954*u.degree, frame='icrs')\nstarB = SkyCoord(ra=272.85407098690314*u.degree, dec=-84.35857708902226*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "88d53m11.89003655s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 288.378120373477\u00b0, Dec = 32.0225283988764\u00b0 and RA = 147.62202974980218\u00b0, Dec = 72.88537766149119\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=288.378120373477*u.degree, dec=32.0225283988764*u.degree, frame='icrs')\nstarB = SkyCoord(ra=147.62202974980218*u.degree, dec=72.88537766149119*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "71d43m38.35149438s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 302.2496437487001\u00b0, Dec = -25.961299934754408\u00b0 and RA = 326.24906235969974\u00b0, Dec = -36.43404717626317\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=302.2496437487001*u.degree, dec=-25.961299934754408*u.degree, frame='icrs')\nstarB = SkyCoord(ra=326.24906235969974*u.degree, dec=-36.43404717626317*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "22d57m20.2687213s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 293.59857509131484\u00b0, Dec = 38.817809497294064\u00b0 and RA = 88.10737599648422\u00b0, Dec = 24.879472150758474\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=293.59857509131484*u.degree, dec=38.817809497294064*u.degree, frame='icrs')\nstarB = SkyCoord(ra=88.10737599648422*u.degree, dec=24.879472150758474*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "111d58m52.76931553s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 180.14230741271737\u00b0, Dec = 55.362365698567714\u00b0 and RA = 103.20385149566866\u00b0, Dec = 21.334675361315973\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=180.14230741271737*u.degree, dec=55.362365698567714*u.degree, frame='icrs')\nstarB = SkyCoord(ra=103.20385149566866*u.degree, dec=21.334675361315973*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "65d13m46.27467701s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 230.65370455967744\u00b0, Dec = 83.43931512716964\u00b0 and RA = 182.5674341737228\u00b0, Dec = 39.61040514537558\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=230.65370455967744*u.degree, dec=83.43931512716964*u.degree, frame='icrs')\nstarB = SkyCoord(ra=182.5674341737228*u.degree, dec=39.61040514537558*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "46d11m47.04456311s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 262.19788835038577\u00b0, Dec = -85.29065714420085\u00b0 and RA = 314.58996765431937\u00b0, Dec = 36.235098077232294\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=262.19788835038577*u.degree, dec=-85.29065714420085*u.degree, frame='icrs')\nstarB = SkyCoord(ra=314.58996765431937*u.degree, dec=36.235098077232294*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "123d16m38.2991141s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 179.15246115957876\u00b0, Dec = -68.8630270310163\u00b0 and RA = 145.43251962657024\u00b0, Dec = -59.07273127074076\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=179.15246115957876*u.degree, dec=-68.8630270310163*u.degree, frame='icrs')\nstarB = SkyCoord(ra=145.43251962657024*u.degree, dec=-59.07273127074076*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "17d23m48.47078385s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 54.391285242055226\u00b0, Dec = 67.98097296211753\u00b0 and RA = 62.389849533200874\u00b0, Dec = -8.894578642387614\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=54.391285242055226*u.degree, dec=67.98097296211753*u.degree, frame='icrs')\nstarB = SkyCoord(ra=62.389849533200874*u.degree, dec=-8.894578642387614*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "77d05m14.86391645s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 156.6634173133362\u00b0, Dec = 64.61958527951651\u00b0 and RA = 310.5543628564666\u00b0, Dec = 47.888926120334474\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=156.6634173133362*u.degree, dec=64.61958527951651*u.degree, frame='icrs')\nstarB = SkyCoord(ra=310.5543628564666*u.degree, dec=47.888926120334474*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "65d39m36.12715756s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 329.45339576901875\u00b0, Dec = 67.6284452408234\u00b0 and RA = 213.29448417200027\u00b0, Dec = -46.006920314438396\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=329.45339576901875*u.degree, dec=67.6284452408234*u.degree, frame='icrs')\nstarB = SkyCoord(ra=213.29448417200027*u.degree, dec=-46.006920314438396*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "141d25m40.21196126s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 255.0538701126069\u00b0, Dec = -76.09006010008878\u00b0 and RA = 100.91616321672286\u00b0, Dec = 75.27564982717806\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=255.0538701126069*u.degree, dec=-76.09006010008878*u.degree, frame='icrs')\nstarB = SkyCoord(ra=100.91616321672286*u.degree, dec=75.27564982717806*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "173d36m21.21829939s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 110.27393838882257\u00b0, Dec = -57.526204925336366\u00b0 and RA = 153.83442027838026\u00b0, Dec = 81.95092921752521\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=110.27393838882257*u.degree, dec=-57.526204925336366*u.degree, frame='icrs')\nstarB = SkyCoord(ra=153.83442027838026*u.degree, dec=81.95092921752521*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "141d20m17.66760647s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 105.29557167974211\u00b0, Dec = 88.65372367281103\u00b0 and RA = 22.62111972491134\u00b0, Dec = -48.937240268823906\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=105.29557167974211*u.degree, dec=88.65372367281103*u.degree, frame='icrs')\nstarB = SkyCoord(ra=22.62111972491134*u.degree, dec=-48.937240268823906*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "138d44m52.08612786s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 97.91394260572787\u00b0, Dec = 41.65597312265652\u00b0 and RA = 322.5412686858309\u00b0, Dec = -0.1035108947479415\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=97.91394260572787*u.degree, dec=41.65597312265652*u.degree, frame='icrs')\nstarB = SkyCoord(ra=322.5412686858309*u.degree, dec=-0.1035108947479415*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "122d12m15.3587687s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 68.17509508455073\u00b0, Dec = -34.45141128813097\u00b0 and RA = 104.93834130587634\u00b0, Dec = -54.97768638169494\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=68.17509508455073*u.degree, dec=-34.45141128813097*u.degree, frame='icrs')\nstarB = SkyCoord(ra=104.93834130587634*u.degree, dec=-54.97768638169494*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "32d36m23.18752841s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 154.64159377008843\u00b0, Dec = 18.548571300954976\u00b0 and RA = 108.43849043338663\u00b0, Dec = -5.522160130849571\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=154.64159377008843*u.degree, dec=18.548571300954976*u.degree, frame='icrs')\nstarB = SkyCoord(ra=108.43849043338663*u.degree, dec=-5.522160130849571*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "51d30m05.09913085s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 118.86589756316717\u00b0, Dec = -1.4042140163879395\u00b0 and RA = 149.86894487271925\u00b0, Dec = 52.944576904467226\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=118.86589756316717*u.degree, dec=-1.4042140163879395*u.degree, frame='icrs')\nstarB = SkyCoord(ra=149.86894487271925*u.degree, dec=52.944576904467226*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "60d12m43.81014895s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 344.9327384267271\u00b0, Dec = 49.46617488830455\u00b0 and RA = 78.78460547033214\u00b0, Dec = 80.62897367173059\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=344.9327384267271*u.degree, dec=49.46617488830455*u.degree, frame='icrs')\nstarB = SkyCoord(ra=78.78460547033214*u.degree, dec=80.62897367173059*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "42d01m55.22800874s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 72.36533586949983\u00b0, Dec = -48.39587056255982\u00b0 and RA = 60.989034995477226\u00b0, Dec = 49.018899668502286\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=72.36533586949983*u.degree, dec=-48.39587056255982*u.degree, frame='icrs')\nstarB = SkyCoord(ra=60.989034995477226*u.degree, dec=49.018899668502286*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "97d54m33.72279385s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 64.81099955611336\u00b0, Dec = -0.43722439160308113\u00b0 and RA = 53.28618314043027\u00b0, Dec = -19.464031516432073\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=64.81099955611336*u.degree, dec=-0.43722439160308113*u.degree, frame='icrs')\nstarB = SkyCoord(ra=53.28618314043027*u.degree, dec=-19.464031516432073*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "22d07m33.94075472s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 103.72891954364428\u00b0, Dec = 11.623181400296104\u00b0 and RA = 90.77011389149013\u00b0, Dec = 5.424222660682432\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=103.72891954364428*u.degree, dec=11.623181400296104*u.degree, frame='icrs')\nstarB = SkyCoord(ra=90.77011389149013*u.degree, dec=5.424222660682432*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "14d13m46.6009151s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 204.0716094303506\u00b0, Dec = 27.15588928423705\u00b0 and RA = 251.98865974516585\u00b0, Dec = 83.90286163799101\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=204.0716094303506*u.degree, dec=27.15588928423705*u.degree, frame='icrs')\nstarB = SkyCoord(ra=251.98865974516585*u.degree, dec=83.90286163799101*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "58d51m26.64042286s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 183.88538204332446\u00b0, Dec = -63.86753207345945\u00b0 and RA = 27.950636760530116\u00b0, Dec = -28.95698591582451\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=183.88538204332446*u.degree, dec=-63.86753207345945*u.degree, frame='icrs')\nstarB = SkyCoord(ra=27.950636760530116*u.degree, dec=-28.95698591582451*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "85d15m07.04216016s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 76.31260825340526\u00b0, Dec = 84.51364911470841\u00b0 and RA = 73.36833711335075\u00b0, Dec = -78.97755509374154\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=76.31260825340526*u.degree, dec=84.51364911470841*u.degree, frame='icrs')\nstarB = SkyCoord(ra=73.36833711335075*u.degree, dec=-78.97755509374154*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "163d29m45.85278884s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 100.69955710367151\u00b0, Dec = 55.88947896716763\u00b0 and RA = 327.9588863263776\u00b0, Dec = 88.65143367770295\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=100.69955710367151*u.degree, dec=55.88947896716763*u.degree, frame='icrs')\nstarB = SkyCoord(ra=327.9588863263776*u.degree, dec=88.65143367770295*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "35d02m17.04991314s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 40.3195987825939\u00b0, Dec = -86.51828377415295\u00b0 and RA = 295.1627865881572\u00b0, Dec = 12.121691665002686\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=40.3195987825939*u.degree, dec=-86.51828377415295*u.degree, frame='icrs')\nstarB = SkyCoord(ra=295.1627865881572*u.degree, dec=12.121691665002686*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "103d00m36.96720009s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 99.72105129473464\u00b0, Dec = -47.738246736006076\u00b0 and RA = 89.19229589657546\u00b0, Dec = -68.50800822641447\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=99.72105129473464*u.degree, dec=-47.738246736006076*u.degree, frame='icrs')\nstarB = SkyCoord(ra=89.19229589657546*u.degree, dec=-68.50800822641447*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "21d25m48.05314518s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 314.04034870860164\u00b0, Dec = -72.41096153509082\u00b0 and RA = 286.27749503736817\u00b0, Dec = -67.69561251566262\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=314.04034870860164*u.degree, dec=-72.41096153509082*u.degree, frame='icrs')\nstarB = SkyCoord(ra=286.27749503736817*u.degree, dec=-67.69561251566262*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "10d27m00.81994408s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 9.230396732355484\u00b0, Dec = -54.8150135456884\u00b0 and RA = 67.4826817299618\u00b0, Dec = -29.960866622460962\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=9.230396732355484*u.degree, dec=-54.8150135456884*u.degree, frame='icrs')\nstarB = SkyCoord(ra=67.4826817299618*u.degree, dec=-29.960866622460962*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "47d52m04.48651108s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 218.12847603895435\u00b0, Dec = 85.4057155761833\u00b0 and RA = 103.72409302491475\u00b0, Dec = 84.85241445040134\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=218.12847603895435*u.degree, dec=85.4057155761833*u.degree, frame='icrs')\nstarB = SkyCoord(ra=103.72409302491475*u.degree, dec=84.85241445040134*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "8d11m29.38545436s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 356.95804726329465\u00b0, Dec = 79.51093738872487\u00b0 and RA = 298.9998334299505\u00b0, Dec = 62.555541118593965\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=356.95804726329465*u.degree, dec=79.51093738872487*u.degree, frame='icrs')\nstarB = SkyCoord(ra=298.9998334299505*u.degree, dec=62.555541118593965*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "23d29m17.39757966s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 25.153806185736045\u00b0, Dec = 80.65682319567006\u00b0 and RA = 240.35170164396357\u00b0, Dec = -59.59522807082054\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=25.153806185736045*u.degree, dec=80.65682319567006*u.degree, frame='icrs')\nstarB = SkyCoord(ra=240.35170164396357*u.degree, dec=-59.59522807082054*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "156d39m37.07892765s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 27.395246420269523\u00b0, Dec = 4.965327559902292\u00b0 and RA = 78.03439860155123\u00b0, Dec = -30.18159585301659\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=27.395246420269523*u.degree, dec=4.965327559902292*u.degree, frame='icrs')\nstarB = SkyCoord(ra=78.03439860155123*u.degree, dec=-30.18159585301659*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "59d49m26.75571239s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 188.88755940704988\u00b0, Dec = 82.59697478010185\u00b0 and RA = 222.7283099808525\u00b0, Dec = 45.15989005225137\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=188.88755940704988*u.degree, dec=82.59697478010185*u.degree, frame='icrs')\nstarB = SkyCoord(ra=222.7283099808525*u.degree, dec=45.15989005225137*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "38d51m53.04309802s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 243.8414144470777\u00b0, Dec = -0.7681504303023274\u00b0 and RA = 181.98535935578656\u00b0, Dec = -54.905132022470454\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=243.8414144470777*u.degree, dec=-0.7681504303023274*u.degree, frame='icrs')\nstarB = SkyCoord(ra=181.98535935578656*u.degree, dec=-54.905132022470454*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "73d36m44.73004572s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 312.4111401857343\u00b0, Dec = -57.95455339121383\u00b0 and RA = 110.86752540300476\u00b0, Dec = -45.79876816358663\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=312.4111401857343*u.degree, dec=-57.95455339121383*u.degree, frame='icrs')\nstarB = SkyCoord(ra=110.86752540300476*u.degree, dec=-45.79876816358663*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "74d43m01.52765561s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 202.00540599225909\u00b0, Dec = 63.91805128340741\u00b0 and RA = 333.84953252647057\u00b0, Dec = -40.62018401614968\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=202.00540599225909*u.degree, dec=63.91805128340741*u.degree, frame='icrs')\nstarB = SkyCoord(ra=333.84953252647057*u.degree, dec=-40.62018401614968*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "143d50m22.68419786s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 14.440776151516053\u00b0, Dec = 0.9385676690430245\u00b0 and RA = 334.42489252239557\u00b0, Dec = -56.549797947761604\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=14.440776151516053*u.degree, dec=0.9385676690430245*u.degree, frame='icrs')\nstarB = SkyCoord(ra=334.42489252239557*u.degree, dec=-56.549797947761604*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "65d53m37.32277509s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 149.75537175643086\u00b0, Dec = 81.25251659059981\u00b0 and RA = 291.9805009811359\u00b0, Dec = 55.85648067773013\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=149.75537175643086*u.degree, dec=81.25251659059981*u.degree, frame='icrs')\nstarB = SkyCoord(ra=291.9805009811359*u.degree, dec=55.85648067773013*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "41d21m46.56939319s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 227.82415871256495\u00b0, Dec = -37.81485371049626\u00b0 and RA = 337.062632425583\u00b0, Dec = 81.02212161983658\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=227.82415871256495*u.degree, dec=-37.81485371049626*u.degree, frame='icrs')\nstarB = SkyCoord(ra=337.062632425583*u.degree, dec=81.02212161983658*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "130d15m26.41901602s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 92.32354316867527\u00b0, Dec = -87.1556612669066\u00b0 and RA = 119.35639275440938\u00b0, Dec = -77.4635853597499\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=92.32354316867527*u.degree, dec=-87.1556612669066*u.degree, frame='icrs')\nstarB = SkyCoord(ra=119.35639275440938*u.degree, dec=-77.4635853597499*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "10d05m04.91668698s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 191.2417892906704\u00b0, Dec = -26.421413031630486\u00b0 and RA = 354.225737467537\u00b0, Dec = 27.786122469174686\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=191.2417892906704*u.degree, dec=-26.421413031630486*u.degree, frame='icrs')\nstarB = SkyCoord(ra=354.225737467537*u.degree, dec=27.786122469174686*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "164d48m12.51007878s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 187.38342087230578\u00b0, Dec = 44.722146022031524\u00b0 and RA = 201.30734529856093\u00b0, Dec = -0.9269352376314259\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=187.38342087230578*u.degree, dec=44.722146022031524*u.degree, frame='icrs')\nstarB = SkyCoord(ra=201.30734529856093*u.degree, dec=-0.9269352376314259*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "47d17m55.50133647s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 293.78976835691395\u00b0, Dec = -16.0383555790649\u00b0 and RA = 282.68735378952584\u00b0, Dec = 79.47595087006036\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=293.78976835691395*u.degree, dec=-16.0383555790649*u.degree, frame='icrs')\nstarB = SkyCoord(ra=282.68735378952584*u.degree, dec=79.47595087006036*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "95d42m12.40346116s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 274.3123610927813\u00b0, Dec = 68.11279141984468\u00b0 and RA = 169.157553328718\u00b0, Dec = 38.97007951633961\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=274.3123610927813*u.degree, dec=68.11279141984468*u.degree, frame='icrs')\nstarB = SkyCoord(ra=169.157553328718*u.degree, dec=38.97007951633961*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "59d28m54.24519585s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 349.14621649192634\u00b0, Dec = -24.453004369935584\u00b0 and RA = 187.9607260417709\u00b0, Dec = -4.501582300748055\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=349.14621649192634*u.degree, dec=-24.453004369935584*u.degree, frame='icrs')\nstarB = SkyCoord(ra=187.9607260417709*u.degree, dec=-4.501582300748055*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "145d44m32.31000556s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 294.1075103759945\u00b0, Dec = -53.88138005740598\u00b0 and RA = 183.91572714183994\u00b0, Dec = 63.476094406487675\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=294.1075103759945*u.degree, dec=-53.88138005740598*u.degree, frame='icrs')\nstarB = SkyCoord(ra=183.91572714183994*u.degree, dec=63.476094406487675*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "144d27m09.53605413s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 357.0180554483301\u00b0, Dec = -48.66841869993609\u00b0 and RA = 235.6832385446628\u00b0, Dec = -24.791699569516993\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=357.0180554483301*u.degree, dec=-48.66841869993609*u.degree, frame='icrs')\nstarB = SkyCoord(ra=235.6832385446628*u.degree, dec=-24.791699569516993*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "89d49m24.97683376s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 45.958842426964026\u00b0, Dec = -69.53087275921285\u00b0 and RA = 263.1484148553226\u00b0, Dec = 26.94439134120286\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=45.958842426964026*u.degree, dec=-69.53087275921285*u.degree, frame='icrs')\nstarB = SkyCoord(ra=263.1484148553226*u.degree, dec=26.94439134120286*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "132d17m17.7645418s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 88.8660942002124\u00b0, Dec = 75.14793266511421\u00b0 and RA = 217.9687332788421\u00b0, Dec = -23.477307530261257\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=88.8660942002124*u.degree, dec=75.14793266511421*u.degree, frame='icrs')\nstarB = SkyCoord(ra=217.9687332788421*u.degree, dec=-23.477307530261257*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "122d13m57.84956734s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 155.29258487963085\u00b0, Dec = 29.073922684445378\u00b0 and RA = 73.137728200224\u00b0, Dec = -62.49367901196409\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=155.29258487963085*u.degree, dec=29.073922684445378*u.degree, frame='icrs')\nstarB = SkyCoord(ra=73.137728200224*u.degree, dec=-62.49367901196409*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "112d04m50.13734516s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 114.41403931839442\u00b0, Dec = -59.96933099095966\u00b0 and RA = 162.56565048254095\u00b0, Dec = -4.415314781606284\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=114.41403931839442*u.degree, dec=-59.96933099095966*u.degree, frame='icrs')\nstarB = SkyCoord(ra=162.56565048254095*u.degree, dec=-4.415314781606284*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "66d26m59.81410027s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 184.39395172721152\u00b0, Dec = -6.093396589845227\u00b0 and RA = 130.59334297227576\u00b0, Dec = 86.79481244940467\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=184.39395172721152*u.degree, dec=-6.093396589845227*u.degree, frame='icrs')\nstarB = SkyCoord(ra=130.59334297227576*u.degree, dec=86.79481244940467*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "94d11m41.46545617s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 214.41854914786876\u00b0, Dec = 0.7069983266147801\u00b0 and RA = 142.70543515066885\u00b0, Dec = 4.575357762611176\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=214.41854914786876*u.degree, dec=0.7069983266147801*u.degree, frame='icrs')\nstarB = SkyCoord(ra=142.70543515066885*u.degree, dec=4.575357762611176*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "71d42m55.7759341s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 201.42555154569692\u00b0, Dec = -68.19852316278286\u00b0 and RA = 85.53675533116383\u00b0, Dec = -43.592582465915406\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=201.42555154569692*u.degree, dec=-68.19852316278286*u.degree, frame='icrs')\nstarB = SkyCoord(ra=85.53675533116383*u.degree, dec=-43.592582465915406*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "58d28m56.10284626s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 81.75413160588512\u00b0, Dec = -52.471708297199875\u00b0 and RA = 97.18150640201469\u00b0, Dec = 28.074182167824972\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=81.75413160588512*u.degree, dec=-52.471708297199875*u.degree, frame='icrs')\nstarB = SkyCoord(ra=97.18150640201469*u.degree, dec=28.074182167824972*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "81d40m08.44298284s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 49.01424101204028\u00b0, Dec = 2.581724787138029\u00b0 and RA = 228.47692801283617\u00b0, Dec = -66.30097143681726\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=49.01424101204028*u.degree, dec=2.581724787138029*u.degree, frame='icrs')\nstarB = SkyCoord(ra=228.47692801283617*u.degree, dec=-66.30097143681726*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "116d16m46.65047846s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 76.5564501196303\u00b0, Dec = 17.191762497676606\u00b0 and RA = 313.549222650484\u00b0, Dec = 46.98904304330955\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=76.5564501196303*u.degree, dec=17.191762497676606*u.degree, frame='icrs')\nstarB = SkyCoord(ra=313.549222650484*u.degree, dec=46.98904304330955*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "97d58m54.93204895s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 23.755389204875037\u00b0, Dec = -66.96077212967218\u00b0 and RA = 185.6007758416793\u00b0, Dec = 65.88038366019069\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=23.755389204875037*u.degree, dec=-66.96077212967218*u.degree, frame='icrs')\nstarB = SkyCoord(ra=185.6007758416793*u.degree, dec=65.88038366019069*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "172d41m05.64520242s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 199.43612537998763\u00b0, Dec = 84.35223421853456\u00b0 and RA = 193.0456937928818\u00b0, Dec = -71.96293834733403\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=199.43612537998763*u.degree, dec=84.35223421853456*u.degree, frame='icrs')\nstarB = SkyCoord(ra=193.0456937928818*u.degree, dec=-71.96293834733403*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "156d20m31.89203874s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 23.41579871303759\u00b0, Dec = -56.64936535488698\u00b0 and RA = 229.6221866683962\u00b0, Dec = -25.902981466546294\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=23.41579871303759*u.degree, dec=-56.64936535488698*u.degree, frame='icrs')\nstarB = SkyCoord(ra=229.6221866683962*u.degree, dec=-25.902981466546294*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "94d31m07.88997558s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 137.83225110523753\u00b0, Dec = 10.549525568994213\u00b0 and RA = 158.9524222273719\u00b0, Dec = 76.46678773412222\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=137.83225110523753*u.degree, dec=10.549525568994213*u.degree, frame='icrs')\nstarB = SkyCoord(ra=158.9524222273719*u.degree, dec=76.46678773412222*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "66d53m00.60302151s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 111.05728619981787\u00b0, Dec = 19.522534688177004\u00b0 and RA = 37.997164534445155\u00b0, Dec = 69.59204938463003\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=111.05728619981787*u.degree, dec=19.522534688177004*u.degree, frame='icrs')\nstarB = SkyCoord(ra=37.997164534445155*u.degree, dec=69.59204938463003*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "65d51m37.2496713s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 34.36644524352621\u00b0, Dec = 16.74755500424716\u00b0 and RA = 322.65081470221463\u00b0, Dec = 12.890056238292601\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=34.36644524352621*u.degree, dec=16.74755500424716*u.degree, frame='icrs')\nstarB = SkyCoord(ra=322.65081470221463*u.degree, dec=12.890056238292601*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "69d04m31.84519568s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 181.7196748092623\u00b0, Dec = 41.26351343670015\u00b0 and RA = 78.03326103010063\u00b0, Dec = -53.13677654085628\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=181.7196748092623*u.degree, dec=41.26351343670015*u.degree, frame='icrs')\nstarB = SkyCoord(ra=78.03326103010063*u.degree, dec=-53.13677654085628*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "129d22m21.28276923s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 151.18082873836101\u00b0, Dec = 48.029170081077154\u00b0 and RA = 325.50571287280536\u00b0, Dec = 89.96037977805764\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=151.18082873836101*u.degree, dec=48.029170081077154*u.degree, frame='icrs')\nstarB = SkyCoord(ra=325.50571287280536*u.degree, dec=89.96037977805764*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "42d00m36.92194399s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 19.100920542140862\u00b0, Dec = -26.69476781220152\u00b0 and RA = 338.82520417640563\u00b0, Dec = 47.28250417502127\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=19.100920542140862*u.degree, dec=-26.69476781220152*u.degree, frame='icrs')\nstarB = SkyCoord(ra=338.82520417640563*u.degree, dec=47.28250417502127*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "82d23m41.86387245s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 262.7810838179164\u00b0, Dec = -63.858269331538075\u00b0 and RA = 213.320577280283\u00b0, Dec = -12.382108046693773\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=262.7810838179164*u.degree, dec=-63.858269331538075*u.degree, frame='icrs')\nstarB = SkyCoord(ra=213.320577280283*u.degree, dec=-12.382108046693773*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "61d49m20.31945988s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 149.35844271318967\u00b0, Dec = 86.31993321997936\u00b0 and RA = 263.50633937016227\u00b0, Dec = -70.27805897941917\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=149.35844271318967*u.degree, dec=86.31993321997936*u.degree, frame='icrs')\nstarB = SkyCoord(ra=263.50633937016227*u.degree, dec=-70.27805897941917*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "161d29m19.39088311s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 10.844071468222278\u00b0, Dec = 56.971112141146904\u00b0 and RA = 100.97145814491414\u00b0, Dec = 26.681951352093378\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=10.844071468222278*u.degree, dec=56.971112141146904*u.degree, frame='icrs')\nstarB = SkyCoord(ra=100.97145814491414*u.degree, dec=26.681951352093378*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "67d57m06.03988886s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 39.20936793006137\u00b0, Dec = -7.224711597994997\u00b0 and RA = 36.068833006639224\u00b0, Dec = -59.70905544540009\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=39.20936793006137*u.degree, dec=-7.224711597994997*u.degree, frame='icrs')\nstarB = SkyCoord(ra=36.068833006639224*u.degree, dec=-59.70905544540009*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "52d32m18.99111166s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 344.64113297509056\u00b0, Dec = -51.26364568631096\u00b0 and RA = 335.76570761924995\u00b0, Dec = 28.490908284983718\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=344.64113297509056*u.degree, dec=-51.26364568631096*u.degree, frame='icrs')\nstarB = SkyCoord(ra=335.76570761924995*u.degree, dec=28.490908284983718*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "80d08m15.855186s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 165.62757989974358\u00b0, Dec = -30.955522426094177\u00b0 and RA = 37.26042216521\u00b0, Dec = -48.35849851719948\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=165.62757989974358*u.degree, dec=-30.955522426094177*u.degree, frame='icrs')\nstarB = SkyCoord(ra=37.26042216521*u.degree, dec=-48.35849851719948*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "88d14m24.70948193s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 143.9465975413809\u00b0, Dec = -55.60689127598939\u00b0 and RA = 235.96512126194278\u00b0, Dec = 84.55797190284423\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=143.9465975413809*u.degree, dec=-55.60689127598939*u.degree, frame='icrs')\nstarB = SkyCoord(ra=235.96512126194278*u.degree, dec=84.55797190284423*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "145d25m17.25541262s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 264.44997107796075\u00b0, Dec = 13.239665328066025\u00b0 and RA = 247.1487624212419\u00b0, Dec = 59.73155586017512\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=264.44997107796075*u.degree, dec=13.239665328066025*u.degree, frame='icrs')\nstarB = SkyCoord(ra=247.1487624212419*u.degree, dec=59.73155586017512*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "48d13m16.11420079s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 246.025772778942\u00b0, Dec = -15.219696424438496\u00b0 and RA = 269.01117310657605\u00b0, Dec = -67.06840800340862\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=246.025772778942*u.degree, dec=-15.219696424438496*u.degree, frame='icrs')\nstarB = SkyCoord(ra=269.01117310657605*u.degree, dec=-67.06840800340862*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "53d59m33.29159936s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 159.70914338025403\u00b0, Dec = 49.921685686853834\u00b0 and RA = 167.56817844393908\u00b0, Dec = -87.09383541578845\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=159.70914338025403*u.degree, dec=49.921685686853834*u.degree, frame='icrs')\nstarB = SkyCoord(ra=167.56817844393908*u.degree, dec=-87.09383541578845*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "137d02m28.65296006s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 41.975170887759546\u00b0, Dec = 44.25844201005725\u00b0 and RA = 0.8792356127394418\u00b0, Dec = -30.484524236298057\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=41.975170887759546*u.degree, dec=44.25844201005725*u.degree, frame='icrs')\nstarB = SkyCoord(ra=0.8792356127394418*u.degree, dec=-30.484524236298057*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "83d37m20.99531694s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 11.620480441154847\u00b0, Dec = -25.391994445665276\u00b0 and RA = 170.34751951528446\u00b0, Dec = -48.19185626033198\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=11.620480441154847*u.degree, dec=-25.391994445665276*u.degree, frame='icrs')\nstarB = SkyCoord(ra=170.34751951528446*u.degree, dec=-48.19185626033198*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "103d58m46.6594529s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 241.94219216362484\u00b0, Dec = -86.83446867561639\u00b0 and RA = 32.88608272879499\u00b0, Dec = -39.10584942385205\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=241.94219216362484*u.degree, dec=-86.83446867561639*u.degree, frame='icrs')\nstarB = SkyCoord(ra=32.88608272879499*u.degree, dec=-39.10584942385205*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "53d40m37.57676446s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 9.897787881907565\u00b0, Dec = -37.67138704930436\u00b0 and RA = 79.37203285848393\u00b0, Dec = -79.8573711974739\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=9.897787881907565*u.degree, dec=-37.67138704930436*u.degree, frame='icrs')\nstarB = SkyCoord(ra=79.37203285848393*u.degree, dec=-79.8573711974739*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "49d25m26.8210652s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 14.418262792860244\u00b0, Dec = -11.669961193653151\u00b0 and RA = 29.69322697363353\u00b0, Dec = 8.314729845683658\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=14.418262792860244*u.degree, dec=-11.669961193653151*u.degree, frame='icrs')\nstarB = SkyCoord(ra=29.69322697363353*u.degree, dec=8.314729845683658*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "25d06m08.89015643s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 343.9938185372154\u00b0, Dec = -51.34620442290385\u00b0 and RA = 188.55474733932684\u00b0, Dec = -84.20114487003727\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=343.9938185372154*u.degree, dec=-51.34620442290385*u.degree, frame='icrs')\nstarB = SkyCoord(ra=188.55474733932684*u.degree, dec=-84.20114487003727*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "43d59m00.68702019s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 113.73672686126076\u00b0, Dec = -32.94508395629722\u00b0 and RA = 162.6977135588791\u00b0, Dec = 19.795542687427556\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=113.73672686126076*u.degree, dec=-32.94508395629722*u.degree, frame='icrs')\nstarB = SkyCoord(ra=162.6977135588791*u.degree, dec=19.795542687427556*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "70d28m22.28132058s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 179.28821137260303\u00b0, Dec = -35.99756287166025\u00b0 and RA = 248.0073237867664\u00b0, Dec = -71.6635157707667\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=179.28821137260303*u.degree, dec=-35.99756287166025*u.degree, frame='icrs')\nstarB = SkyCoord(ra=248.0073237867664*u.degree, dec=-71.6635157707667*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "49d26m13.03599999s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 102.45540446642298\u00b0, Dec = 78.05565183144489\u00b0 and RA = 205.47858665072783\u00b0, Dec = 47.29651275897774\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=102.45540446642298*u.degree, dec=78.05565183144489*u.degree, frame='icrs')\nstarB = SkyCoord(ra=205.47858665072783*u.degree, dec=47.29651275897774*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "46d34m50.38880202s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 220.61604467187837\u00b0, Dec = 77.47426768544312\u00b0 and RA = 193.85081131667718\u00b0, Dec = 72.29440301352162\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=220.61604467187837*u.degree, dec=77.47426768544312*u.degree, frame='icrs')\nstarB = SkyCoord(ra=193.85081131667718*u.degree, dec=72.29440301352162*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "8d33m51.47226363s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 49.355271250971995\u00b0, Dec = 72.06465356647428\u00b0 and RA = 247.62230578883083\u00b0, Dec = -82.28715661059492\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=49.355271250971995*u.degree, dec=72.06465356647428*u.degree, frame='icrs')\nstarB = SkyCoord(ra=247.62230578883083*u.degree, dec=-82.28715661059492*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "169d07m32.33952803s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 231.23940907787156\u00b0, Dec = -26.19605439090575\u00b0 and RA = 70.03640772477672\u00b0, Dec = -46.2325539119381\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=231.23940907787156*u.degree, dec=-26.19605439090575*u.degree, frame='icrs')\nstarB = SkyCoord(ra=70.03640772477672*u.degree, dec=-46.2325539119381*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "105d35m32.29113907s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 86.74698672683175\u00b0, Dec = 25.268096650887088\u00b0 and RA = 125.20410672321644\u00b0, Dec = -46.58388192329731\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=86.74698672683175*u.degree, dec=25.268096650887088*u.degree, frame='icrs')\nstarB = SkyCoord(ra=125.20410672321644*u.degree, dec=-46.58388192329731*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "79d49m31.86047416s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 295.4794941698147\u00b0, Dec = 57.20684381132085\u00b0 and RA = 296.6739040385057\u00b0, Dec = -21.595080863177884\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=295.4794941698147*u.degree, dec=57.20684381132085*u.degree, frame='icrs')\nstarB = SkyCoord(ra=296.6739040385057*u.degree, dec=-21.595080863177884*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "78d48m29.93595081s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 195.98082969854812\u00b0, Dec = -87.0378596604896\u00b0 and RA = 77.34348802662664\u00b0, Dec = -68.81155223948397\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=195.98082969854812*u.degree, dec=-87.0378596604896*u.degree, frame='icrs')\nstarB = SkyCoord(ra=77.34348802662664*u.degree, dec=-68.81155223948397*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "22d45m00.83486104s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 165.5120521279411\u00b0, Dec = 22.257645509541106\u00b0 and RA = 15.307528982769227\u00b0, Dec = 9.551906504251662\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=165.5120521279411*u.degree, dec=22.257645509541106*u.degree, frame='icrs')\nstarB = SkyCoord(ra=15.307528982769227*u.degree, dec=9.551906504251662*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "136d48m56.35443551s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 214.3446653578078\u00b0, Dec = 76.4150721584661\u00b0 and RA = 194.43971855239772\u00b0, Dec = 60.04395618948675\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=214.3446653578078*u.degree, dec=76.4150721584661*u.degree, frame='icrs')\nstarB = SkyCoord(ra=194.43971855239772*u.degree, dec=60.04395618948675*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "17d44m23.7885974s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 306.4504627474698\u00b0, Dec = 87.5806312418234\u00b0 and RA = 111.45274509323552\u00b0, Dec = -25.83366460679065\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=306.4504627474698*u.degree, dec=87.5806312418234*u.degree, frame='icrs')\nstarB = SkyCoord(ra=111.45274509323552*u.degree, dec=-25.83366460679065*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "118d10m07.9767875s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 278.72071510848195\u00b0, Dec = 27.120165052109456\u00b0 and RA = 10.023316579104726\u00b0, Dec = -41.57973439537712\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=278.72071510848195*u.degree, dec=27.120165052109456*u.degree, frame='icrs')\nstarB = SkyCoord(ra=10.023316579104726*u.degree, dec=-41.57973439537712*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "108d31m19.64176442s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 130.19449302176542\u00b0, Dec = -49.98834293428741\u00b0 and RA = 169.3645605261126\u00b0, Dec = 62.03559096095691\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=130.19449302176542*u.degree, dec=-49.98834293428741*u.degree, frame='icrs')\nstarB = SkyCoord(ra=169.3645605261126*u.degree, dec=62.03559096095691*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "116d16m45.31477995s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 325.67706124104205\u00b0, Dec = 56.55379051749662\u00b0 and RA = 22.442813513212336\u00b0, Dec = 40.962170038979224\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=325.67706124104205*u.degree, dec=56.55379051749662*u.degree, frame='icrs')\nstarB = SkyCoord(ra=22.442813513212336*u.degree, dec=40.962170038979224*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "39d11m07.30285975s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 112.57243677125544\u00b0, Dec = 35.243495403314796\u00b0 and RA = 312.4434546997675\u00b0, Dec = -15.958831803498924\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=112.57243677125544*u.degree, dec=35.243495403314796*u.degree, frame='icrs')\nstarB = SkyCoord(ra=312.4434546997675*u.degree, dec=-15.958831803498924*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "153d47m03.26211747s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 285.77950245428906\u00b0, Dec = -33.462625890740306\u00b0 and RA = 109.33343680315052\u00b0, Dec = -55.664186961710314\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=285.77950245428906*u.degree, dec=-33.462625890740306*u.degree, frame='icrs')\nstarB = SkyCoord(ra=109.33343680315052*u.degree, dec=-55.664186961710314*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "90d49m16.80027812s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 243.49553373476124\u00b0, Dec = 5.76903858796976\u00b0 and RA = 217.27407409245708\u00b0, Dec = 48.316672951147865\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=243.49553373476124*u.degree, dec=5.76903858796976*u.degree, frame='icrs')\nstarB = SkyCoord(ra=217.27407409245708*u.degree, dec=48.316672951147865*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "48d02m19.60190941s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 152.73654768633259\u00b0, Dec = -63.15532247961241\u00b0 and RA = 102.86673258397947\u00b0, Dec = 1.1704387519063602\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=152.73654768633259*u.degree, dec=-63.15532247961241*u.degree, frame='icrs')\nstarB = SkyCoord(ra=102.86673258397947*u.degree, dec=1.1704387519063602*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "74d10m16.07494177s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 72.82890066904707\u00b0, Dec = 30.21916778351921\u00b0 and RA = 13.744040952929799\u00b0, Dec = -51.70807076228595\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=72.82890066904707*u.degree, dec=30.21916778351921*u.degree, frame='icrs')\nstarB = SkyCoord(ra=13.744040952929799*u.degree, dec=-51.70807076228595*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "96d53m16.40701441s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 5.485554482675976\u00b0, Dec = 35.656495052459704\u00b0 and RA = 34.04688902944696\u00b0, Dec = -20.44392406775981\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=5.485554482675976*u.degree, dec=35.656495052459704*u.degree, frame='icrs')\nstarB = SkyCoord(ra=34.04688902944696*u.degree, dec=-20.44392406775981*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "62d17m02.86209842s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 95.25962952089273\u00b0, Dec = -33.37718104341016\u00b0 and RA = 144.9971879725859\u00b0, Dec = -36.767320995173904\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=95.25962952089273*u.degree, dec=-33.37718104341016*u.degree, frame='icrs')\nstarB = SkyCoord(ra=144.9971879725859*u.degree, dec=-36.767320995173904*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "40d23m29.01329116s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 0.9626378964938542\u00b0, Dec = -54.62980608825048\u00b0 and RA = 346.62004433714696\u00b0, Dec = 64.17503189436721\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=0.9626378964938542*u.degree, dec=-54.62980608825048*u.degree, frame='icrs')\nstarB = SkyCoord(ra=346.62004433714696*u.degree, dec=64.17503189436721*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "119d19m12.07369986s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 279.17486697891144\u00b0, Dec = -82.10050435077129\u00b0 and RA = 220.91573949933007\u00b0, Dec = -13.311744580969787\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=279.17486697891144*u.degree, dec=-82.10050435077129*u.degree, frame='icrs')\nstarB = SkyCoord(ra=220.91573949933007*u.degree, dec=-13.311744580969787*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "72d38m13.37464066s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 93.71496192303026\u00b0, Dec = -52.13701122839073\u00b0 and RA = 285.9983172436057\u00b0, Dec = 6.346225769425445\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=93.71496192303026*u.degree, dec=-52.13701122839073*u.degree, frame='icrs')\nstarB = SkyCoord(ra=285.9983172436057*u.degree, dec=6.346225769425445*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "133d06m11.81343713s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 32.01370660410924\u00b0, Dec = 70.70344613924402\u00b0 and RA = 152.66132513392037\u00b0, Dec = -48.768268001700214\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=32.01370660410924*u.degree, dec=70.70344613924402*u.degree, frame='icrs')\nstarB = SkyCoord(ra=152.66132513392037*u.degree, dec=-48.768268001700214*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "145d10m04.25081258s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 189.16075573357878\u00b0, Dec = 78.11062643816123\u00b0 and RA = 132.35236835011693\u00b0, Dec = 81.29673332280325\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=189.16075573357878*u.degree, dec=78.11062643816123*u.degree, frame='icrs')\nstarB = SkyCoord(ra=132.35236835011693*u.degree, dec=81.29673332280325*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "10d09m04.60117955s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 87.45259432635818\u00b0, Dec = -72.42587634825304\u00b0 and RA = 296.083247250044\u00b0, Dec = -6.891261662539861\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=87.45259432635818*u.degree, dec=-72.42587634825304*u.degree, frame='icrs')\nstarB = SkyCoord(ra=296.083247250044*u.degree, dec=-6.891261662539861*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "98d33m09.98447615s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 75.65721916864787\u00b0, Dec = -60.37711910345322\u00b0 and RA = 318.63326339532244\u00b0, Dec = -31.829125869060917\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=75.65721916864787*u.degree, dec=-60.37711910345322*u.degree, frame='icrs')\nstarB = SkyCoord(ra=318.63326339532244*u.degree, dec=-31.829125869060917*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "74d28m33.48224618s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 135.74533080906062\u00b0, Dec = 36.574881970425864\u00b0 and RA = 90.58248631677131\u00b0, Dec = 47.454916098115405\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=135.74533080906062*u.degree, dec=36.574881970425864*u.degree, frame='icrs')\nstarB = SkyCoord(ra=90.58248631677131*u.degree, dec=47.454916098115405*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "34d43m33.67158356s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 15.262202011192677\u00b0, Dec = -84.59851985072818\u00b0 and RA = 336.0592961788813\u00b0, Dec = 28.07827496395366\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=15.262202011192677*u.degree, dec=-84.59851985072818*u.degree, frame='icrs')\nstarB = SkyCoord(ra=336.0592961788813*u.degree, dec=28.07827496395366*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "113d50m33.70945796s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 349.9214846191834\u00b0, Dec = -53.26514810096608\u00b0 and RA = 351.33890149529117\u00b0, Dec = 32.454882035512114\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=349.9214846191834*u.degree, dec=-53.26514810096608*u.degree, frame='icrs')\nstarB = SkyCoord(ra=351.33890149529117*u.degree, dec=32.454882035512114*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "85d43m44.05056814s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 257.1948198041249\u00b0, Dec = -28.854583143856665\u00b0 and RA = 230.0769975014294\u00b0, Dec = 75.24528911060739\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=257.1948198041249*u.degree, dec=-28.854583143856665*u.degree, frame='icrs')\nstarB = SkyCoord(ra=230.0769975014294*u.degree, dec=75.24528911060739*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "105d33m11.69571023s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 249.57555896481463\u00b0, Dec = 21.35998027720457\u00b0 and RA = 293.5451450222604\u00b0, Dec = 55.81401748513042\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=249.57555896481463*u.degree, dec=21.35998027720457*u.degree, frame='icrs')\nstarB = SkyCoord(ra=293.5451450222604*u.degree, dec=55.81401748513042*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "47d19m10.69615135s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 180.4439078584725\u00b0, Dec = -28.812951774578337\u00b0 and RA = 347.4040200446307\u00b0, Dec = -42.83025480255347\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=180.4439078584725*u.degree, dec=-28.812951774578337*u.degree, frame='icrs')\nstarB = SkyCoord(ra=347.4040200446307*u.degree, dec=-42.83025480255347*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "107d21m33.59107966s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 155.30433892628847\u00b0, Dec = 51.98041941564978\u00b0 and RA = 105.02578688716801\u00b0, Dec = -11.119953109712952\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=155.30433892628847*u.degree, dec=51.98041941564978*u.degree, frame='icrs')\nstarB = SkyCoord(ra=105.02578688716801*u.degree, dec=-11.119953109712952*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "76d27m01.62975116s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 308.1753319179356\u00b0, Dec = -0.5555045033002557\u00b0 and RA = 101.896544410194\u00b0, Dec = -74.61823894163193\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=308.1753319179356*u.degree, dec=-0.5555045033002557*u.degree, frame='icrs')\nstarB = SkyCoord(ra=101.896544410194*u.degree, dec=-74.61823894163193*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "103d12m26.65516721s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 82.76618544977606\u00b0, Dec = 34.367454847142156\u00b0 and RA = 301.54390210181776\u00b0, Dec = -25.444549989969175\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=82.76618544977606*u.degree, dec=34.367454847142156*u.degree, frame='icrs')\nstarB = SkyCoord(ra=301.54390210181776*u.degree, dec=-25.444549989969175*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "145d26m50.34055835s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 41.2778041606782\u00b0, Dec = 57.64136441470325\u00b0 and RA = 252.75785209529184\u00b0, Dec = -70.88055514550568\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=41.2778041606782*u.degree, dec=57.64136441470325*u.degree, frame='icrs')\nstarB = SkyCoord(ra=252.75785209529184*u.degree, dec=-70.88055514550568*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "161d22m25.10253596s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 146.53610865518183\u00b0, Dec = 38.95534221104924\u00b0 and RA = 334.74030428759636\u00b0, Dec = 80.38427776592596\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=146.53610865518183*u.degree, dec=38.95534221104924*u.degree, frame='icrs')\nstarB = SkyCoord(ra=334.74030428759636*u.degree, dec=80.38427776592596*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "60d34m22.68095788s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 230.1842811805777\u00b0, Dec = -22.643892260715447\u00b0 and RA = 8.417736261094078\u00b0, Dec = 27.82452768907794\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=230.1842811805777*u.degree, dec=-22.643892260715447*u.degree, frame='icrs')\nstarB = SkyCoord(ra=8.417736261094078*u.degree, dec=27.82452768907794*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "142d02m39.87012286s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 211.68467784868105\u00b0, Dec = 42.81127852217614\u00b0 and RA = 9.423464062709721\u00b0, Dec = 77.09341087514008\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=211.68467784868105*u.degree, dec=42.81127852217614*u.degree, frame='icrs')\nstarB = SkyCoord(ra=9.423464062709721*u.degree, dec=77.09341087514008*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "59d17m05.13999505s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 324.90628730713325\u00b0, Dec = -74.60456431119952\u00b0 and RA = 321.1967254643535\u00b0, Dec = -18.778906115759597\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=324.90628730713325*u.degree, dec=-74.60456431119952*u.degree, frame='icrs')\nstarB = SkyCoord(ra=321.1967254643535*u.degree, dec=-18.778906115759597*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "55d51m43.63296895s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 304.82027798924327\u00b0, Dec = 7.209195210259324\u00b0 and RA = 34.10080675335857\u00b0, Dec = 83.48663639203829\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=304.82027798924327*u.degree, dec=7.209195210259324*u.degree, frame='icrs')\nstarB = SkyCoord(ra=34.10080675335857*u.degree, dec=83.48663639203829*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "82d45m21.49857274s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 289.73838241140265\u00b0, Dec = -42.22009065731329\u00b0 and RA = 152.09680311782736\u00b0, Dec = 25.46878686919962\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=289.73838241140265*u.degree, dec=-42.22009065731329*u.degree, frame='icrs')\nstarB = SkyCoord(ra=152.09680311782736*u.degree, dec=25.46878686919962*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "141d32m17.5161794s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 299.1641208697318\u00b0, Dec = 7.019902292402975\u00b0 and RA = 24.538263168309186\u00b0, Dec = 67.34030605560909\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=299.1641208697318*u.degree, dec=7.019902292402975*u.degree, frame='icrs')\nstarB = SkyCoord(ra=24.538263168309186*u.degree, dec=67.34030605560909*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "81d44m33.88793045s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 28.072540386809834\u00b0, Dec = 21.420782308479062\u00b0 and RA = 175.09671852469282\u00b0, Dec = 84.69943144637116\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=28.072540386809834*u.degree, dec=21.420782308479062*u.degree, frame='icrs')\nstarB = SkyCoord(ra=175.09671852469282*u.degree, dec=84.69943144637116*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "73d03m06.25997537s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 308.7212852367504\u00b0, Dec = 75.40430326755043\u00b0 and RA = 55.51913389653351\u00b0, Dec = 82.60878499004872\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=308.7212852367504*u.degree, dec=75.40430326755043*u.degree, frame='icrs')\nstarB = SkyCoord(ra=55.51913389653351*u.degree, dec=82.60878499004872*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "18d08m10.78316752s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 54.57850647352384\u00b0, Dec = -46.0050572225612\u00b0 and RA = 320.23974256491096\u00b0, Dec = -57.78611482641385\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=54.57850647352384*u.degree, dec=-46.0050572225612*u.degree, frame='icrs')\nstarB = SkyCoord(ra=320.23974256491096*u.degree, dec=-57.78611482641385*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "54d30m14.22906174s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 319.217738730983\u00b0, Dec = -24.075454125672096\u00b0 and RA = 16.573661105761314\u00b0, Dec = -87.25088445245994\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=319.217738730983*u.degree, dec=-24.075454125672096*u.degree, frame='icrs')\nstarB = SkyCoord(ra=16.573661105761314*u.degree, dec=-87.25088445245994*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "64d27m47.40440911s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 139.44688076379853\u00b0, Dec = -86.19397504582426\u00b0 and RA = 238.5667406637099\u00b0, Dec = 75.74410907855469\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=139.44688076379853*u.degree, dec=-86.19397504582426*u.degree, frame='icrs')\nstarB = SkyCoord(ra=238.5667406637099*u.degree, dec=75.74410907855469*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "165d50m59.82989071s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 258.4752690600268\u00b0, Dec = 56.39626964443286\u00b0 and RA = 281.05668990335187\u00b0, Dec = 51.96592110783183\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=258.4752690600268*u.degree, dec=56.39626964443286*u.degree, frame='icrs')\nstarB = SkyCoord(ra=281.05668990335187*u.degree, dec=51.96592110783183*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "13d51m48.40092975s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 285.22292959987794\u00b0, Dec = 41.7817124649755\u00b0 and RA = 10.247733686133751\u00b0, Dec = 12.639146036584876\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=285.22292959987794*u.degree, dec=41.7817124649755*u.degree, frame='icrs')\nstarB = SkyCoord(ra=10.247733686133751*u.degree, dec=12.639146036584876*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "77d56m32.7873375s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 278.06389772805477\u00b0, Dec = 76.67908984937955\u00b0 and RA = 289.0039447389426\u00b0, Dec = -66.71539621786295\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=278.06389772805477*u.degree, dec=76.67908984937955*u.degree, frame='icrs')\nstarB = SkyCoord(ra=289.0039447389426*u.degree, dec=-66.71539621786295*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "143d33m13.78186376s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 142.32774061986927\u00b0, Dec = 74.422232718108\u00b0 and RA = 308.2741394044564\u00b0, Dec = 37.809427914287895\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=142.32774061986927*u.degree, dec=74.422232718108*u.degree, frame='icrs')\nstarB = SkyCoord(ra=308.2741394044564*u.degree, dec=37.809427914287895*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "67d22m28.97675647s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 183.9140754189125\u00b0, Dec = -34.15241146586959\u00b0 and RA = 114.95550947847966\u00b0, Dec = 63.1957306288364\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=183.9140754189125*u.degree, dec=-34.15241146586959*u.degree, frame='icrs')\nstarB = SkyCoord(ra=114.95550947847966*u.degree, dec=63.1957306288364*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "111d32m10.25396377s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 131.7691171188578\u00b0, Dec = -19.959237338426206\u00b0 and RA = 98.16481848788352\u00b0, Dec = -21.454428443941993\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=131.7691171188578*u.degree, dec=-19.959237338426206*u.degree, frame='icrs')\nstarB = SkyCoord(ra=98.16481848788352*u.degree, dec=-21.454428443941993*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "31d24m35.29783557s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 223.0156177133085\u00b0, Dec = -88.0192968487556\u00b0 and RA = 352.0351611318228\u00b0, Dec = -40.03219679753895\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=223.0156177133085*u.degree, dec=-88.0192968487556*u.degree, frame='icrs')\nstarB = SkyCoord(ra=352.0351611318228*u.degree, dec=-40.03219679753895*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "51d13m54.21409305s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 37.708272692353766\u00b0, Dec = -45.04409281569132\u00b0 and RA = 160.7121130767225\u00b0, Dec = -2.5854162296359675\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=37.708272692353766*u.degree, dec=-45.04409281569132*u.degree, frame='icrs')\nstarB = SkyCoord(ra=160.7121130767225*u.degree, dec=-2.5854162296359675*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "110d38m35.71702713s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 341.4845635039431\u00b0, Dec = 70.6444356916675\u00b0 and RA = 65.47381452827094\u00b0, Dec = 33.030653909238396\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=341.4845635039431*u.degree, dec=70.6444356916675*u.degree, frame='icrs')\nstarB = SkyCoord(ra=65.47381452827094*u.degree, dec=33.030653909238396*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "57d05m10.53520482s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 75.73547846734886\u00b0, Dec = -84.51822982950867\u00b0 and RA = 43.105005468910576\u00b0, Dec = 69.07778361312577\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=75.73547846734886*u.degree, dec=-84.51822982950867*u.degree, frame='icrs')\nstarB = SkyCoord(ra=43.105005468910576*u.degree, dec=69.07778361312577*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "154d17m54.32565734s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 91.22913945663154\u00b0, Dec = 68.465902265603\u00b0 and RA = 17.328100337789166\u00b0, Dec = -62.094048234922894\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=91.22913945663154*u.degree, dec=68.465902265603*u.degree, frame='icrs')\nstarB = SkyCoord(ra=17.328100337789166*u.degree, dec=-62.094048234922894*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "140d45m01.14637552s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 100.04235911523995\u00b0, Dec = 58.63804339641456\u00b0 and RA = 149.10256810036418\u00b0, Dec = 34.64105639700459\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=100.04235911523995*u.degree, dec=58.63804339641456*u.degree, frame='icrs')\nstarB = SkyCoord(ra=149.10256810036418*u.degree, dec=34.64105639700459*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "40d00m27.9748332s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 212.14233303857893\u00b0, Dec = 77.80202835913485\u00b0 and RA = 264.2929810245285\u00b0, Dec = 82.67920565956837\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=212.14233303857893*u.degree, dec=77.80202835913485*u.degree, frame='icrs')\nstarB = SkyCoord(ra=264.2929810245285*u.degree, dec=82.67920565956837*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "9d36m25.22226167s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 65.2805050941392\u00b0, Dec = 52.37644416935069\u00b0 and RA = 120.20757868795536\u00b0, Dec = -32.81428005305557\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=65.2805050941392*u.degree, dec=52.37644416935069*u.degree, frame='icrs')\nstarB = SkyCoord(ra=120.20757868795536*u.degree, dec=-32.81428005305557*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "97d43m27.50366143s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 186.6948539649906\u00b0, Dec = 52.925331041402245\u00b0 and RA = 337.08036492916267\u00b0, Dec = 61.667707531247544\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=186.6948539649906*u.degree, dec=52.925331041402245*u.degree, frame='icrs')\nstarB = SkyCoord(ra=337.08036492916267*u.degree, dec=61.667707531247544*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "63d01m43.27851854s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 160.63552527165308\u00b0, Dec = 17.46969346623807\u00b0 and RA = 153.89729989807248\u00b0, Dec = -70.67588400097972\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=160.63552527165308*u.degree, dec=17.46969346623807*u.degree, frame='icrs')\nstarB = SkyCoord(ra=153.89729989807248*u.degree, dec=-70.67588400097972*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "88d16m14.0210755s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 255.66974750198412\u00b0, Dec = 75.93084932237\u00b0 and RA = 45.42406869229244\u00b0, Dec = 43.03354431169291\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=255.66974750198412*u.degree, dec=75.93084932237*u.degree, frame='icrs')\nstarB = SkyCoord(ra=45.42406869229244*u.degree, dec=43.03354431169291*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "59d26m20.67187485s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 96.02716477951179\u00b0, Dec = -53.94221972063184\u00b0 and RA = 139.11736484706762\u00b0, Dec = 29.07391930847514\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=96.02716477951179*u.degree, dec=-53.94221972063184*u.degree, frame='icrs')\nstarB = SkyCoord(ra=139.11736484706762*u.degree, dec=29.07391930847514*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "90d59m00.42733532s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 131.5275298284718\u00b0, Dec = -49.23487095735852\u00b0 and RA = 67.47668912953188\u00b0, Dec = -1.9231058766540485\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=131.5275298284718*u.degree, dec=-49.23487095735852*u.degree, frame='icrs')\nstarB = SkyCoord(ra=67.47668912953188*u.degree, dec=-1.9231058766540485*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "71d52m55.49292622s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 20.08697953254385\u00b0, Dec = 89.18744771921294\u00b0 and RA = 180.84367004844805\u00b0, Dec = -55.22328215689621\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=20.08697953254385*u.degree, dec=89.18744771921294*u.degree, frame='icrs')\nstarB = SkyCoord(ra=180.84367004844805*u.degree, dec=-55.22328215689621*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "145d59m22.24767412s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 4.327881278555221\u00b0, Dec = 82.13132151050931\u00b0 and RA = 172.409548346998\u00b0, Dec = 24.43761826688241\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=4.327881278555221*u.degree, dec=82.13132151050931*u.degree, frame='icrs')\nstarB = SkyCoord(ra=172.409548346998*u.degree, dec=24.43761826688241*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "73d16m13.367223s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 317.3685026682505\u00b0, Dec = -31.60143003663825\u00b0 and RA = 279.06023343127265\u00b0, Dec = -27.753897680959227\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=317.3685026682505*u.degree, dec=-31.60143003663825*u.degree, frame='icrs')\nstarB = SkyCoord(ra=279.06023343127265*u.degree, dec=-27.753897680959227*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "33d20m11.05012894s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 352.81583400605524\u00b0, Dec = 17.83076304731989\u00b0 and RA = 318.8130125858546\u00b0, Dec = 34.64948007801783\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=352.81583400605524*u.degree, dec=17.83076304731989*u.degree, frame='icrs')\nstarB = SkyCoord(ra=318.8130125858546*u.degree, dec=34.64948007801783*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "34d34m54.13300513s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 99.91800628918205\u00b0, Dec = -73.30066050507176\u00b0 and RA = 140.7852170275357\u00b0, Dec = 75.47489140685482\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=99.91800628918205*u.degree, dec=-73.30066050507176*u.degree, frame='icrs')\nstarB = SkyCoord(ra=140.7852170275357*u.degree, dec=75.47489140685482*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "150d46m30.96629138s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 159.86945532560276\u00b0, Dec = -12.593455711543768\u00b0 and RA = 319.6863590659439\u00b0, Dec = -8.635071749377971\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=159.86945532560276*u.degree, dec=-12.593455711543768*u.degree, frame='icrs')\nstarB = SkyCoord(ra=319.6863590659439*u.degree, dec=-8.635071749377971*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "150d47m48.59248433s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 187.0507093938223\u00b0, Dec = -32.77558115559136\u00b0 and RA = 121.50230836474036\u00b0, Dec = -4.402893840320388\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=187.0507093938223*u.degree, dec=-32.77558115559136*u.degree, frame='icrs')\nstarB = SkyCoord(ra=121.50230836474036*u.degree, dec=-4.402893840320388*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "67d08m06.57507278s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 136.88067380236427\u00b0, Dec = 56.7787511566149\u00b0 and RA = 305.4996009456356\u00b0, Dec = 18.478525240448988\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=136.88067380236427*u.degree, dec=56.7787511566149*u.degree, frame='icrs')\nstarB = SkyCoord(ra=305.4996009456356*u.degree, dec=18.478525240448988*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "104d08m17.48327726s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 180.73372621655082\u00b0, Dec = 3.298090525489087\u00b0 and RA = 269.51072692200916\u00b0, Dec = 66.16358279821924\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=180.73372621655082*u.degree, dec=3.298090525489087*u.degree, frame='icrs')\nstarB = SkyCoord(ra=269.51072692200916*u.degree, dec=66.16358279821924*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "86d29m21.49952879s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 116.77356212430081\u00b0, Dec = 24.622295159194238\u00b0 and RA = 177.4046302024474\u00b0, Dec = -67.39782323085285\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=116.77356212430081*u.degree, dec=24.622295159194238*u.degree, frame='icrs')\nstarB = SkyCoord(ra=177.4046302024474*u.degree, dec=-67.39782323085285*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "102d18m53.95932696s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 160.58651387852\u00b0, Dec = 15.10281674920327\u00b0 and RA = 140.31603069347614\u00b0, Dec = 34.42477271006581\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=160.58651387852*u.degree, dec=15.10281674920327*u.degree, frame='icrs')\nstarB = SkyCoord(ra=140.31603069347614*u.degree, dec=34.42477271006581*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "26d34m28.59191165s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 313.4076574286738\u00b0, Dec = 83.03744288856606\u00b0 and RA = 297.07705718912115\u00b0, Dec = 74.43418106788246\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=313.4076574286738*u.degree, dec=83.03744288856606*u.degree, frame='icrs')\nstarB = SkyCoord(ra=297.07705718912115*u.degree, dec=74.43418106788246*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "9d05m31.70548823s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 18.937098074027897\u00b0, Dec = 15.335120513432372\u00b0 and RA = 223.064438819498\u00b0, Dec = -68.57542953063432\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=18.937098074027897*u.degree, dec=15.335120513432372*u.degree, frame='icrs')\nstarB = SkyCoord(ra=223.064438819498*u.degree, dec=-68.57542953063432*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "124d35m20.3457541s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 201.88318753415425\u00b0, Dec = -54.07912053329395\u00b0 and RA = 333.02605781202453\u00b0, Dec = 23.097874519564115\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=201.88318753415425*u.degree, dec=-54.07912053329395*u.degree, frame='icrs')\nstarB = SkyCoord(ra=333.02605781202453*u.degree, dec=23.097874519564115*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "132d16m45.88145672s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 68.8756262223718\u00b0, Dec = 79.60396238877792\u00b0 and RA = 207.0879137300652\u00b0, Dec = 80.90461671866643\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=68.8756262223718*u.degree, dec=79.60396238877792*u.degree, frame='icrs')\nstarB = SkyCoord(ra=207.0879137300652*u.degree, dec=80.90461671866643*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "18d12m16.0165723s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 5.423298181905043\u00b0, Dec = -2.3944133436249047\u00b0 and RA = 321.1646059648661\u00b0, Dec = 71.86671860259926\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=5.423298181905043*u.degree, dec=-2.3944133436249047*u.degree, frame='icrs')\nstarB = SkyCoord(ra=321.1646059648661*u.degree, dec=71.86671860259926*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "79d27m19.05284452s"
    },
    {
        "question": "Considering a binary star system with stars A and B at coordinates RA = 253.76902948593843\u00b0, Dec = -29.532321017642552\u00b0 and RA = 167.4353220390061\u00b0, Dec = 13.175445717329751\u00b0, respectively, if star A goes supernova, at what angular separation would an observer on Earth start noticing the effects on star B?",
        "code": "from astropy.coordinates import SkyCoord\nfrom astropy import units as u\n\nstarA = SkyCoord(ra=253.76902948593843*u.degree, dec=-29.532321017642552*u.degree, frame='icrs')\nstarB = SkyCoord(ra=167.4353220390061*u.degree, dec=13.175445717329751*u.degree, frame='icrs')\nangular_separation = starA.separation(starB)\nresult = angular_separation",
        "answer": "93d20m07.06486202s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 12.169308901753922\u00b0 and Dec = -72.10009741585361\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 9.12793022294305\u00b0 and longitude = -97.48724567500066\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=12.169308901753922*u.degree, dec=-72.10009741585361*u.degree, frame='icrs')\nlocation = EarthLocation(lat=9.12793022294305*u.deg, lon=-97.48724567500066*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "0d47m28.46447188s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 168.85458112730177\u00b0 and Dec = -18.924522706357507\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -83.62205608730827\u00b0 and longitude = 121.21551036562335\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=168.85458112730177*u.degree, dec=-18.924522706357507*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-83.62205608730827*u.deg, lon=121.21551036562335*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "22d07m36.68562874s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 231.0639011663902\u00b0 and Dec = 75.39702620134165\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 63.42443784249875\u00b0 and longitude = -73.81125862234444\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=231.0639011663902*u.degree, dec=75.39702620134165*u.degree, frame='icrs')\nlocation = EarthLocation(lat=63.42443784249875*u.deg, lon=-73.81125862234444*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "71d41m33.97100883s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 146.6948973373089\u00b0 and Dec = 66.06282992182858\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -75.66022918107778\u00b0 and longitude = -150.38353377761632\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=146.6948973373089*u.degree, dec=66.06282992182858*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-75.66022918107778*u.deg, lon=-150.38353377761632*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-54d58m34.3517638s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 262.34371077057176\u00b0 and Dec = 30.717050879492916\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 55.86524830098347\u00b0 and longitude = -57.39426371256525\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=262.34371077057176*u.degree, dec=30.717050879492916*u.degree, frame='icrs')\nlocation = EarthLocation(lat=55.86524830098347*u.deg, lon=-57.39426371256525*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "58d08m21.78349938s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 275.38237192512577\u00b0 and Dec = 7.077407617988968\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 64.60973335963777\u00b0 and longitude = -168.77621414217916\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=275.38237192512577*u.degree, dec=7.077407617988968*u.degree, frame='icrs')\nlocation = EarthLocation(lat=64.60973335963777*u.deg, lon=-168.77621414217916*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "3d33m45.65031887s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 69.22853524050905\u00b0 and Dec = 50.040931433156345\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -54.29890789447712\u00b0 and longitude = 25.82728849276316\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=69.22853524050905*u.degree, dec=50.040931433156345*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-54.29890789447712*u.deg, lon=25.82728849276316*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-69d07m58.83881116s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 338.268040937406\u00b0 and Dec = 74.4697170129584\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 73.50050534941465\u00b0 and longitude = 102.74608877476493\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=338.268040937406*u.degree, dec=74.4697170129584*u.degree, frame='icrs')\nlocation = EarthLocation(lat=73.50050534941465*u.deg, lon=102.74608877476493*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "63d37m46.9037005s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 100.5654576501608\u00b0 and Dec = 21.297621682729968\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -32.58679705397479\u00b0 and longitude = 54.61735466059986\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=100.5654576501608*u.degree, dec=21.297621682729968*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-32.58679705397479*u.deg, lon=54.61735466059986*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "12d23m39.23072661s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 44.45532318100482\u00b0 and Dec = 29.200906449074125\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 1.2191628410481599\u00b0 and longitude = -78.2988229713388\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=44.45532318100482*u.degree, dec=29.200906449074125*u.degree, frame='icrs')\nlocation = EarthLocation(lat=1.2191628410481599*u.deg, lon=-78.2988229713388*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-36d52m03.9122087s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 34.072505381940125\u00b0 and Dec = -30.41493294206431\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -3.122129108421049\u00b0 and longitude = 19.77427669626104\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=34.072505381940125*u.degree, dec=-30.41493294206431*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-3.122129108421049*u.deg, lon=19.77427669626104*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-47d37m52.58042746s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 282.6168324850349\u00b0 and Dec = -60.26009741331089\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -50.6350952985209\u00b0 and longitude = -70.97631127780828\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=282.6168324850349*u.degree, dec=-60.26009741331089*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-50.6350952985209*u.deg, lon=-70.97631127780828*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "39d25m19.93385486s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 331.18846405513443\u00b0 and Dec = -28.620765900821233\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 74.67431306164755\u00b0 and longitude = 19.797368630825076\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=331.18846405513443*u.degree, dec=-28.620765900821233*u.degree, frame='icrs')\nlocation = EarthLocation(lat=74.67431306164755*u.deg, lon=19.797368630825076*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-15d48m44.05144293s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 119.5839999378187\u00b0 and Dec = 26.771280556435386\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -33.5354677593568\u00b0 and longitude = -8.554017515843611\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=119.5839999378187*u.degree, dec=26.771280556435386*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-33.5354677593568*u.deg, lon=-8.554017515843611*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-56d21m55.99800382s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 321.31560599362757\u00b0 and Dec = 6.004223997055476\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -17.583449801285624\u00b0 and longitude = -162.99698395831035\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=321.31560599362757*u.degree, dec=6.004223997055476*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-17.583449801285624*u.deg, lon=-162.99698395831035*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "41d39m16.53583912s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 103.35448963518031\u00b0 and Dec = -10.200212903819903\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 19.24650178275165\u00b0 and longitude = -48.73607700085364\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=103.35448963518031*u.degree, dec=-10.200212903819903*u.degree, frame='icrs')\nlocation = EarthLocation(lat=19.24650178275165*u.deg, lon=-48.73607700085364*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-72d35m33.03681063s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 229.70958846403917\u00b0 and Dec = -31.00829821317396\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 43.802079574697245\u00b0 and longitude = 152.54859570729388\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=229.70958846403917*u.degree, dec=-31.00829821317396*u.degree, frame='icrs')\nlocation = EarthLocation(lat=43.802079574697245*u.deg, lon=152.54859570729388*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-77d17m35.35628234s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 46.84523543335882\u00b0 and Dec = 8.891028647647232\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 37.79097694700033\u00b0 and longitude = 113.79396247559413\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=46.84523543335882*u.degree, dec=8.891028647647232*u.degree, frame='icrs')\nlocation = EarthLocation(lat=37.79097694700033*u.deg, lon=113.79396247559413*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "33d21m43.78200909s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 170.92554748215724\u00b0 and Dec = -43.71969820596478\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -36.93658742877715\u00b0 and longitude = 17.107387770518812\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=170.92554748215724*u.degree, dec=-43.71969820596478*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-36.93658742877715*u.deg, lon=17.107387770518812*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "16d23m32.73395188s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 232.87350196226774\u00b0 and Dec = -59.68245541347545\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 57.49502445776187\u00b0 and longitude = 125.22578256493517\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=232.87350196226774*u.degree, dec=-59.68245541347545*u.degree, frame='icrs')\nlocation = EarthLocation(lat=57.49502445776187*u.deg, lon=125.22578256493517*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-60d22m34.14679765s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 49.91511114082225\u00b0 and Dec = -28.720734852632866\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 33.536400850635644\u00b0 and longitude = -103.99667493865608\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=49.91511114082225*u.degree, dec=-28.720734852632866*u.degree, frame='icrs')\nlocation = EarthLocation(lat=33.536400850635644*u.deg, lon=-103.99667493865608*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-78d07m37.40159189s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 53.5156043244918\u00b0 and Dec = -83.54188052987638\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -59.23204738547951\u00b0 and longitude = -7.232786812533703\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=53.5156043244918*u.degree, dec=-83.54188052987638*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-59.23204738547951*u.deg, lon=-7.232786812533703*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "52d56m26.77449167s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 89.4027706186628\u00b0 and Dec = 76.19627668024094\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -72.58336967897407\u00b0 and longitude = -147.6223173302159\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=89.4027706186628*u.degree, dec=76.19627668024094*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-72.58336967897407*u.deg, lon=-147.6223173302159*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-71d45m54.46041141s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 143.09290842880932\u00b0 and Dec = -65.97722202707092\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -1.8758048360077169\u00b0 and longitude = -115.90596116469104\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=143.09290842880932*u.degree, dec=-65.97722202707092*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-1.8758048360077169*u.deg, lon=-115.90596116469104*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "25d47m17.13450274s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 247.2292697983546\u00b0 and Dec = -2.2368292162812935\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 79.42770423121016\u00b0 and longitude = -178.88113386869077\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=247.2292697983546*u.degree, dec=-2.2368292162812935*u.degree, frame='icrs')\nlocation = EarthLocation(lat=79.42770423121016*u.deg, lon=-178.88113386869077*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-0d21m16.55456617s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 93.3636825419295\u00b0 and Dec = -35.87166120378263\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -65.40732324693175\u00b0 and longitude = -126.14658896462178\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=93.3636825419295*u.degree, dec=-35.87166120378263*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-65.40732324693175*u.deg, lon=-126.14658896462178*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "18d57m33.38600511s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 256.3067790768831\u00b0 and Dec = -9.494409323952993\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -76.55626746226073\u00b0 and longitude = -68.05499090611703\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=256.3067790768831*u.degree, dec=-9.494409323952993*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-76.55626746226073*u.deg, lon=-68.05499090611703*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "21d49m50.98904673s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 56.82687728468683\u00b0 and Dec = 48.071430459789696\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -15.198721483349615\u00b0 and longitude = -61.90595229297563\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=56.82687728468683*u.degree, dec=48.071430459789696*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-15.198721483349615*u.deg, lon=-61.90595229297563*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-42d35m02.3048528s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 283.958364869269\u00b0 and Dec = -44.47009866989544\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -64.71712417682113\u00b0 and longitude = -123.63180566784666\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=283.958364869269*u.degree, dec=-44.47009866989544*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-64.71712417682113*u.deg, lon=-123.63180566784666*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "28d56m51.99147429s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 342.9428422517545\u00b0 and Dec = -1.7243411584775856\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 27.221431551057066\u00b0 and longitude = 4.981520275003703\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=342.9428422517545*u.degree, dec=-1.7243411584775856*u.degree, frame='icrs')\nlocation = EarthLocation(lat=27.221431551057066*u.deg, lon=4.981520275003703*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "60d01m57.39218205s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 162.36253867967235\u00b0 and Dec = 87.90980900453349\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 88.52860936833966\u00b0 and longitude = -4.401824577976271\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=162.36253867967235*u.degree, dec=87.90980900453349*u.degree, frame='icrs')\nlocation = EarthLocation(lat=88.52860936833966*u.deg, lon=-4.401824577976271*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "86d18m49.34825954s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 276.73567987239215\u00b0 and Dec = 57.575894679679635\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -69.91721433131708\u00b0 and longitude = -98.03367596159697\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=276.73567987239215*u.degree, dec=57.575894679679635*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-69.91721433131708*u.deg, lon=-98.03367596159697*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-39d05m29.51876138s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 25.269969995074018\u00b0 and Dec = 32.46843573035093\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -66.02142627723552\u00b0 and longitude = -81.6661277788069\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=25.269969995074018*u.degree, dec=32.46843573035093*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-66.02142627723552*u.deg, lon=-81.6661277788069*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-18d43m22.41394884s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 193.60984818082846\u00b0 and Dec = -26.37587807425983\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -31.628966742140904\u00b0 and longitude = 176.81549879792783\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=193.60984818082846*u.degree, dec=-26.37587807425983*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-31.628966742140904*u.deg, lon=176.81549879792783*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "63d56m42.26166968s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 352.67345230827885\u00b0 and Dec = -1.721469536396043\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -16.818740337279408\u00b0 and longitude = 140.89619721482967\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=352.67345230827885*u.degree, dec=-1.721469536396043*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-16.818740337279408*u.deg, lon=140.89619721482967*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "42d46m57.76667182s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 285.2990143340249\u00b0 and Dec = -31.382771166155067\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 12.499693666067571\u00b0 and longitude = 166.05260115374756\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=285.2990143340249*u.degree, dec=-31.382771166155067*u.degree, frame='icrs')\nlocation = EarthLocation(lat=12.499693666067571*u.deg, lon=166.05260115374756*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-42d47m43.80876751s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 46.73614978473908\u00b0 and Dec = 17.465455322659324\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 24.715640713351775\u00b0 and longitude = -99.07926880783084\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=46.73614978473908*u.degree, dec=17.465455322659324*u.degree, frame='icrs')\nlocation = EarthLocation(lat=24.715640713351775*u.deg, lon=-99.07926880783084*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-43d10m47.70216068s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 7.530954465731341\u00b0 and Dec = -57.10400985512178\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -42.43595245402431\u00b0 and longitude = -145.65516609920974\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=7.530954465731341*u.degree, dec=-57.10400985512178*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-42.43595245402431*u.deg, lon=-145.65516609920974*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "73d00m30.17104471s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 170.5199843003695\u00b0 and Dec = 55.03307963624724\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -26.68725485398673\u00b0 and longitude = 21.80705942215758\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=170.5199843003695*u.degree, dec=55.03307963624724*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-26.68725485398673*u.deg, lon=21.80705942215758*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-58d56m38.27530319s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 79.26413840279835\u00b0 and Dec = 34.1900245157929\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -88.11682171916918\u00b0 and longitude = 57.575392795793704\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=79.26413840279835*u.degree, dec=34.1900245157929*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-88.11682171916918*u.deg, lon=57.575392795793704*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-35d45m17.00592055s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 6.868034192910932\u00b0 and Dec = 84.57473016348843\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 62.7554102326518\u00b0 and longitude = -104.8577966549756\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=6.868034192910932*u.degree, dec=84.57473016348843*u.degree, frame='icrs')\nlocation = EarthLocation(lat=62.7554102326518*u.deg, lon=-104.8577966549756*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "58d16m04.2543901s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 86.03386709959344\u00b0 and Dec = 76.69189981770887\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -47.38414878327243\u00b0 and longitude = -151.5286477108641\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=86.03386709959344*u.degree, dec=76.69189981770887*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-47.38414878327243*u.deg, lon=-151.5286477108641*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-34d40m45.1688791s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 236.3677400328588\u00b0 and Dec = 88.72505367213927\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 76.76998867239004\u00b0 and longitude = -115.17740567390997\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=236.3677400328588*u.degree, dec=88.72505367213927*u.degree, frame='icrs')\nlocation = EarthLocation(lat=76.76998867239004*u.deg, lon=-115.17740567390997*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "76d42m39.89400512s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 328.9170990760324\u00b0 and Dec = -26.842329053144958\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -43.460486850191806\u00b0 and longitude = -166.00720980524557\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=328.9170990760324*u.degree, dec=-26.842329053144958*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-43.460486850191806*u.deg, lon=-166.00720980524557*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-14d04m23.1119872s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 207.55959894755284\u00b0 and Dec = -13.684482980059272\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -81.61030634221738\u00b0 and longitude = 136.18951450429535\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=207.55959894755284*u.degree, dec=-13.684482980059272*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-81.61030634221738*u.deg, lon=136.18951450429535*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "12d50m03.04530136s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 19.886679526791376\u00b0 and Dec = -0.5289141756205282\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 0.5679654968306238\u00b0 and longitude = -100.00379103994202\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=19.886679526791376*u.degree, dec=-0.5289141756205282*u.degree, frame='icrs')\nlocation = EarthLocation(lat=0.5679654968306238*u.deg, lon=-100.00379103994202*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-42d24m53.01027768s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 115.67253384181103\u00b0 and Dec = -23.820306703097756\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 10.444576559484844\u00b0 and longitude = -136.67816913609244\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=115.67253384181103*u.degree, dec=-23.820306703097756*u.degree, frame='icrs')\nlocation = EarthLocation(lat=10.444576559484844*u.deg, lon=-136.67816913609244*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "55d20m42.51543752s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 228.09527400331336\u00b0 and Dec = -34.15051578492539\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 76.09365097315205\u00b0 and longitude = -68.58070439995153\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=228.09527400331336*u.degree, dec=-34.15051578492539*u.degree, frame='icrs')\nlocation = EarthLocation(lat=76.09365097315205*u.deg, lon=-68.58070439995153*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-24d51m46.33499302s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 263.74777235648617\u00b0 and Dec = 37.69209000487588\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -62.725389411586406\u00b0 and longitude = -128.0321769595174\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=263.74777235648617*u.degree, dec=37.69209000487588*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-62.725389411586406*u.deg, lon=-128.0321769595174*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-53d14m22.70338337s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 194.5861083936092\u00b0 and Dec = -48.41246060974108\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 82.7107127734121\u00b0 and longitude = -20.510330027173012\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=194.5861083936092*u.degree, dec=-48.41246060974108*u.degree, frame='icrs')\nlocation = EarthLocation(lat=82.7107127734121*u.deg, lon=-20.510330027173012*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-43d24m59.96393188s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 41.0355995128863\u00b0 and Dec = -22.313258916531424\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 18.397401306288117\u00b0 and longitude = -168.72073927013503\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=41.0355995128863*u.degree, dec=-22.313258916531424*u.degree, frame='icrs')\nlocation = EarthLocation(lat=18.397401306288117*u.deg, lon=-168.72073927013503*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "28d17m50.12421677s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 237.7326213934326\u00b0 and Dec = -61.85368312621235\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 25.382415983540653\u00b0 and longitude = 31.583457422386402\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=237.7326213934326*u.degree, dec=-61.85368312621235*u.degree, frame='icrs')\nlocation = EarthLocation(lat=25.382415983540653*u.deg, lon=31.583457422386402*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-45d10m22.43594618s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 304.5797549912003\u00b0 and Dec = -23.943044365534504\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 61.4645210301708\u00b0 and longitude = -32.1650457898904\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=304.5797549912003*u.degree, dec=-23.943044365534504*u.degree, frame='icrs')\nlocation = EarthLocation(lat=61.4645210301708*u.deg, lon=-32.1650457898904*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "4d18m23.81119129s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 208.8541776764561\u00b0 and Dec = 68.57704507056633\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 30.604140057118414\u00b0 and longitude = -160.32325844114004\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=208.8541776764561*u.degree, dec=68.57704507056633*u.degree, frame='icrs')\nlocation = EarthLocation(lat=30.604140057118414*u.deg, lon=-160.32325844114004*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "20d52m40.60291136s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 276.5521459391448\u00b0 and Dec = -21.618095761736953\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 68.29199340892112\u00b0 and longitude = -123.09944189719205\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=276.5521459391448*u.degree, dec=-21.618095761736953*u.degree, frame='icrs')\nlocation = EarthLocation(lat=68.29199340892112*u.deg, lon=-123.09944189719205*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-7d33m08.81825881s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 246.1205918100323\u00b0 and Dec = -57.190243562083865\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 85.02202792864233\u00b0 and longitude = 47.45301206454985\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=246.1205918100323*u.degree, dec=-57.190243562083865*u.degree, frame='icrs')\nlocation = EarthLocation(lat=85.02202792864233*u.deg, lon=47.45301206454985*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-61d20m35.32345698s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 285.55892685175496\u00b0 and Dec = -43.34099524123972\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 81.09369974778181\u00b0 and longitude = -168.93933951434835\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=285.55892685175496*u.degree, dec=-43.34099524123972*u.degree, frame='icrs')\nlocation = EarthLocation(lat=81.09369974778181*u.deg, lon=-168.93933951434835*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-45d18m19.72228577s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 248.47166821092068\u00b0 and Dec = -52.11378367312451\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 44.41234494254297\u00b0 and longitude = -137.30660148677183\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=248.47166821092068*u.degree, dec=-52.11378367312451*u.degree, frame='icrs')\nlocation = EarthLocation(lat=44.41234494254297*u.deg, lon=-137.30660148677183*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-63d18m58.521336s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 116.38869773032125\u00b0 and Dec = 87.40757006159731\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 81.98421510911453\u00b0 and longitude = -77.15599044976275\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=116.38869773032125*u.degree, dec=87.40757006159731*u.degree, frame='icrs')\nlocation = EarthLocation(lat=81.98421510911453*u.deg, lon=-77.15599044976275*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "82d52m29.1000189s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 353.36149209627524\u00b0 and Dec = 87.88989293891626\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 64.10507803893898\u00b0 and longitude = -44.487260014762285\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=353.36149209627524*u.degree, dec=87.88989293891626*u.degree, frame='icrs')\nlocation = EarthLocation(lat=64.10507803893898*u.deg, lon=-44.487260014762285*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "65d20m03.79002323s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 128.40622438769324\u00b0 and Dec = 0.5253813732591084\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 34.90342157186761\u00b0 and longitude = 36.54068269569311\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=128.40622438769324*u.degree, dec=0.5253813732591084*u.degree, frame='icrs')\nlocation = EarthLocation(lat=34.90342157186761*u.deg, lon=36.54068269569311*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-12d17m09.26999465s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 40.92629803584957\u00b0 and Dec = 30.075260903685802\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 29.890626008345393\u00b0 and longitude = -134.52925459717724\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=40.92629803584957*u.degree, dec=30.075260903685802*u.degree, frame='icrs')\nlocation = EarthLocation(lat=29.890626008345393*u.deg, lon=-134.52925459717724*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-29d26m58.97968866s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 261.9047447084106\u00b0 and Dec = 72.74804256573174\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -60.24859802937026\u00b0 and longitude = -139.49250632807824\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=261.9047447084106*u.degree, dec=72.74804256573174*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-60.24859802937026*u.deg, lon=-139.49250632807824*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-47d51m16.35625956s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 52.502637499973076\u00b0 and Dec = 55.49925861318826\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -70.6832689123632\u00b0 and longitude = -101.79410579877398\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=52.502637499973076*u.degree, dec=55.49925861318826*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-70.6832689123632*u.deg, lon=-101.79410579877398*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-73d52m11.0765101s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 75.7458400296349\u00b0 and Dec = 55.416319501092346\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 0.06485665547327812\u00b0 and longitude = 57.47103418016823\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=75.7458400296349*u.degree, dec=55.416319501092346*u.degree, frame='icrs')\nlocation = EarthLocation(lat=0.06485665547327812*u.deg, lon=57.47103418016823*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-17d02m23.99242245s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 336.4502853929195\u00b0 and Dec = -24.286911880695982\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 34.36065107621097\u00b0 and longitude = -128.75164636277273\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=336.4502853929195*u.degree, dec=-24.286911880695982*u.degree, frame='icrs')\nlocation = EarthLocation(lat=34.36065107621097*u.deg, lon=-128.75164636277273*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-35d34m24.09475099s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 338.85912840180515\u00b0 and Dec = 21.759673259889396\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 8.740901382219604\u00b0 and longitude = -171.62268759407624\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=338.85912840180515*u.degree, dec=21.759673259889396*u.degree, frame='icrs')\nlocation = EarthLocation(lat=8.740901382219604*u.deg, lon=-171.62268759407624*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "69d22m41.44760545s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 311.01041756840795\u00b0 and Dec = 73.78858269754045\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 46.98412154824857\u00b0 and longitude = -82.01907754096061\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=311.01041756840795*u.degree, dec=73.78858269754045*u.degree, frame='icrs')\nlocation = EarthLocation(lat=46.98412154824857*u.deg, lon=-82.01907754096061*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "34d45m25.87164163s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 194.76843870013101\u00b0 and Dec = -84.23512190723505\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 73.13342762166076\u00b0 and longitude = 176.473344330651\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=194.76843870013101*u.degree, dec=-84.23512190723505*u.degree, frame='icrs')\nlocation = EarthLocation(lat=73.13342762166076*u.deg, lon=176.473344330651*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-68d07m07.27626399s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 359.4325607610709\u00b0 and Dec = 48.72116425542319\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 64.01011920105304\u00b0 and longitude = 16.305291253741018\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=359.4325607610709*u.degree, dec=48.72116425542319*u.degree, frame='icrs')\nlocation = EarthLocation(lat=64.01011920105304*u.deg, lon=16.305291253741018*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "74d39m41.67802219s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 256.26107034921966\u00b0 and Dec = 74.30082955208388\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -4.365730812688739\u00b0 and longitude = 63.86652109740149\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=256.26107034921966*u.degree, dec=74.30082955208388*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-4.365730812688739*u.deg, lon=63.86652109740149*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-18d30m04.96618815s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 205.28138047067858\u00b0 and Dec = 76.88233891779399\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -22.178196369733186\u00b0 and longitude = -124.28201522108436\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=205.28138047067858*u.degree, dec=76.88233891779399*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-22.178196369733186*u.deg, lon=-124.28201522108436*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-17d35m29.17995932s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 45.12668211504496\u00b0 and Dec = -44.922536285985565\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 51.53685821065673\u00b0 and longitude = 6.075795430543195\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=45.12668211504496*u.degree, dec=-44.922536285985565*u.degree, frame='icrs')\nlocation = EarthLocation(lat=51.53685821065673*u.deg, lon=6.075795430543195*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-16d05m39.55532196s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 250.92325927861486\u00b0 and Dec = 29.292243097138567\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 50.16918913023895\u00b0 and longitude = 116.31757871582693\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=250.92325927861486*u.degree, dec=29.292243097138567*u.degree, frame='icrs')\nlocation = EarthLocation(lat=50.16918913023895*u.deg, lon=116.31757871582693*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-5d22m40.81590996s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 305.1091415262365\u00b0 and Dec = -25.703778370216057\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 45.89005899712217\u00b0 and longitude = 46.22151125565185\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=305.1091415262365*u.degree, dec=-25.703778370216057*u.degree, frame='icrs')\nlocation = EarthLocation(lat=45.89005899712217*u.deg, lon=46.22151125565185*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "18d27m49.33559998s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 142.09294364862586\u00b0 and Dec = 24.198693507602272\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 18.105475484571343\u00b0 and longitude = 140.19834190927781\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=142.09294364862586*u.degree, dec=24.198693507602272*u.degree, frame='icrs')\nlocation = EarthLocation(lat=18.105475484571343*u.deg, lon=140.19834190927781*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "75d15m49.46163504s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 38.32632585811825\u00b0 and Dec = 84.03559792448627\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -46.940489966279046\u00b0 and longitude = 143.61806559816137\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=38.32632585811825*u.degree, dec=84.03559792448627*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-46.940489966279046*u.deg, lon=143.61806559816137*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-46d43m15.09428008s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 350.3872484968355\u00b0 and Dec = -0.17643749102236939\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -54.853564697493844\u00b0 and longitude = -80.66322120896601\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=350.3872484968355*u.degree, dec=-0.17643749102236939*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-54.853564697493844*u.deg, lon=-80.66322120896601*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-3d22m35.32059787s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 50.491824917068655\u00b0 and Dec = 50.828465452150226\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -75.62076507867627\u00b0 and longitude = -160.33676045389248\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=50.491824917068655*u.degree, dec=50.828465452150226*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-75.62076507867627*u.deg, lon=-160.33676045389248*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-39d43m40.65820212s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 178.21664250454458\u00b0 and Dec = 0.05188805606718461\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -85.21471999728163\u00b0 and longitude = 25.46052137807476\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=178.21664250454458*u.degree, dec=0.05188805606718461*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-85.21471999728163*u.deg, lon=25.46052137807476*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "4d42m53.368311s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 176.52647297022068\u00b0 and Dec = -9.547183217499764\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 8.482116444337308\u00b0 and longitude = -154.77991095119248\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=176.52647297022068*u.degree, dec=-9.547183217499764*u.degree, frame='icrs')\nlocation = EarthLocation(lat=8.482116444337308*u.deg, lon=-154.77991095119248*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "66d21m40.40390911s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 294.3369304789678\u00b0 and Dec = -72.22290483472861\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 7.240566662589515\u00b0 and longitude = 17.038204244224033\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=294.3369304789678*u.degree, dec=-72.22290483472861*u.degree, frame='icrs')\nlocation = EarthLocation(lat=7.240566662589515*u.deg, lon=17.038204244224033*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-0d51m56.49862149s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 172.72827841863878\u00b0 and Dec = 85.91795430888743\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 16.904733587241935\u00b0 and longitude = 99.07380527581961\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=172.72827841863878*u.degree, dec=85.91795430888743*u.degree, frame='icrs')\nlocation = EarthLocation(lat=16.904733587241935*u.deg, lon=99.07380527581961*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "16d37m34.33377209s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 190.8158018815184\u00b0 and Dec = -11.46039225261677\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -34.20262677206333\u00b0 and longitude = -116.87448249357641\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=190.8158018815184*u.degree, dec=-11.46039225261677*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-34.20262677206333*u.deg, lon=-116.87448249357641*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "48d05m39.81322246s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 357.8103522104534\u00b0 and Dec = 81.36372345960268\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -51.777308668161965\u00b0 and longitude = -153.50264612648385\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=357.8103522104534*u.degree, dec=81.36372345960268*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-51.777308668161965*u.deg, lon=-153.50264612648385*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-43d32m24.57862181s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 205.05561762732623\u00b0 and Dec = -69.21526590570032\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -1.92564048161276\u00b0 and longitude = -113.69962978534265\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=205.05561762732623*u.degree, dec=-69.21526590570032*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-1.92564048161276*u.deg, lon=-113.69962978534265*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "11d28m26.04927605s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 8.68115177082922\u00b0 and Dec = 19.208416579488045\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 52.5601725710836\u00b0 and longitude = -8.929547885812298\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=8.68115177082922*u.degree, dec=19.208416579488045*u.degree, frame='icrs')\nlocation = EarthLocation(lat=52.5601725710836*u.deg, lon=-8.929547885812298*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "49d22m37.4118641s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 1.1332354212670692\u00b0 and Dec = 32.75490185568228\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -22.933925532510372\u00b0 and longitude = -175.67873500882675\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=1.1332354212670692*u.degree, dec=32.75490185568228*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-22.933925532510372*u.deg, lon=-175.67873500882675*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-4d45m16.46872014s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 191.2434411311884\u00b0 and Dec = -4.3759665837262816\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 36.93354662597987\u00b0 and longitude = -48.614798352809515\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=191.2434411311884*u.degree, dec=-4.3759665837262816*u.degree, frame='icrs')\nlocation = EarthLocation(lat=36.93354662597987*u.deg, lon=-48.614798352809515*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-16d45m58.15776183s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 241.6536262922401\u00b0 and Dec = -22.880074634406128\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 39.08150398984202\u00b0 and longitude = 176.34764136869586\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=241.6536262922401*u.degree, dec=-22.880074634406128*u.degree, frame='icrs')\nlocation = EarthLocation(lat=39.08150398984202*u.deg, lon=176.34764136869586*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-5d29m03.46302137s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 56.46974699356959\u00b0 and Dec = 61.827015133065885\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 43.62141153097676\u00b0 and longitude = 67.83691842947036\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=56.46974699356959*u.degree, dec=61.827015133065885*u.degree, frame='icrs')\nlocation = EarthLocation(lat=43.62141153097676*u.deg, lon=67.83691842947036*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "71d40m19.02730492s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 336.11560721143996\u00b0 and Dec = 13.865259491324693\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 60.02174024491984\u00b0 and longitude = 158.97544941955317\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=336.11560721143996*u.degree, dec=13.865259491324693*u.degree, frame='icrs')\nlocation = EarthLocation(lat=60.02174024491984*u.deg, lon=158.97544941955317*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "43d21m54.72533527s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 289.1704076871692\u00b0 and Dec = -35.10467741413602\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -28.223441291487532\u00b0 and longitude = -112.59562440433007\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=289.1704076871692*u.degree, dec=-35.10467741413602*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-28.223441291487532*u.deg, lon=-112.59562440433007*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-8d14m35.51769695s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 326.59713029401837\u00b0 and Dec = 73.6108370351746\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 64.8401401173247\u00b0 and longitude = 95.66521444902611\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=326.59713029401837*u.degree, dec=73.6108370351746*u.degree, frame='icrs')\nlocation = EarthLocation(lat=64.8401401173247*u.deg, lon=95.66521444902611*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "54d46m54.8551408s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 236.88435576699385\u00b0 and Dec = -63.60228096665379\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 8.598412526183978\u00b0 and longitude = 161.12995241054637\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=236.88435576699385*u.degree, dec=-63.60228096665379*u.degree, frame='icrs')\nlocation = EarthLocation(lat=8.598412526183978*u.deg, lon=161.12995241054637*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-7d28m01.36463474s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 137.4543179198953\u00b0 and Dec = -67.06187500908872\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 44.417396006308394\u00b0 and longitude = -64.613955833574\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=137.4543179198953*u.degree, dec=-67.06187500908872*u.degree, frame='icrs')\nlocation = EarthLocation(lat=44.417396006308394*u.deg, lon=-64.613955833574*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-60d54m54.32787571s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 51.17682139997533\u00b0 and Dec = 7.826283682039616\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 89.52353350815577\u00b0 and longitude = 126.36214930653694\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=51.17682139997533*u.degree, dec=7.826283682039616*u.degree, frame='icrs')\nlocation = EarthLocation(lat=89.52353350815577*u.deg, lon=126.36214930653694*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "7d41m19.52935957s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 302.7667706601169\u00b0 and Dec = 23.64440823025562\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 49.17282682574714\u00b0 and longitude = -141.8790390409256\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=302.7667706601169*u.degree, dec=23.64440823025562*u.degree, frame='icrs')\nlocation = EarthLocation(lat=49.17282682574714*u.deg, lon=-141.8790390409256*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "12d42m32.00761646s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 322.8325971144625\u00b0 and Dec = 10.503270893867438\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 49.46852332918448\u00b0 and longitude = -133.6172572460342\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=322.8325971144625*u.degree, dec=10.503270893867438*u.degree, frame='icrs')\nlocation = EarthLocation(lat=49.46852332918448*u.deg, lon=-133.6172572460342*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-3d52m32.77888771s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 170.67876245674793\u00b0 and Dec = 8.717300957224353\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -52.128905195500494\u00b0 and longitude = 29.30266744264364\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=170.67876245674793*u.degree, dec=8.717300957224353*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-52.128905195500494*u.deg, lon=29.30266744264364*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-41d52m22.44583528s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 126.28594590493117\u00b0 and Dec = -45.59547124133685\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 16.89797011785366\u00b0 and longitude = 4.089548326016796\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=126.28594590493117*u.degree, dec=-45.59547124133685*u.degree, frame='icrs')\nlocation = EarthLocation(lat=16.89797011785366*u.deg, lon=4.089548326016796*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-43d16m28.13529357s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 102.52407597174461\u00b0 and Dec = -36.88506287084938\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -13.184348850942627\u00b0 and longitude = 21.214271219209024\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=102.52407597174461*u.degree, dec=-36.88506287084938*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-13.184348850942627*u.deg, lon=21.214271219209024*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-39d46m09.54202877s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 14.828391424669775\u00b0 and Dec = 44.502452839541206\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 34.06482877268877\u00b0 and longitude = -52.13883885497549\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=14.828391424669775*u.degree, dec=44.502452839541206*u.degree, frame='icrs')\nlocation = EarthLocation(lat=34.06482877268877*u.deg, lon=-52.13883885497549*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-10d45m29.00195647s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 53.833536016219526\u00b0 and Dec = -13.949866678422168\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -83.00687742393032\u00b0 and longitude = 147.35392488246123\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=53.833536016219526*u.degree, dec=-13.949866678422168*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-83.00687742393032*u.deg, lon=147.35392488246123*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "20d46m01.29153872s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 287.3380029873714\u00b0 and Dec = 54.59256537302659\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -39.61393817584357\u00b0 and longitude = -3.377148820742377\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=287.3380029873714*u.degree, dec=54.59256537302659*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-39.61393817584357*u.deg, lon=-3.377148820742377*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-8d28m14.64510262s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 203.14382719091057\u00b0 and Dec = 55.16470088428633\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -55.4728640343062\u00b0 and longitude = -30.471518448706973\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=203.14382719091057*u.degree, dec=55.16470088428633*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-55.4728640343062*u.deg, lon=-30.471518448706973*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-53d48m27.39790843s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 157.0085417564374\u00b0 and Dec = -15.281026557704763\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -89.34316963632992\u00b0 and longitude = 139.91827472403327\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=157.0085417564374*u.degree, dec=-15.281026557704763*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-89.34316963632992*u.deg, lon=139.91827472403327*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "14d49m48.24591002s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 332.88884746555675\u00b0 and Dec = -87.97961333562021\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -55.995957966122816\u00b0 and longitude = 27.764073895706133\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=332.88884746555675*u.degree, dec=-87.97961333562021*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-55.995957966122816*u.deg, lon=27.764073895706133*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "57d20m33.31872762s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 21.26873223853125\u00b0 and Dec = -2.4862480714109694\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -38.81393125975009\u00b0 and longitude = -141.78745455306708\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=21.26873223853125*u.degree, dec=-2.4862480714109694*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-38.81393125975009*u.deg, lon=-141.78745455306708*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-48d42m10.67883866s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 303.7320555662322\u00b0 and Dec = -77.39841647106425\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 44.60817435346027\u00b0 and longitude = -126.57400493547163\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=303.7320555662322*u.degree, dec=-77.39841647106425*u.degree, frame='icrs')\nlocation = EarthLocation(lat=44.60817435346027*u.deg, lon=-126.57400493547163*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-41d50m16.03974374s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 139.26450834145157\u00b0 and Dec = -16.718883755701057\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 4.367365973592598\u00b0 and longitude = 65.96863333692482\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=139.26450834145157*u.degree, dec=-16.718883755701057*u.degree, frame='icrs')\nlocation = EarthLocation(lat=4.367365973592598*u.deg, lon=65.96863333692482*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-4d49m24.18655269s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 341.98761536097686\u00b0 and Dec = 9.74664033710836\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 55.71202222017163\u00b0 and longitude = 148.13892371890864\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=341.98761536097686*u.degree, dec=9.74664033710836*u.degree, frame='icrs')\nlocation = EarthLocation(lat=55.71202222017163*u.deg, lon=148.13892371890864*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "22d58m10.8654758s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 54.595295475672515\u00b0 and Dec = -7.710632582117086\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 13.407067538261245\u00b0 and longitude = -16.11711256563072\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=54.595295475672515*u.degree, dec=-7.710632582117086*u.degree, frame='icrs')\nlocation = EarthLocation(lat=13.407067538261245*u.deg, lon=-16.11711256563072*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "4d45m51.02894239s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 5.14970041688581\u00b0 and Dec = 86.28269974166238\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 55.86811563323414\u00b0 and longitude = 4.329604663382582\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=5.14970041688581*u.degree, dec=86.28269974166238*u.degree, frame='icrs')\nlocation = EarthLocation(lat=55.86811563323414*u.deg, lon=4.329604663382582*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "59d19m46.93464336s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 229.4838776911895\u00b0 and Dec = -78.22136621897748\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 77.77971914355771\u00b0 and longitude = 84.87745300180131\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=229.4838776911895*u.degree, dec=-78.22136621897748*u.degree, frame='icrs')\nlocation = EarthLocation(lat=77.77971914355771*u.deg, lon=84.87745300180131*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-66d32m01.2281383s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 348.82723120124245\u00b0 and Dec = 70.95469836467325\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 57.129757418652304\u00b0 and longitude = 39.05688347608799\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=348.82723120124245*u.degree, dec=70.95469836467325*u.degree, frame='icrs')\nlocation = EarthLocation(lat=57.129757418652304*u.deg, lon=39.05688347608799*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "40d53m07.43771696s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 263.35486161079547\u00b0 and Dec = 13.922049917618295\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -25.70761140493603\u00b0 and longitude = 159.4726976786137\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=263.35486161079547*u.degree, dec=13.922049917618295*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-25.70761140493603*u.deg, lon=159.4726976786137*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "16d54m35.07676447s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 41.522957954326344\u00b0 and Dec = -86.71641849339683\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -34.470382194709345\u00b0 and longitude = 151.21487188682664\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=41.522957954326344*u.degree, dec=-86.71641849339683*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-34.470382194709345*u.deg, lon=151.21487188682664*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "33d57m22.48011362s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 95.24467444217984\u00b0 and Dec = 62.27801109880113\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -27.859061593114582\u00b0 and longitude = 4.198661323862638\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=95.24467444217984*u.degree, dec=62.27801109880113*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-27.859061593114582*u.deg, lon=4.198661323862638*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-31d14m29.6703208s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 183.89306361934308\u00b0 and Dec = 29.399406443220215\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 43.256966188519186\u00b0 and longitude = 53.66407723357162\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=183.89306361934308*u.degree, dec=29.399406443220215*u.degree, frame='icrs')\nlocation = EarthLocation(lat=43.256966188519186*u.deg, lon=53.66407723357162*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-10d11m57.39058437s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 251.79404237763669\u00b0 and Dec = 33.717170744232675\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 42.17699777354838\u00b0 and longitude = -75.108031267137\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=251.79404237763669*u.degree, dec=33.717170744232675*u.degree, frame='icrs')\nlocation = EarthLocation(lat=42.17699777354838*u.deg, lon=-75.108031267137*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "35d58m44.8935183s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 285.97644434788117\u00b0 and Dec = 15.79888504042573\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -44.94287695426896\u00b0 and longitude = 168.32914244041478\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=285.97644434788117*u.degree, dec=15.79888504042573*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-44.94287695426896*u.deg, lon=168.32914244041478*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-39d10m27.54853978s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 231.91343993789664\u00b0 and Dec = 63.78128899701869\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 43.713891393835695\u00b0 and longitude = -176.5059417361734\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=231.91343993789664*u.degree, dec=63.78128899701869*u.degree, frame='icrs')\nlocation = EarthLocation(lat=43.713891393835695*u.deg, lon=-176.5059417361734*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "50d54m22.31650766s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 154.9343565720347\u00b0 and Dec = -81.3944573401491\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 36.79201473269451\u00b0 and longitude = 177.0291401948889\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=154.9343565720347*u.degree, dec=-81.3944573401491*u.degree, frame='icrs')\nlocation = EarthLocation(lat=36.79201473269451*u.deg, lon=177.0291401948889*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-28d25m10.55494743s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 318.0620755708032\u00b0 and Dec = -28.445005143104403\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -21.44748586540784\u00b0 and longitude = -127.66990035594782\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=318.0620755708032*u.degree, dec=-28.445005143104403*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-21.44748586540784*u.deg, lon=-127.66990035594782*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-39d31m32.03498921s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 53.81189280120597\u00b0 and Dec = 63.14509072343415\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -2.752768110900007\u00b0 and longitude = -170.97446673296577\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=53.81189280120597*u.degree, dec=63.14509072343415*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-2.752768110900007*u.deg, lon=-170.97446673296577*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-16d08m34.68603704s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 7.132757884670822\u00b0 and Dec = -27.21279058829211\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 24.62607454101888\u00b0 and longitude = 75.6094092511664\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=7.132757884670822*u.degree, dec=-27.21279058829211*u.degree, frame='icrs')\nlocation = EarthLocation(lat=24.62607454101888*u.deg, lon=75.6094092511664*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "15d16m16.16778738s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 191.13231557688258\u00b0 and Dec = -25.895534184261308\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 59.82190505818056\u00b0 and longitude = -160.3337811685341\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=191.13231557688258*u.degree, dec=-25.895534184261308*u.degree, frame='icrs')\nlocation = EarthLocation(lat=59.82190505818056*u.deg, lon=-160.3337811685341*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "4d03m24.73372958s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 34.61208357269126\u00b0 and Dec = -19.787137443223955\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -69.0021777176979\u00b0 and longitude = -55.306478361468564\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=34.61208357269126*u.degree, dec=-19.787137443223955*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-69.0021777176979*u.deg, lon=-55.306478361468564*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "22d56m02.21597602s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 282.5267101459164\u00b0 and Dec = 69.04614706874213\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -35.91434917141531\u00b0 and longitude = -157.73349268239124\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=282.5267101459164*u.degree, dec=69.04614706874213*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-35.91434917141531*u.deg, lon=-157.73349268239124*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-56d48m13.07538463s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 278.4621229025922\u00b0 and Dec = 16.832780068096298\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -89.26134281530108\u00b0 and longitude = -83.45742668838356\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=278.4621229025922*u.degree, dec=16.832780068096298*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-89.26134281530108*u.deg, lon=-83.45742668838356*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-17d34m02.59927317s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 42.38612737114845\u00b0 and Dec = 51.066264123136165\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -33.7415779713051\u00b0 and longitude = 137.94803388317894\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=42.38612737114845*u.degree, dec=51.066264123136165*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-33.7415779713051*u.deg, lon=137.94803388317894*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-21d37m18.17727055s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 58.0341113000637\u00b0 and Dec = 60.19486731376193\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 50.662989933882244\u00b0 and longitude = -4.220971749348365\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=58.0341113000637*u.degree, dec=60.19486731376193*u.degree, frame='icrs')\nlocation = EarthLocation(lat=50.662989933882244*u.deg, lon=-4.220971749348365*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "48d24m32.63209292s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 94.59453588085601\u00b0 and Dec = 73.31451126925865\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 59.08637092407028\u00b0 and longitude = -30.73840471224193\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=94.59453588085601*u.degree, dec=73.31451126925865*u.degree, frame='icrs')\nlocation = EarthLocation(lat=59.08637092407028*u.deg, lon=-30.73840471224193*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "46d23m07.62525363s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 297.2652667026832\u00b0 and Dec = -17.072978613832987\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -27.624063981450256\u00b0 and longitude = 34.845349263499656\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=297.2652667026832*u.degree, dec=-17.072978613832987*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-27.624063981450256*u.deg, lon=34.845349263499656*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "78d20m47.7469629s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 303.47775931799885\u00b0 and Dec = -76.96266404590023\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -72.49619911780103\u00b0 and longitude = 119.2251447440467\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=303.47775931799885*u.degree, dec=-76.96266404590023*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-72.49619911780103*u.deg, lon=119.2251447440467*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "59d46m43.48311236s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 105.01445139519734\u00b0 and Dec = 64.28890256966832\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -15.631803907990715\u00b0 and longitude = 135.83888662781442\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=105.01445139519734*u.degree, dec=64.28890256966832*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-15.631803907990715*u.deg, lon=135.83888662781442*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "8d55m07.72352712s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 229.38908670509483\u00b0 and Dec = -89.94333072014584\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -73.45905651242323\u00b0 and longitude = 37.230210278854344\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=229.38908670509483*u.degree, dec=-89.94333072014584*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-73.45905651242323*u.deg, lon=37.230210278854344*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "73d31m50.29755108s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 354.52085161168526\u00b0 and Dec = -85.60793040158157\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -85.84250379313053\u00b0 and longitude = 158.11387964155705\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=354.52085161168526*u.degree, dec=-85.60793040158157*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-85.84250379313053*u.deg, lon=158.11387964155705*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "85d36m47.0121362s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 263.9627144250459\u00b0 and Dec = -0.7721119500834703\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -74.16480493342469\u00b0 and longitude = 18.908380232973286\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=263.9627144250459*u.degree, dec=-0.7721119500834703*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-74.16480493342469*u.deg, lon=18.908380232973286*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-2d36m29.69153325s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 323.2524808828954\u00b0 and Dec = 30.44854987575991\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -79.53723317032707\u00b0 and longitude = -110.90509137409991\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=323.2524808828954*u.degree, dec=30.44854987575991*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-79.53723317032707*u.deg, lon=-110.90509137409991*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-30d30m54.31200022s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 288.28311058559257\u00b0 and Dec = -27.90216452498983\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -15.520919249622452\u00b0 and longitude = 35.96821370478358\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=288.28311058559257*u.degree, dec=-27.90216452498983*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-15.520919249622452*u.deg, lon=35.96821370478358*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "2d49m50.43549368s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 88.35858820293056\u00b0 and Dec = -63.752487901299844\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -55.18299105948953\u00b0 and longitude = -172.71172301380855\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=88.35858820293056*u.degree, dec=-63.752487901299844*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-55.18299105948953*u.deg, lon=-172.71172301380855*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "49d02m36.49565208s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 273.1995665656443\u00b0 and Dec = 85.62141598019545\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 78.27544484860832\u00b0 and longitude = -5.349251623331611\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=273.1995665656443*u.degree, dec=85.62141598019545*u.degree, frame='icrs')\nlocation = EarthLocation(lat=78.27544484860832*u.deg, lon=-5.349251623331611*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "79d00m52.54781617s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 285.5335249567177\u00b0 and Dec = 67.77922023581581\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 16.01841913616296\u00b0 and longitude = -48.029753969620145\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=285.5335249567177*u.degree, dec=67.77922023581581*u.degree, frame='icrs')\nlocation = EarthLocation(lat=16.01841913616296*u.deg, lon=-48.029753969620145*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "20d04m17.68817578s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 180.78382505591415\u00b0 and Dec = -28.066744243253815\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 6.825139928525076\u00b0 and longitude = -100.72121216541717\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=180.78382505591415*u.degree, dec=-28.066744243253815*u.degree, frame='icrs')\nlocation = EarthLocation(lat=6.825139928525076*u.deg, lon=-100.72121216541717*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "18d16m49.64652749s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 272.7506194108081\u00b0 and Dec = 89.39832452282752\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -39.08897468949567\u00b0 and longitude = 68.93670908264838\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=272.7506194108081*u.degree, dec=89.39832452282752*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-39.08897468949567*u.deg, lon=68.93670908264838*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-39d38m17.43192105s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 6.049288332821319\u00b0 and Dec = -45.21495180234908\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -42.93750417875244\u00b0 and longitude = -58.89627596283961\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=6.049288332821319*u.degree, dec=-45.21495180234908*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-42.93750417875244*u.deg, lon=-58.89627596283961*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "35d52m11.89235568s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 203.84350676037326\u00b0 and Dec = -10.986966775613638\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -27.58420378644343\u00b0 and longitude = 14.449915071444366\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=203.84350676037326*u.degree, dec=-10.986966775613638*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-27.58420378644343*u.deg, lon=14.449915071444366*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "63d17m10.36473084s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 72.44977364767765\u00b0 and Dec = -1.9808728720440882\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 39.830457226465114\u00b0 and longitude = -18.379558178516675\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=72.44977364767765*u.degree, dec=-1.9808728720440882*u.degree, frame='icrs')\nlocation = EarthLocation(lat=39.830457226465114*u.deg, lon=-18.379558178516675*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-12d12m48.20815975s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 217.24531165483097\u00b0 and Dec = -51.33880432276145\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -29.485217269329922\u00b0 and longitude = 109.0217320993928\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=217.24531165483097*u.degree, dec=-51.33880432276145*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-29.485217269329922*u.deg, lon=109.0217320993928*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "5d40m31.71946535s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 258.07948223165005\u00b0 and Dec = 80.39479047744015\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -13.321509826514358\u00b0 and longitude = 174.5584382300391\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=258.07948223165005*u.degree, dec=80.39479047744015*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-13.321509826514358*u.deg, lon=174.5584382300391*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-14d10m43.36431125s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 149.66708796886184\u00b0 and Dec = 29.093846899062328\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 47.576013538278744\u00b0 and longitude = 83.99121862817935\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=149.66708796886184*u.degree, dec=29.093846899062328*u.degree, frame='icrs')\nlocation = EarthLocation(lat=47.576013538278744*u.deg, lon=83.99121862817935*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "14d00m59.35983545s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 277.2702353618182\u00b0 and Dec = -13.568746304259605\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -72.67137439777265\u00b0 and longitude = -64.24092157325121\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=277.2702353618182*u.degree, dec=-13.568746304259605*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-72.67137439777265*u.deg, lon=-64.24092157325121*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-3d42m01.87987508s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 16.909500965519932\u00b0 and Dec = -38.20750291372283\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 64.81897073247433\u00b0 and longitude = -143.7121371052288\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=16.909500965519932*u.degree, dec=-38.20750291372283*u.degree, frame='icrs')\nlocation = EarthLocation(lat=64.81897073247433*u.deg, lon=-143.7121371052288*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-36d38m41.13384364s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 54.170422982699826\u00b0 and Dec = -73.96735470096024\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 76.59825978807686\u00b0 and longitude = -82.98582845944689\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=54.170422982699826*u.degree, dec=-73.96735470096024*u.degree, frame='icrs')\nlocation = EarthLocation(lat=76.59825978807686*u.deg, lon=-82.98582845944689*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-81d50m17.34515208s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 55.664920708580574\u00b0 and Dec = 57.3219676877458\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 61.32178285242418\u00b0 and longitude = -69.28134057659436\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=55.664920708580574*u.degree, dec=57.3219676877458*u.degree, frame='icrs')\nlocation = EarthLocation(lat=61.32178285242418*u.deg, lon=-69.28134057659436*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "33d13m47.13620353s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 179.5572736953463\u00b0 and Dec = -5.367939913434412\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 50.17945031626624\u00b0 and longitude = 159.34580389096425\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=179.5572736953463*u.degree, dec=-5.367939913434412*u.degree, frame='icrs')\nlocation = EarthLocation(lat=50.17945031626624*u.deg, lon=159.34580389096425*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-24d51m45.38844909s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 30.661811669848362\u00b0 and Dec = 85.82392506321509\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 47.22901586566812\u00b0 and longitude = -114.14814358051797\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=30.661811669848362*u.degree, dec=85.82392506321509*u.degree, frame='icrs')\nlocation = EarthLocation(lat=47.22901586566812*u.deg, lon=-114.14814358051797*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "43d25m53.14032466s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 34.81670111090704\u00b0 and Dec = 64.28962832106049\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 22.555028065282997\u00b0 and longitude = 37.995257047481886\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=34.81670111090704*u.degree, dec=64.28962832106049*u.degree, frame='icrs')\nlocation = EarthLocation(lat=22.555028065282997*u.deg, lon=37.995257047481886*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "47d41m28.57714881s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 204.03818837234073\u00b0 and Dec = 24.745455193526666\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 52.001314035963475\u00b0 and longitude = -39.22844296499895\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=204.03818837234073*u.degree, dec=24.745455193526666*u.degree, frame='icrs')\nlocation = EarthLocation(lat=52.001314035963475*u.deg, lon=-39.22844296499895*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "27d28m50.5115684s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 167.06037422917413\u00b0 and Dec = 51.79333623953377\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -40.73905758265319\u00b0 and longitude = 72.08826411694758\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=167.06037422917413*u.degree, dec=51.79333623953377*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-40.73905758265319*u.deg, lon=72.08826411694758*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-40d47m58.42217618s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 17.12937264402754\u00b0 and Dec = -80.25541394767349\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 3.7703187682409975\u00b0 and longitude = 98.38534611938223\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=17.12937264402754*u.degree, dec=-80.25541394767349*u.degree, frame='icrs')\nlocation = EarthLocation(lat=3.7703187682409975*u.deg, lon=98.38534611938223*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-7d20m07.01141193s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 59.34515971890204\u00b0 and Dec = -60.56012903902081\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 4.785982141175154\u00b0 and longitude = 16.056392308252754\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=59.34515971890204*u.degree, dec=-60.56012903902081*u.degree, frame='icrs')\nlocation = EarthLocation(lat=4.785982141175154*u.deg, lon=16.056392308252754*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-20d16m03.27266028s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 272.64704417045465\u00b0 and Dec = 88.81666894388104\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -54.45149637146943\u00b0 and longitude = -132.6109113271997\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=272.64704417045465*u.degree, dec=88.81666894388104*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-54.45149637146943*u.deg, lon=-132.6109113271997*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-53d43m16.6928466s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 193.064204077766\u00b0 and Dec = 26.998334109934277\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -53.6534514303171\u00b0 and longitude = -29.73207174753537\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=193.064204077766*u.degree, dec=26.998334109934277*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-53.6534514303171*u.deg, lon=-29.73207174753537*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-41d06m55.39077707s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 180.4686835826254\u00b0 and Dec = -84.97800564274293\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 61.449446510050365\u00b0 and longitude = 4.331131750458297\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=180.4686835826254*u.degree, dec=-84.97800564274293*u.degree, frame='icrs')\nlocation = EarthLocation(lat=61.449446510050365*u.deg, lon=4.331131750458297*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-66d15m30.3051577s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 235.77187613747267\u00b0 and Dec = 70.51945687993245\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 79.20961068822115\u00b0 and longitude = 36.08658394017738\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=235.77187613747267*u.degree, dec=70.51945687993245*u.degree, frame='icrs')\nlocation = EarthLocation(lat=79.20961068822115*u.deg, lon=36.08658394017738*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "78d07m20.59727823s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 278.9271009540596\u00b0 and Dec = -55.09550422839361\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 30.838317150640876\u00b0 and longitude = 0.34373329310315626\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=278.9271009540596*u.degree, dec=-55.09550422839361*u.degree, frame='icrs')\nlocation = EarthLocation(lat=30.838317150640876*u.deg, lon=0.34373329310315626*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "2d06m48.14073689s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 20.495178595057837\u00b0 and Dec = -46.30024152134558\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 0.5829165483418564\u00b0 and longitude = -26.877156906750884\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=20.495178595057837*u.degree, dec=-46.30024152134558*u.degree, frame='icrs')\nlocation = EarthLocation(lat=0.5829165483418564*u.deg, lon=-26.877156906750884*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-37d24m53.64021717s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 164.63165543528297\u00b0 and Dec = 73.47550701868605\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -15.954638953961819\u00b0 and longitude = 142.24213805479258\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=164.63165543528297*u.degree, dec=73.47550701868605*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-15.954638953961819*u.deg, lon=142.24213805479258*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-24d59m03.10075688s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 162.3180517688114\u00b0 and Dec = -32.40227547984893\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 73.28386503675307\u00b0 and longitude = 140.68529617586512\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=162.3180517688114*u.degree, dec=-32.40227547984893*u.degree, frame='icrs')\nlocation = EarthLocation(lat=73.28386503675307*u.deg, lon=140.68529617586512*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-18d27m10.0577097s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 34.95227494022863\u00b0 and Dec = -31.055633160026396\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 24.495374128718822\u00b0 and longitude = -167.46377530458287\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=34.95227494022863*u.degree, dec=-31.055633160026396*u.degree, frame='icrs')\nlocation = EarthLocation(lat=24.495374128718822*u.deg, lon=-167.46377530458287*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "25d01m57.22180288s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 348.2844029198301\u00b0 and Dec = 84.86254008083469\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -1.0323945294786512\u00b0 and longitude = -90.67569428928518\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=348.2844029198301*u.degree, dec=84.86254008083469*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-1.0323945294786512*u.deg, lon=-90.67569428928518*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-6d02m25.16818086s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 11.636176260088135\u00b0 and Dec = -63.57403235730803\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -18.165735140102512\u00b0 and longitude = -92.16483309065836\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=11.636176260088135*u.degree, dec=-63.57403235730803*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-18.165735140102512*u.deg, lon=-92.16483309065836*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "5d12m28.22674263s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 170.45145600628004\u00b0 and Dec = 78.76685421758316\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 50.750028743538394\u00b0 and longitude = -110.52233425005615\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=170.45145600628004*u.degree, dec=78.76685421758316*u.degree, frame='icrs')\nlocation = EarthLocation(lat=50.750028743538394*u.deg, lon=-110.52233425005615*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "60d50m12.35018139s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 209.47574818619077\u00b0 and Dec = -47.67034288926587\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 48.74456148311964\u00b0 and longitude = -32.04891878487726\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=209.47574818619077*u.degree, dec=-47.67034288926587*u.degree, frame='icrs')\nlocation = EarthLocation(lat=48.74456148311964*u.deg, lon=-32.04891878487726*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-7d28m46.64119962s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 348.2975220029776\u00b0 and Dec = 79.7186485829626\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 43.69991015748843\u00b0 and longitude = 117.45938129936354\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=348.2975220029776*u.degree, dec=79.7186485829626*u.degree, frame='icrs')\nlocation = EarthLocation(lat=43.69991015748843*u.deg, lon=117.45938129936354*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "38d30m35.89096181s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 134.17175095607433\u00b0 and Dec = -25.221864886668698\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -66.32489548983497\u00b0 and longitude = -44.44467580724671\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=134.17175095607433*u.degree, dec=-25.221864886668698*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-66.32489548983497*u.deg, lon=-44.44467580724671*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "27d34m08.22203094s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 242.38900083080927\u00b0 and Dec = -10.535973192347157\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -25.174105977343558\u00b0 and longitude = -101.4232472967797\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=242.38900083080927*u.degree, dec=-10.535973192347157*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-25.174105977343558*u.deg, lon=-101.4232472967797*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-54d05m46.77372209s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 109.94930811504963\u00b0 and Dec = -65.53333174441116\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 86.9534870280815\u00b0 and longitude = -77.77160680804656\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=109.94930811504963*u.degree, dec=-65.53333174441116*u.degree, frame='icrs')\nlocation = EarthLocation(lat=86.9534870280815*u.deg, lon=-77.77160680804656*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-68d23m25.63779947s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 79.69230127384564\u00b0 and Dec = -13.728964189496253\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -36.258373711204946\u00b0 and longitude = 113.48052106891282\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=79.69230127384564*u.degree, dec=-13.728964189496253*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-36.258373711204946*u.deg, lon=113.48052106891282*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-36d18m53.0848619s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 63.57965357227228\u00b0 and Dec = -32.21427053537509\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -16.86401410700229\u00b0 and longitude = 16.78934919831167\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=63.57965357227228*u.degree, dec=-32.21427053537509*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-16.86401410700229*u.deg, lon=16.78934919831167*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "34d40m00.57718848s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 100.04815582679639\u00b0 and Dec = 32.431405712195215\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -84.48243184544526\u00b0 and longitude = 28.74991372027756\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=100.04815582679639*u.degree, dec=32.431405712195215*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-84.48243184544526*u.deg, lon=28.74991372027756*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-32d46m51.07343129s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 279.6386764683049\u00b0 and Dec = -68.05035898020515\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 82.74005468019655\u00b0 and longitude = -92.27111389901995\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=279.6386764683049*u.degree, dec=-68.05035898020515*u.degree, frame='icrs')\nlocation = EarthLocation(lat=82.74005468019655*u.deg, lon=-92.27111389901995*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-61d17m15.68563035s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 4.605856819193668\u00b0 and Dec = 11.084059054877784\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 10.332113937123893\u00b0 and longitude = -88.62716658644536\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=4.605856819193668*u.degree, dec=11.084059054877784*u.degree, frame='icrs')\nlocation = EarthLocation(lat=10.332113937123893*u.deg, lon=-88.62716658644536*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "17d45m02.49765804s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 161.56737536207368\u00b0 and Dec = -68.60895755059929\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 35.01980597240184\u00b0 and longitude = 89.54639801847003\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=161.56737536207368*u.degree, dec=-68.60895755059929*u.degree, frame='icrs')\nlocation = EarthLocation(lat=35.01980597240184*u.deg, lon=89.54639801847003*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-30d23m17.62911083s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 7.699821440289107\u00b0 and Dec = 59.92093770021157\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -52.22523693655449\u00b0 and longitude = -33.70262621034914\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=7.699821440289107*u.degree, dec=59.92093770021157*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-52.22523693655449*u.deg, lon=-33.70262621034914*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-30d19m38.76692067s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 174.3729373679151\u00b0 and Dec = 76.8332102587996\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 8.413022662505199\u00b0 and longitude = 128.16247932094603\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=174.3729373679151*u.degree, dec=76.8332102587996*u.degree, frame='icrs')\nlocation = EarthLocation(lat=8.413022662505199*u.deg, lon=128.16247932094603*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "14d53m29.20405393s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 320.9418330146346\u00b0 and Dec = 6.8375373956986465\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 29.86321256413649\u00b0 and longitude = -37.934901267000214\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=320.9418330146346*u.degree, dec=6.8375373956986465*u.degree, frame='icrs')\nlocation = EarthLocation(lat=29.86321256413649*u.deg, lon=-37.934901267000214*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "64d17m41.9436539s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 347.2249791931131\u00b0 and Dec = 59.23867227343209\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 26.354573661129734\u00b0 and longitude = 32.82430409584276\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=347.2249791931131*u.degree, dec=59.23867227343209*u.degree, frame='icrs')\nlocation = EarthLocation(lat=26.354573661129734*u.deg, lon=32.82430409584276*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "39d02m19.12516761s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 188.8965132081338\u00b0 and Dec = 85.9474149051812\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 47.91729177435923\u00b0 and longitude = 166.28760142669495\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=188.8965132081338*u.degree, dec=85.9474149051812*u.degree, frame='icrs')\nlocation = EarthLocation(lat=47.91729177435923*u.deg, lon=166.28760142669495*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "45d24m34.31665617s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 279.09556567439404\u00b0 and Dec = -44.50715504989831\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 55.231647821055134\u00b0 and longitude = 117.03702337549771\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=279.09556567439404*u.degree, dec=-44.50715504989831*u.degree, frame='icrs')\nlocation = EarthLocation(lat=55.231647821055134*u.deg, lon=117.03702337549771*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-78d44m16.41776316s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 33.70398278092469\u00b0 and Dec = 53.41749417217781\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 3.2989111965622016\u00b0 and longitude = 117.05697645636775\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=33.70398278092469*u.degree, dec=53.41749417217781*u.degree, frame='icrs')\nlocation = EarthLocation(lat=3.2989111965622016*u.deg, lon=117.05697645636775*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "37d16m38.05367118s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 125.79805704029975\u00b0 and Dec = -33.720588178402366\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -67.6082499165403\u00b0 and longitude = 110.8151361864443\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=125.79805704029975*u.degree, dec=-33.720588178402366*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-67.6082499165403*u.deg, lon=110.8151361864443*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "52d40m42.12222375s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 230.58522240844593\u00b0 and Dec = -88.96530393082047\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -17.99726885848486\u00b0 and longitude = -77.21813272646098\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=230.58522240844593*u.degree, dec=-88.96530393082047*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-17.99726885848486*u.deg, lon=-77.21813272646098*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "18d47m10.51015752s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 130.31662305404157\u00b0 and Dec = 9.710872576490488\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -69.95108237110333\u00b0 and longitude = 116.91354636975603\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=130.31662305404157*u.degree, dec=9.710872576490488*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-69.95108237110333*u.deg, lon=116.91354636975603*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-17d49m57.74090345s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 69.94302185505306\u00b0 and Dec = 68.43364779584277\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -7.566109602139875\u00b0 and longitude = 135.97180620904368\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=69.94302185505306*u.degree, dec=68.43364779584277*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-7.566109602139875*u.deg, lon=135.97180620904368*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "9d39m35.8963827s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 11.31637113144301\u00b0 and Dec = -88.82282731353186\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -89.46820110463476\u00b0 and longitude = 110.71192653014765\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=11.31637113144301*u.degree, dec=-88.82282731353186*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-89.46820110463476*u.deg, lon=110.71192653014765*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "89d13m19.92036622s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 148.18249422824854\u00b0 and Dec = -38.88170630290153\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -89.57066682726031\u00b0 and longitude = 85.8221335566999\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=148.18249422824854*u.degree, dec=-38.88170630290153*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-89.57066682726031*u.deg, lon=85.8221335566999*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "39d06m01.58877799s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 160.55134966697543\u00b0 and Dec = 67.29111643196211\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -5.244383865645247\u00b0 and longitude = 173.51628026790888\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=160.55134966697543*u.degree, dec=67.29111643196211*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-5.244383865645247*u.deg, lon=173.51628026790888*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-4d47m25.02979631s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 13.362816606798269\u00b0 and Dec = 20.105230447227015\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -74.36276804126649\u00b0 and longitude = 6.196901442678296\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=13.362816606798269*u.degree, dec=20.105230447227015*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-74.36276804126649*u.deg, lon=6.196901442678296*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-5d26m54.9532875s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 170.12453493771474\u00b0 and Dec = -6.98443612257428\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 44.69075974299963\u00b0 and longitude = -161.08262773229018\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=170.12453493771474*u.degree, dec=-6.98443612257428*u.degree, frame='icrs')\nlocation = EarthLocation(lat=44.69075974299963*u.deg, lon=-161.08262773229018*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "6d11m30.5246828s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 222.60896428001251\u00b0 and Dec = -68.50753716527464\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -68.20390721365389\u00b0 and longitude = -87.46041930502548\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=222.60896428001251*u.degree, dec=-68.50753716527464*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-68.20390721365389*u.deg, lon=-87.46041930502548*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "49d06m37.62871078s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 229.29877731422616\u00b0 and Dec = 28.13758963089768\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 88.11411681807058\u00b0 and longitude = -10.790585837455893\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=229.29877731422616*u.degree, dec=28.13758963089768*u.degree, frame='icrs')\nlocation = EarthLocation(lat=88.11411681807058*u.deg, lon=-10.790585837455893*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "28d35m22.13341797s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 321.5585406942928\u00b0 and Dec = -1.5106578363765664\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -29.2812699409386\u00b0 and longitude = -165.40109450099382\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=321.5585406942928*u.degree, dec=-1.5106578363765664*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-29.2812699409386*u.deg, lon=-165.40109450099382*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-33d28m48.87124761s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 339.0534557237574\u00b0 and Dec = 35.71874721121932\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -56.2556898186671\u00b0 and longitude = -84.73831879031005\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=339.0534557237574*u.degree, dec=35.71874721121932*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-56.2556898186671*u.deg, lon=-84.73831879031005*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-22d20m27.94431184s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 280.95295502505473\u00b0 and Dec = 89.7306487438886\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 11.250319927447777\u00b0 and longitude = -111.3690721143685\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=280.95295502505473*u.degree, dec=89.7306487438886*u.degree, frame='icrs')\nlocation = EarthLocation(lat=11.250319927447777*u.deg, lon=-111.3690721143685*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "11d30m35.09929918s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 266.0147128874154\u00b0 and Dec = 50.68128010655741\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -53.64081070296864\u00b0 and longitude = -39.04418729606613\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=266.0147128874154*u.degree, dec=50.68128010655741*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-53.64081070296864*u.deg, lon=-39.04418729606613*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-64d23m25.14249444s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 289.9280810957458\u00b0 and Dec = 71.2842902106045\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -59.68719601669223\u00b0 and longitude = 151.876073908772\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=289.9280810957458*u.degree, dec=71.2842902106045*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-59.68719601669223*u.deg, lon=151.876073908772*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-73d21m01.54631523s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 154.9692127961207\u00b0 and Dec = -57.00865667673288\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -88.81956324014968\u00b0 and longitude = -48.06363743870162\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=154.9692127961207*u.degree, dec=-57.00865667673288*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-88.81956324014968*u.deg, lon=-48.06363743870162*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "57d48m02.65781221s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 100.36742045565622\u00b0 and Dec = -23.868263372154814\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -54.20108667957538\u00b0 and longitude = -86.81062342908125\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=100.36742045565622*u.degree, dec=-23.868263372154814*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-54.20108667957538*u.deg, lon=-86.81062342908125*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "30d40m58.46999265s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 10.54450842988896\u00b0 and Dec = 8.391931130891962\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -18.90915502334518\u00b0 and longitude = -127.27443458974577\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=10.54450842988896*u.degree, dec=8.391931130891962*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-18.90915502334518*u.deg, lon=-127.27443458974577*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-60d19m46.40262495s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 227.83350088639247\u00b0 and Dec = 67.4268188808046\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 61.26030511869635\u00b0 and longitude = 58.90790388783569\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=227.83350088639247*u.degree, dec=67.4268188808046*u.degree, frame='icrs')\nlocation = EarthLocation(lat=61.26030511869635*u.deg, lon=58.90790388783569*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "38d36m19.77317829s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 127.30014334005854\u00b0 and Dec = -78.90043670693672\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 40.09600959938615\u00b0 and longitude = 139.29435760382813\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=127.30014334005854*u.degree, dec=-78.90043670693672*u.degree, frame='icrs')\nlocation = EarthLocation(lat=40.09600959938615*u.deg, lon=139.29435760382813*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-39d14m58.66677387s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 45.08020397722847\u00b0 and Dec = 1.135776784295814\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -60.927916778563514\u00b0 and longitude = 145.82829320730616\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=45.08020397722847*u.degree, dec=1.135776784295814*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-60.927916778563514*u.deg, lon=145.82829320730616*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-0d12m51.65015028s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 1.8645654936153955\u00b0 and Dec = 77.71974182047859\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 64.10557881630137\u00b0 and longitude = -31.946430086670716\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=1.8645654936153955*u.degree, dec=77.71974182047859*u.degree, frame='icrs')\nlocation = EarthLocation(lat=64.10557881630137*u.deg, lon=-31.946430086670716*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "70d20m39.35049961s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 348.14627522916754\u00b0 and Dec = -55.5801790254176\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 53.8556926498531\u00b0 and longitude = 118.66865695014906\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=348.14627522916754*u.degree, dec=-55.5801790254176*u.degree, frame='icrs')\nlocation = EarthLocation(lat=53.8556926498531*u.deg, lon=118.66865695014906*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-21d39m10.40473902s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 120.19398586331538\u00b0 and Dec = -59.38349479369326\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -89.9863170432984\u00b0 and longitude = -115.49980705940285\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=120.19398586331538*u.degree, dec=-59.38349479369326*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-89.9863170432984*u.deg, lon=-115.49980705940285*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "59d26m17.44596878s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 229.8415984139428\u00b0 and Dec = -83.54011609707914\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -44.93331537028117\u00b0 and longitude = 45.85357923612827\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=229.8415984139428*u.degree, dec=-83.54011609707914*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-44.93331537028117*u.deg, lon=45.85357923612827*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "46d31m35.19039887s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 282.6721734254179\u00b0 and Dec = -47.57467807960994\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 67.99414113671602\u00b0 and longitude = -36.84759543995068\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=282.6721734254179*u.degree, dec=-47.57467807960994*u.degree, frame='icrs')\nlocation = EarthLocation(lat=67.99414113671602*u.deg, lon=-36.84759543995068*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-65d20m15.45833083s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 133.31657776216795\u00b0 and Dec = 40.276845349238585\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 4.514238217207293\u00b0 and longitude = 124.98443624605551\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=133.31657776216795*u.degree, dec=40.276845349238585*u.degree, frame='icrs')\nlocation = EarthLocation(lat=4.514238217207293*u.deg, lon=124.98443624605551*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "49d13m51.40830376s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 15.079994666482683\u00b0 and Dec = 45.15692729999415\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 15.656199722822564\u00b0 and longitude = 84.08230162295666\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=15.079994666482683*u.degree, dec=45.15692729999415*u.degree, frame='icrs')\nlocation = EarthLocation(lat=15.656199722822564*u.deg, lon=84.08230162295666*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "34d29m19.28227956s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 338.8154829925521\u00b0 and Dec = -65.96492017346189\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 7.397277730231849\u00b0 and longitude = -130.55200294763415\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=338.8154829925521*u.degree, dec=-65.96492017346189*u.degree, frame='icrs')\nlocation = EarthLocation(lat=7.397277730231849*u.deg, lon=-130.55200294763415*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-27d25m54.80603938s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 314.5471663885795\u00b0 and Dec = -79.65508500368523\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -19.792458249575205\u00b0 and longitude = 83.0173803213782\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=314.5471663885795*u.degree, dec=-79.65508500368523*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-19.792458249575205*u.deg, lon=83.0173803213782*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "23d52m47.96170548s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 111.25559522399502\u00b0 and Dec = -27.053249274236947\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -78.69903447851979\u00b0 and longitude = -103.92755861606807\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=111.25559522399502*u.degree, dec=-27.053249274236947*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-78.69903447851979*u.deg, lon=-103.92755861606807*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "35d10m19.15492582s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 344.60892729727675\u00b0 and Dec = -84.61107298418194\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 77.90671052829461\u00b0 and longitude = -117.80711623397667\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=344.60892729727675*u.degree, dec=-84.61107298418194*u.degree, frame='icrs')\nlocation = EarthLocation(lat=77.90671052829461*u.deg, lon=-117.80711623397667*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-82d29m49.26630099s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 254.68344757933406\u00b0 and Dec = 12.905965462169817\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 89.92620158283927\u00b0 and longitude = -102.36293197191833\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=254.68344757933406*u.degree, dec=12.905965462169817*u.degree, frame='icrs')\nlocation = EarthLocation(lat=89.92620158283927*u.deg, lon=-102.36293197191833*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "12d56m42.34492604s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 171.45283012892176\u00b0 and Dec = -39.52898451186478\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 30.82824843830153\u00b0 and longitude = -122.9670604008862\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=171.45283012892176*u.degree, dec=-39.52898451186478*u.degree, frame='icrs')\nlocation = EarthLocation(lat=30.82824843830153*u.deg, lon=-122.9670604008862*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "4d31m54.71917632s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 169.61834181652662\u00b0 and Dec = -61.2514955339485\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -87.95488871159428\u00b0 and longitude = -23.723504344531563\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=169.61834181652662*u.degree, dec=-61.2514955339485*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-87.95488871159428*u.deg, lon=-23.723504344531563*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "59d32m27.17558782s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 290.75237950755815\u00b0 and Dec = 86.43887111621206\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 81.34208297614197\u00b0 and longitude = 10.1711015277682\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=290.75237950755815*u.degree, dec=86.43887111621206*u.degree, frame='icrs')\nlocation = EarthLocation(lat=81.34208297614197*u.deg, lon=10.1711015277682*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "81d55m13.41080603s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 183.37382582536915\u00b0 and Dec = 59.91472937858779\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 81.39306451006527\u00b0 and longitude = -165.13118216941152\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=183.37382582536915*u.degree, dec=59.91472937858779*u.degree, frame='icrs')\nlocation = EarthLocation(lat=81.39306451006527*u.deg, lon=-165.13118216941152*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "51d10m53.8619046s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 13.652078278937001\u00b0 and Dec = -33.47719536471787\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -14.598949522854852\u00b0 and longitude = -100.83300103253832\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=13.652078278937001*u.degree, dec=-33.47719536471787*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-14.598949522854852*u.deg, lon=-100.83300103253832*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "39d04m55.8429655s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 152.39863248774648\u00b0 and Dec = -54.8832769918226\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 24.50639623521255\u00b0 and longitude = 47.52992094477415\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=152.39863248774648*u.degree, dec=-54.8832769918226*u.degree, frame='icrs')\nlocation = EarthLocation(lat=24.50639623521255*u.deg, lon=47.52992094477415*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-5d32m17.42910076s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 89.14587880006592\u00b0 and Dec = -32.17765017548648\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -58.467094216092285\u00b0 and longitude = 14.521658868471121\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=89.14587880006592*u.degree, dec=-32.17765017548648*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-58.467094216092285*u.deg, lon=14.521658868471121*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "28d27m28.30567447s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 265.0703456447626\u00b0 and Dec = -58.57709554020178\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = -59.574164624360776\u00b0 and longitude = 118.81062649342226\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=265.0703456447626*u.degree, dec=-58.57709554020178*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-59.574164624360776*u.deg, lon=118.81062649342226*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "79d27m20.01174817s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 315.39309545159506\u00b0 and Dec = -0.23647573726664461\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -89.60754267858232\u00b0 and longitude = 101.74912209998342\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=315.39309545159506*u.degree, dec=-0.23647573726664461*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-89.60754267858232*u.deg, lon=101.74912209998342*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-0d07m27.72249637s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 8.295446763473002\u00b0 and Dec = -30.487914018390263\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = 16.183652632004467\u00b0 and longitude = 64.35912107692349\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=8.295446763473002*u.degree, dec=-30.487914018390263*u.degree, frame='icrs')\nlocation = EarthLocation(lat=16.183652632004467*u.deg, lon=64.35912107692349*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "27d22m24.56401323s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 257.5125601768023\u00b0 and Dec = -42.20573899380071\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -18.781894625940765\u00b0 and longitude = -174.12604254250493\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=257.5125601768023*u.degree, dec=-42.20573899380071*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-18.781894625940765*u.deg, lon=-174.12604254250493*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-28d46m12.98949009s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 125.42817723548102\u00b0 and Dec = -59.779364663341326\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -6.307436574834668\u00b0 and longitude = 172.62972197709996\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=125.42817723548102*u.degree, dec=-59.779364663341326*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-6.307436574834668*u.deg, lon=172.62972197709996*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "22d15m18.81158078s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 221.98158275327154\u00b0 and Dec = 38.889884032581136\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 58.088703190648374\u00b0 and longitude = 94.63439661361934\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=221.98158275327154*u.degree, dec=38.889884032581136*u.degree, frame='icrs')\nlocation = EarthLocation(lat=58.088703190648374*u.deg, lon=94.63439661361934*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "15d29m56.49654501s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 260.91420196575996\u00b0 and Dec = 82.32906244698023\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -21.419837238504215\u00b0 and longitude = -119.34835063260293\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=260.91420196575996*u.degree, dec=82.32906244698023*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-21.419837238504215*u.deg, lon=-119.34835063260293*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-25d20m38.30505182s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 258.70258880178966\u00b0 and Dec = -49.77134455665843\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 7.973539023084456\u00b0 and longitude = -85.16740848574479\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=258.70258880178966*u.degree, dec=-49.77134455665843*u.degree, frame='icrs')\nlocation = EarthLocation(lat=7.973539023084456*u.deg, lon=-85.16740848574479*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-4d01m08.09748423s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 147.65132052302803\u00b0 and Dec = 39.20364321954332\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = 25.389967041820157\u00b0 and longitude = 80.24602707053208\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=147.65132052302803*u.degree, dec=39.20364321954332*u.degree, frame='icrs')\nlocation = EarthLocation(lat=25.389967041820157*u.deg, lon=80.24602707053208*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-24d52m12.19551875s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 209.53741511195466\u00b0 and Dec = 7.559400036398642\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = -83.82034235173055\u00b0 and longitude = -120.07415229976654\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=209.53741511195466*u.degree, dec=7.559400036398642*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-83.82034235173055*u.deg, lon=-120.07415229976654*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-1d31m53.50444371s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 197.75222769441174\u00b0 and Dec = -78.75654878028134\u00b0, what will be its altitude above the horizon at 2023-09-08T12:00:00 local time for an observer located at latitude = 39.82275549466863\u00b0 and longitude = 13.452573969648682\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=197.75222769441174*u.degree, dec=-78.75654878028134*u.degree, frame='icrs')\nlocation = EarthLocation(lat=39.82275549466863*u.deg, lon=13.452573969648682*u.deg)\ntime = Time('2023-09-08T12:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-29d09m16.67730659s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 19.42570911557266\u00b0 and Dec = -81.8369848092062\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -42.71395332049531\u00b0 and longitude = -171.05564138606286\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=19.42570911557266*u.degree, dec=-81.8369848092062*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-42.71395332049531*u.deg, lon=-171.05564138606286*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "34d59m51.44164632s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 233.1570765368953\u00b0 and Dec = -71.11033170859145\u00b0, what will be its altitude above the horizon at 2023-09-08T23:59:59 local time for an observer located at latitude = -59.80246220178253\u00b0 and longitude = -81.22365010359597\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=233.1570765368953*u.degree, dec=-71.11033170859145*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-59.80246220178253*u.deg, lon=-81.22365010359597*u.deg)\ntime = Time('2023-09-08T23:59:59')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "72d38m21.35445962s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 251.53124842330013\u00b0 and Dec = -7.467777355228762\u00b0, what will be its altitude above the horizon at 2023-09-08T00:00:00 local time for an observer located at latitude = 64.58464807911164\u00b0 and longitude = 0.749602652746546\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=251.53124842330013*u.degree, dec=-7.467777355228762*u.degree, frame='icrs')\nlocation = EarthLocation(lat=64.58464807911164*u.deg, lon=0.749602652746546*u.deg)\ntime = Time('2023-09-08T00:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-9d13m32.36955498s"
    },
    {
        "question": "Given a celestial body with coordinates RA = 329.1738113167697\u00b0 and Dec = 2.299696138375836\u00b0, what will be its altitude above the horizon at 2023-09-08T18:00:00 local time for an observer located at latitude = -28.913546700463364\u00b0 and longitude = -135.81360696686127\u00b0?",
        "code": "from astropy.coordinates import SkyCoord, EarthLocation, AltAz\nfrom astropy.time import Time\nfrom astropy import units as u\n\nbody = SkyCoord(ra=329.1738113167697*u.degree, dec=2.299696138375836*u.degree, frame='icrs')\nlocation = EarthLocation(lat=-28.913546700463364*u.deg, lon=-135.81360696686127*u.deg)\ntime = Time('2023-09-08T18:00:00')\naltaz = body.transform_to(AltAz(obstime=time, location=location))\naltitude = altaz.alt\nresult = altitude",
        "answer": "-52d35m35.86095572s"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    },
    {
        "question": "How long will it take for light to travel from Proxima Centauri, the nearest star to Earth, to our planet?",
        "code": "from astropy import units as u\n\nproxima_distance = 4.24  # in light years\ntime_taken = proxima_distance * u.year\nresult = time_taken",
        "answer": "4.24 yr"
    }
]